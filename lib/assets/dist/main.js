(()=>{var ws=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var KF=Object.defineProperty,XF=(e=>typeof ws<"u"?ws:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof ws<"u"?ws:t)[n]}):e)(function(e){if(typeof ws<"u")return ws.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),tx=(e,t)=>{for(var n in t)KF(e,n,{get:t[n],enumerable:!0})},ZF={};tx(ZF,{Abs:()=>vl,Acos:()=>ii,Acosh:()=>oi,AdadeltaOptimizer:()=>Iw,AdagradOptimizer:()=>Sw,AdamOptimizer:()=>Nw,AdamaxOptimizer:()=>Tw,Add:()=>ts,AddN:()=>li,All:()=>kl,Any:()=>Il,ArgMax:()=>Sl,ArgMin:()=>Nl,Asin:()=>ui,Asinh:()=>pi,Atan:()=>di,Atan2:()=>ci,Atanh:()=>hi,AvgPool:()=>mi,AvgPool3D:()=>Tl,AvgPool3DGrad:()=>Wp,AvgPoolGrad:()=>Bp,BackendWasm:()=>NA,BatchMatMul:()=>fi,BatchToSpaceND:()=>Cl,Bincount:()=>_l,BitwiseAnd:()=>El,BroadcastArgs:()=>Vp,BroadcastTo:()=>DI,Callback:()=>ST,CallbackList:()=>x2,Cast:()=>gi,Ceil:()=>yi,ClipByValue:()=>ns,Complex:()=>Sc,ComplexAbs:()=>Up,Concat:()=>$l,Conv2D:()=>bi,Conv2DBackpropFilter:()=>Nc,Conv2DBackpropInput:()=>xi,Conv3D:()=>wi,Conv3DBackpropFilterV2:()=>Al,Conv3DBackpropInputV2:()=>Fl,Cos:()=>vi,Cosh:()=>ki,CropAndResize:()=>Dl,Cumprod:()=>Rl,Cumsum:()=>Ii,CustomCallback:()=>v2,DataStorage:()=>vc,DenseBincount:()=>Gp,DepthToSpace:()=>Ml,DepthwiseConv2dNative:()=>Si,DepthwiseConv2dNativeBackpropFilter:()=>Tc,DepthwiseConv2dNativeBackpropInput:()=>Cc,Diag:()=>Hp,Dilation2D:()=>Ni,Dilation2DBackpropFilter:()=>al,Dilation2DBackpropInput:()=>rl,Draw:()=>_c,ENV:()=>ix,EarlyStopping:()=>NT,Einsum:()=>Ec,Elu:()=>Ci,EluGrad:()=>Ol,Environment:()=>FI,Equal:()=>Ll,Erf:()=>_i,Exp:()=>Ei,ExpandDims:()=>zl,Expm1:()=>$i,FFT:()=>$c,Fill:()=>jp,FlipLeftRight:()=>Pl,Floor:()=>Ai,FloorDiv:()=>Fi,FromPixels:()=>jh,FusedBatchNorm:()=>Ri,FusedConv2D:()=>Ps,FusedDepthwiseConv2D:()=>Bs,GPGPUContext:()=>Wh,GatherNd:()=>Wl,GatherV2:()=>Bl,GraphModel:()=>h0,Greater:()=>Vl,GreaterEqual:()=>Di,History:()=>w2,IFFT:()=>Ac,Identity:()=>Mi,Imag:()=>Fc,InputSpec:()=>At,IsFinite:()=>Oi,IsInf:()=>Li,IsNan:()=>zi,KernelBackend:()=>zp,LRN:()=>Vi,LRNGrad:()=>Xl,LayerVariable:()=>d2,LayersModel:()=>la,LeakyRelu:()=>Pi,Less:()=>Ul,LessEqual:()=>Gl,LinSpace:()=>Hl,Log:()=>Bi,Log1p:()=>Wi,LogSoftmax:()=>OI,LogicalAnd:()=>jl,LogicalNot:()=>ql,LogicalOr:()=>Kl,LogicalXor:()=>MI,LowerBound:()=>WR,MathBackendCPU:()=>f0,MathBackendWebGL:()=>U0,MatrixBandPart:()=>VR,Max:()=>Ui,MaxPool:()=>Hi,MaxPool3D:()=>Zl,MaxPool3DGrad:()=>Kp,MaxPoolGrad:()=>qp,MaxPoolWithArgmax:()=>Xp,Maximum:()=>Gi,Mean:()=>ji,Min:()=>qi,Minimum:()=>Ki,MirrorPad:()=>Xi,Mod:()=>Zi,MomentumOptimizer:()=>Cw,Multinomial:()=>Jl,Multiply:()=>Ji,Neg:()=>Yl,NonMaxSuppressionV3:()=>eu,NonMaxSuppressionV4:()=>tu,NonMaxSuppressionV5:()=>nu,NotEqual:()=>Ql,OP_SCOPE_SUFFIX:()=>dx,OneHot:()=>Yi,OnesLike:()=>ru,Optimizer:()=>ba,OptimizerConstructors:()=>GN,Pack:()=>au,PadV2:()=>Qi,Pool:()=>UR,Pow:()=>eo,Prelu:()=>to,Prod:()=>no,RMSPropOptimizer:()=>_w,RNN:()=>xa,RaggedGather:()=>Rc,RaggedRange:()=>Dc,RaggedTensorToTensor:()=>Mc,Range:()=>Zp,Rank:()=>Zy,Real:()=>Oc,RealDiv:()=>Ti,Reciprocal:()=>ro,Reduction:()=>dn,Relu:()=>ao,Relu6:()=>oo,Reshape:()=>su,ResizeBilinear:()=>io,ResizeBilinearGrad:()=>ou,ResizeNearestNeighbor:()=>so,ResizeNearestNeighborGrad:()=>iu,Reverse:()=>lo,RotateWithOffset:()=>ku,Round:()=>uo,Rsqrt:()=>po,SGDOptimizer:()=>ym,ScatterNd:()=>lu,SearchSorted:()=>pu,Select:()=>du,Selu:()=>ho,Sequential:()=>$m,Sigmoid:()=>go,Sign:()=>fo,Sin:()=>co,Sinh:()=>mo,Slice:()=>hu,Softmax:()=>wo,Softplus:()=>yo,SpaceToBatchND:()=>cu,SparseFillEmptyRows:()=>Jp,SparseReshape:()=>fu,SparseSegmentMean:()=>Yp,SparseSegmentSum:()=>Qp,SparseToDense:()=>gu,SplitV:()=>mu,Sqrt:()=>bo,Square:()=>ed,SquaredDifference:()=>vo,StaticRegexReplace:()=>td,Step:()=>as,StridedSlice:()=>yu,StringNGrams:()=>nd,StringSplit:()=>rd,StringToHashBucketFast:()=>ad,Sub:()=>ko,Sum:()=>xo,SymbolicTensor:()=>_r,Tan:()=>Io,Tanh:()=>So,Tensor:()=>Le,TensorBuffer:()=>Ft,TensorScatterUpdate:()=>uu,Tile:()=>rs,TopK:()=>bu,Transform:()=>xu,Transpose:()=>oa,Unique:()=>sd,Unpack:()=>wu,UnsortedSegmentSum:()=>id,UpperBound:()=>GR,Variable:()=>Ws,ZerosLike:()=>vu,_FusedMatMul:()=>zs,abs:()=>$t,acos:()=>yx,acosh:()=>bx,add:()=>Y,addN:()=>uS,all:()=>Wc,any:()=>Ip,argMax:()=>Hs,argMin:()=>xx,asin:()=>wx,asinh:()=>vx,atan:()=>kx,atan2:()=>Ix,atanh:()=>Sx,avgPool:()=>fa,avgPool3d:()=>Tx,backend:()=>cx,backend_util:()=>T,basicLSTMCell:()=>cS,batchNorm:()=>No,batchNorm2d:()=>Cx,batchNorm3d:()=>_x,batchNorm4d:()=>Ex,batchToSpaceND:()=>cd,bincount:()=>$x,bitwiseAnd:()=>mS,booleanMaskAsync:()=>rN,broadcastArgs:()=>fS,broadcastTo:()=>Rs,broadcast_util:()=>Iu,browser:()=>Td,buffer:()=>Me,callbacks:()=>Pj,cast:()=>oe,ceil:()=>Ax,clipByValue:()=>on,clone:()=>Vr,complex:()=>pa,concat:()=>ot,concat1d:()=>Fx,concat2d:()=>Rx,concat3d:()=>Dx,concat4d:()=>Mx,constraints:()=>f2,conv1d:()=>Vc,conv2d:()=>mn,conv2dTranspose:()=>Uc,conv3d:()=>Lx,conv3dTranspose:()=>zx,copyRegisteredKernels:()=>KR,cos:()=>md,cosh:()=>Gc,cosineWindow:()=>hm,cumprod:()=>Tp,cumsum:()=>Hc,customGrad:()=>qr,data:()=>XT,denseBincount:()=>Zh,deprecationWarn:()=>hx,depthToSpace:()=>Px,depthwiseConv2d:()=>To,deregisterOp:()=>Vj,device_util:()=>pd,diag:()=>yS,dilation2d:()=>Bx,disableDeprecationWarnings:()=>TD,dispose:()=>Ce,disposeVariables:()=>CD,div:()=>me,divNoNan:()=>Wx,dot:()=>Vx,dropout:()=>bw,einsum:()=>Cs,elu:()=>Su,enableDebugMode:()=>ND,enableProdMode:()=>SD,enclosingPowerOfTwo:()=>xw,engine:()=>dr,ensureShape:()=>xS,env:()=>G,equal:()=>Un,erf:()=>Ux,euclideanNorm:()=>jx,exp:()=>ln,expandDims:()=>Kt,expm1:()=>qx,eye:()=>jc,fft:()=>Sd,fill:()=>Vn,findBackend:()=>RD,findBackendFactory:()=>DD,floor:()=>Tu,floorDiv:()=>Bc,forceHalfFloat:()=>xE,fused:()=>hl,gather:()=>Cu,gatherND:()=>oN,gather_util:()=>Aw,getBackend:()=>ZI,getGradient:()=>Ky,getKernel:()=>wp,getKernelsForBackend:()=>qh,getThreadsCount:()=>nme,gpgpu_util:()=>Z_,grad:()=>h3,grads:()=>c3,greater:()=>xn,greaterEqual:()=>ga,ifft:()=>dl,imag:()=>fd,image:()=>Qn,inTopKAsync:()=>lN,initializers:()=>g2,input:()=>M2,io:()=>nn,irfft:()=>sm,isFinite:()=>Kx,isInf:()=>Xx,isNaN:()=>Zx,keep:()=>Lt,kernel_impls:()=>Jr,layers:()=>y2,leakyRelu:()=>gd,less:()=>ol,lessEqual:()=>is,linalg:()=>kw,linspace:()=>SS,loadGraphModel:()=>K6,loadGraphModelSync:()=>X6,loadLayersModel:()=>MG,localResponseNormalization:()=>Jx,log:()=>Gn,log1p:()=>yd,logSigmoid:()=>Yx,logSoftmax:()=>Kc,logSumExp:()=>bd,logicalAnd:()=>mr,logicalNot:()=>xd,logicalOr:()=>Xc,logicalXor:()=>Qx,losses:()=>wN,lowerBound:()=>TS,matMul:()=>Re,math:()=>AN,max:()=>rr,maxPool:()=>Ht,maxPool3d:()=>ew,maxPoolWithArgmax:()=>CS,maximum:()=>Zr,mean:()=>vt,memory:()=>Xh,meshgrid:()=>_S,metrics:()=>vT,min:()=>il,minimum:()=>Ha,mirrorPad:()=>tw,mod:()=>nw,model:()=>zG,models:()=>kT,moments:()=>wd,movingAverage:()=>aN,mul:()=>z,multiRNNCell:()=>ES,multinomial:()=>$S,neg:()=>mt,nextFrame:()=>Fw,norm:()=>Nu,notEqual:()=>Xs,oneHot:()=>ll,ones:()=>Tn,onesLike:()=>Hn,op:()=>L,outerProduct:()=>AS,pad:()=>$r,pad1d:()=>FS,pad2d:()=>RS,pad3d:()=>DS,pad4d:()=>MS,pool:()=>rw,pow:()=>da,prelu:()=>kd,print:()=>gx,prod:()=>aw,profile:()=>_D,raggedGather:()=>OS,raggedRange:()=>LS,raggedTensorToTensor:()=>zS,rand:()=>PS,randomGamma:()=>US,randomNormal:()=>Jc,randomStandardNormal:()=>GS,randomUniform:()=>os,randomUniformInt:()=>HS,range:()=>Zs,ready:()=>AD,real:()=>ul,reciprocal:()=>uw,registerBackend:()=>Pc,registerCallbackConstructor:()=>BG,registerGradient:()=>LI,registerKernel:()=>od,registerOp:()=>Wj,regularizers:()=>IT,relu:()=>tt,relu6:()=>Yc,removeBackend:()=>FD,reshape:()=>P,reverse:()=>ir,reverse1d:()=>jS,reverse2d:()=>qS,reverse3d:()=>KS,reverse4d:()=>XS,rfft:()=>Nd,round:()=>Qc,rsqrt:()=>em,scalar:()=>we,scatterND:()=>sN,scatter_util:()=>lm,searchSorted:()=>Zc,selu:()=>tm,separableConv2d:()=>_u,sequential:()=>PG,serialization:()=>ne,setBackend:()=>$D,setPlatform:()=>MD,setThreadsCount:()=>tme,setWasmPath:()=>Qce,setWasmPaths:()=>eme,setWebGLContext:()=>w_,setdiff1dAsync:()=>ZS,shared:()=>g0,sigmoid:()=>cr,sign:()=>pw,signal:()=>xN,sin:()=>nm,sinh:()=>rm,slice:()=>Ue,slice1d:()=>Id,slice2d:()=>am,slice3d:()=>Eu,slice4d:()=>pl,slice_util:()=>Pt,softmax:()=>ls,softplus:()=>Co,spaceToBatchND:()=>vd,sparse:()=>vN,sparseToDense:()=>iN,spectral:()=>bN,split:()=>Cn,sqrt:()=>rn,square:()=>it,squaredDifference:()=>im,squeeze:()=>us,stack:()=>Rt,step:()=>_o,stridedSlice:()=>dw,string:()=>kN,sub:()=>he,sum:()=>fe,sumOutType:()=>zc,tan:()=>hw,tanh:()=>qs,tensor:()=>cn,tensor1d:()=>Qe,tensor2d:()=>Ur,tensor3d:()=>om,tensor4d:()=>ja,tensor5d:()=>JS,tensor6d:()=>YS,tensorScatterUpdate:()=>eN,tensor_util:()=>Ir,test_util:()=>BS,tidy:()=>W,tile:()=>Wn,time:()=>ED,topk:()=>mw,train:()=>Ss,transpose:()=>De,truncatedNormal:()=>pm,unique:()=>fw,unregisterGradient:()=>qR,unregisterKernel:()=>jR,unsortedSegmentSum:()=>dm,unstack:()=>Nt,upcastType:()=>ar,upperBound:()=>tN,util:()=>v,valueAndGrad:()=>m3,valueAndGrads:()=>f3,variable:()=>gw,variableGrads:()=>NS,version:()=>ume,version_converter:()=>J6,version_core:()=>PB,version_cpu:()=>Y5,version_layers:()=>tv,version_wasm:()=>rme,version_webgl:()=>W9,webgl:()=>V9,webgl_util:()=>x_,where:()=>Zt,whereAsync:()=>yw,zeros:()=>kt,zerosLike:()=>Ge});var JF=Object.create,nx=Object.defineProperty,YF=Object.getOwnPropertyDescriptor,QF=Object.getOwnPropertyNames,eR=Object.getPrototypeOf,tR=Object.prototype.hasOwnProperty,Mt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_e=(e,t)=>{for(var n in t)nx(e,n,{get:t[n],enumerable:!0})},nR=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of QF(t))!tR.call(e,a)&&a!==n&&nx(e,a,{get:()=>t[a],enumerable:!(r=YF(t,a))||r.enumerable});return e},es=(e,t,n)=>(n=e!=null?JF(eR(e)):{},nR(t||!e||!e.__esModule?nx(n,"default",{value:e,enumerable:!0}):n,e)),rR=Mt((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,M,B){this.low=S|0,this.high=M|0,this.unsigned=!!B}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,M){var B,U,H;return M?(S>>>=0,(H=0<=S&&S<256)&&(U=i[S],U)?U:(B=u(S,(S|0)<0?-1:0,!0),H&&(i[S]=B),B)):(S|=0,(H=-128<=S&&S<128)&&(U=s[S],U)?U:(B=u(S,S<0?-1:0,!1),H&&(s[S]=B),B))}r.fromInt=o;function l(S,M){if(isNaN(S))return M?w:x;if(M){if(S<0)return w;if(S>=g)return A}else{if(S<=-y)return R;if(S+1>=y)return E}return S<0?l(-S,M).neg():u(S%f|0,S/f|0,M)}r.fromNumber=l;function u(S,M,B){return new r(S,M,B)}r.fromBits=u;var p=Math.pow;function h(S,M,B){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof M=="number"?(B=M,M=!1):M=!!M,B=B||10,B<2||36<B)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return h(S.substring(1),M,B).neg();for(var H=l(p(B,8)),q=x,K=0;K<S.length;K+=8){var Z=Math.min(8,S.length-K),J=parseInt(S.substring(K,K+Z),B);if(Z<8){var ee=l(p(B,Z));q=q.mul(ee).add(l(J))}else q=q.mul(H),q=q.add(l(J))}return q.unsigned=M,q}r.fromString=h;function d(S,M){return typeof S=="number"?l(S,M):typeof S=="string"?h(S,M):u(S.low,S.high,typeof M=="boolean"?M:S.unsigned)}r.fromValue=d;var c=65536,m=1<<24,f=c*c,g=f*f,y=g/2,b=o(m),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var I=o(1);r.ONE=I;var N=o(1,!0);r.UONE=N;var C=o(-1);r.NEG_ONE=C;var E=u(-1,2147483647,!1);r.MAX_VALUE=E;var A=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var R=u(0,-2147483648,!1);r.MIN_VALUE=R;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(R)){var M=l(S),B=this.div(M),U=B.mul(M).sub(this);return B.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var H=l(p(S,6),this.unsigned),q=this,K="";;){var Z=q.div(H),J=q.sub(Z.mul(H)).toInt()>>>0,ee=J.toString(S);if(q=Z,q.isZero())return ee+K;for(;ee.length<6;)ee="0"+ee;K=""+ee+K}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(R)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,M=31;M>0&&!(S&1<<M);M--);return this.high!=0?M+33:M+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=d(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=d(S)),this.eq(S))return 0;var M=this.isNegative(),B=S.isNegative();return M&&!B?-1:!M&&B?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(R)?R:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=d(S));var M=this.high>>>16,B=this.high&65535,U=this.low>>>16,H=this.low&65535,q=S.high>>>16,K=S.high&65535,Z=S.low>>>16,J=S.low&65535,ee=0,re=0,te=0,ae=0;return ae+=H+J,te+=ae>>>16,ae&=65535,te+=U+Z,re+=te>>>16,te&=65535,re+=B+K,ee+=re>>>16,re&=65535,ee+=M+q,ee&=65535,u(te<<16|ae,ee<<16|re,this.unsigned)},F.subtract=function(S){return a(S)||(S=d(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=d(S)),n){var M=n.mul(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(R))return S.isOdd()?R:x;if(S.eq(R))return this.isOdd()?R:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var B=this.high>>>16,U=this.high&65535,H=this.low>>>16,q=this.low&65535,K=S.high>>>16,Z=S.high&65535,J=S.low>>>16,ee=S.low&65535,re=0,te=0,ae=0,se=0;return se+=q*ee,ae+=se>>>16,se&=65535,ae+=H*ee,te+=ae>>>16,ae&=65535,ae+=q*J,te+=ae>>>16,ae&=65535,te+=U*ee,re+=te>>>16,te&=65535,te+=H*J,re+=te>>>16,te&=65535,te+=q*Z,re+=te>>>16,te&=65535,re+=B*ee+U*J+H*Z+q*K,re&=65535,u(ae<<16|se,re<<16|te,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=d(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var B,U,H;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return w;if(S.gt(this.shru(1)))return N;H=w}else{if(this.eq(R)){if(S.eq(I)||S.eq(C))return R;if(S.eq(R))return I;var q=this.shr(1);return B=q.div(S).shl(1),B.eq(x)?S.isNegative()?I:C:(U=this.sub(S.mul(B)),H=B.add(U.div(S)),H)}else if(S.eq(R))return this.unsigned?w:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();H=x}for(U=this;U.gte(S);){B=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var K=Math.ceil(Math.log(B)/Math.LN2),Z=K<=48?1:p(2,K-48),J=l(B),ee=J.mul(S);ee.isNegative()||ee.gt(U);)B-=Z,J=l(B,this.unsigned),ee=J.mul(S);J.isZero()&&(J=I),H=H.add(J),U=U.sub(ee)}return H},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=d(S)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return u(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=d(S)),u(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=d(S)),u(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=d(S)),u(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):u(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):u(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var M=this.high;if(S<32){var B=this.low;return u(B>>>S|M<<32-S,M>>>S,this.unsigned)}else return S===32?u(M,0,this.unsigned):u(M>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,M=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},r.fromBytes=function(S,M,B){return B?r.fromBytesLE(S,M):r.fromBytesBE(S,M)},r.fromBytesLE=function(S,M){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,M)},r.fromBytesBE=function(S,M){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],M)}}),aR=Mt(()=>{}),sR=Mt(()=>{}),iR=Mt((e,t)=>{(function(n,r,a){function s(u){var p=this,h=l();p.next=function(){var d=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=d-(p.c=d|0)},p.c=1,p.s0=h(" "),p.s1=h(" "),p.s2=h(" "),p.s0-=h(u),p.s0<0&&(p.s0+=1),p.s1-=h(u),p.s1<0&&(p.s1+=1),p.s2-=h(u),p.s2<0&&(p.s2+=1),h=null}function i(u,p){return p.c=u.c,p.s0=u.s0,p.s1=u.s1,p.s2=u.s2,p}function o(u,p){var h=new s(u),d=p&&p.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,d&&(typeof d=="object"&&i(d,h),c.state=function(){return i(h,{})}),c}function l(){var u=4022871197,p=function(h){h=String(h);for(var d=0;d<h.length;d++){u+=h.charCodeAt(d);var c=.02519603282416938*u;u=c>>>0,c-=u,c*=u,u=c>>>0,c-=u,u+=c*4294967296}return(u>>>0)*23283064365386963e-26};return p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),oR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,p="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=p.charCodeAt(h)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,m=(p.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),lR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,p="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=p.charCodeAt(h)|0,h==p.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,m=(p.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),uR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.x,d=u.i,c,m,f;return c=h[d],c^=c>>>7,m=c^c<<24,c=h[d+1&7],m^=c^c>>>10,c=h[d+3&7],m^=c^c>>>3,c=h[d+4&7],m^=c^c<<7,c=h[d+7&7],c=c^c<<13,m^=c^c<<9,h[d]=m,u.i=d+1&7,m};function p(h,d){var c,m,f=[];if(d===(d|0))m=f[0]=d;else for(d=""+d,c=0;c<d.length;++c)f[c&7]=f[c&7]<<15^d.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],h.x=f,h.i=0,c=256;c>0;--c)h.next()}p(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,m=(p.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},d.int32=p.next,d.quick=d,h&&(h.x&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),pR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.w,d=u.X,c=u.i,m,f;return u.w=h=h+1640531527|0,f=d[c+34&127],m=d[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=d[c]=f^m,u.i=c,f+(h^h>>>16)|0};function p(h,d){var c,m,f,g,y,b=[],x=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,x=Math.max(x,d.length)),f=0,g=-32;g<x;++g)d&&(m^=d.charCodeAt((g+32)%d.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=m+y,f=c==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],c=b[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,b[f]=m^c;h.w=y,h.X=b,h.i=f}p(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,m=(p.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},d.int32=p.next,d.quick=d,h&&(h.X&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),dR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,p="";u.next=function(){var d=u.b,c=u.c,m=u.d,f=u.a;return d=d<<25^d>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^c,u.c=c=c-m|0,u.d=m<<16^c>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):p+=l;for(var h=0;h<p.length+20;h++)u.b^=p.charCodeAt(h)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,m=(p.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),hR=Mt(()=>{}),cR=Mt((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,l="random",u=a.pow(s,i),p=a.pow(2,o),h=p*2,d=s-1,c;function m(I,N,C){var E=[];N=N==!0?{entropy:!0}:N||{};var A=b(y(N.entropy?[I,w(r)]:I??x(),3),E),R=new f(E),F=function(){for(var S=R.g(i),M=u,B=0;S<p;)S=(S+B)*s,M*=s,B=R.g(1);for(;S>=h;)S/=2,M/=2,B>>>=1;return(S+B)/M};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,b(w(R.S),r),(N.pass||C||function(S,M,B,U){return U&&(U.S&&g(U,R),S.state=function(){return g(R,{})}),B?(a[l]=S,M):S})(F,A,"global"in N?N.global:this==a,N.state)}function f(I){var N,C=I.length,E=this,A=0,R=E.i=E.j=0,F=E.S=[];for(C||(I=[C++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[R=d&R+I[A%C]+(N=F[A])],F[R]=N;(E.g=function(S){for(var M,B=0,U=E.i,H=E.j,q=E.S;S--;)M=q[U=d&U+1],B=B*s+q[d&(q[U]=q[H=d&H+M])+(q[H]=M)];return E.i=U,E.j=H,B})(s)}function g(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function y(I,N){var C=[],E=typeof I,A;if(N&&E=="object")for(A in I)try{C.push(y(I[A],N-1))}catch{}return C.length?C:E=="string"?I:I+"\0"}function b(I,N){for(var C=I+"",E,A=0;A<C.length;)N[d&A]=d&(E^=N[d&A]*19)+C.charCodeAt(A++);return w(N)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),w(I)}catch{var N=n.navigator,C=N&&N.plugins;return[+new Date,n,C,n.screen,w(r)]}}function w(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=m;try{c=hR()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):a["seed"+l]=m})(typeof self<"u"?self:e,[],Math)}),wc=Mt((e,t)=>{var n=iR(),r=oR(),a=lR(),s=uR(),i=pR(),o=dR(),l=cR();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),wI=Mt(()=>{}),rx=Mt(()=>{}),vI=Mt(()=>{}),mR=Mt(()=>{}),fR=Mt(()=>{}),gR=Mt(()=>{}),yR=Mt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return ue.buffer!=Ae&&at(ue.buffer),ht}function i(){return ue.buffer!=Ae&&at(ue.buffer),Dn}function o(){return ue.buffer!=Ae&&at(ue.buffer),_t}function l(){return ue.buffer!=Ae&&at(ue.buffer),Qt}function u(){return ue.buffer!=Ae&&at(ue.buffer),vn}function p(){return ue.buffer!=Ae&&at(ue.buffer),Xn}function h(){return ue.buffer!=Ae&&at(ue.buffer),kn}var d=typeof a<"u"?a:{},c,m;d.ready=new Promise(function(D,j){c=D,m=j});var f;typeof process<"u"&&process.listeners&&(f={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],b="./this.program",x=(D,j)=>{throw j},w=typeof window=="object",I=typeof importScripts=="function",N=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function A(D){return d.locateFile?d.locateFile(D,E):E+D}var R,F,S,M;function B(D){D instanceof bs||J("exiting due to exception: "+D)}if(N){var U=rx(),H=vI();I?E=H.dirname(E)+"/":E=__dirname+"/",R=(j,le)=>(j=Po(j)?new URL(j):H.normalize(j),U.readFileSync(j,le?void 0:"utf8")),S=j=>{var le=R(j,!0);return le.buffer||(le=new Uint8Array(le)),le},F=(j,le,Ne)=>{j=Po(j)?new URL(j):H.normalize(j),U.readFile(j,function(Fe,$e){Fe?Ne(Fe):le($e.buffer)})},process.argv.length>1&&(b=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(j){if(!(j instanceof bs))throw j}),process.on("unhandledRejection",function(j){throw j}),x=(j,le)=>{if(lr())throw process.exitCode=j,le;B(le),process.exit(j)},d.inspect=function(){return"[Emscripten Module object]"};let D;try{D=mR()}catch(j){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),j}global.Worker=D.Worker}else(w||I)&&(I?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",N||(R=D=>{var j=new XMLHttpRequest;return j.open("GET",D,!1),j.send(null),j.responseText},I&&(S=D=>{var j=new XMLHttpRequest;return j.open("GET",D,!1),j.responseType="arraybuffer",j.send(null),new Uint8Array(j.response)}),F=(D,j,le)=>{var Ne=new XMLHttpRequest;Ne.open("GET",D,!0),Ne.responseType="arraybuffer",Ne.onload=()=>{if(Ne.status==200||Ne.status==0&&Ne.response){j(Ne.response);return}le()},Ne.onerror=le,Ne.send(null)}),M=D=>document.title=D);N&&typeof performance>"u"&&(global.performance=fR().performance);var q=console.log.bind(console),K=console.warn.bind(console);N&&(q=D=>U.writeSync(1,D+`
`),K=D=>U.writeSync(2,D+`
`));var Z=d.print||q,J=d.printErr||K;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(b=d.thisProgram),d.quit&&(x=d.quit);var ee=4,re=Atomics.load,te=Atomics.store,ae=Atomics.compareExchange,se;d.wasmBinary&&(se=d.wasmBinary);var xe=d.noExitRuntime||!0;typeof WebAssembly!="object"&&ys("no native wasm support detected");var ue,be,ke=!1,Se;function Oe(D,j){D||ys(j)}var We=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function pt(D,j,le){j>>>=0;for(var Ne=j+le,Fe=j;D[Fe]&&!(Fe>=Ne);)++Fe;if(Fe-j>16&&D.buffer&&We)return We.decode(D.buffer instanceof SharedArrayBuffer?D.slice(j,Fe):D.subarray(j,Fe));for(var $e="";j<Fe;){var ce=D[j++];if(!(ce&128)){$e+=String.fromCharCode(ce);continue}var ve=D[j++]&63;if((ce&224)==192){$e+=String.fromCharCode((ce&31)<<6|ve);continue}var wt=D[j++]&63;if((ce&240)==224?ce=(ce&15)<<12|ve<<6|wt:ce=(ce&7)<<18|ve<<12|wt<<6|D[j++]&63,ce<65536)$e+=String.fromCharCode(ce);else{var Jn=ce-65536;$e+=String.fromCharCode(55296|Jn>>10,56320|Jn&1023)}}return $e}function Ye(D,j){return D>>>=0,D?pt(i(),D,j):""}function Ze(D,j,le,Ne){if(le>>>=0,!(Ne>0))return 0;for(var Fe=le,$e=le+Ne-1,ce=0;ce<D.length;++ce){var ve=D.charCodeAt(ce);if(ve>=55296&&ve<=57343){var wt=D.charCodeAt(++ce);ve=65536+((ve&1023)<<10)|wt&1023}if(ve<=127){if(le>=$e)break;j[le++>>>0]=ve}else if(ve<=2047){if(le+1>=$e)break;j[le++>>>0]=192|ve>>6,j[le++>>>0]=128|ve&63}else if(ve<=65535){if(le+2>=$e)break;j[le++>>>0]=224|ve>>12,j[le++>>>0]=128|ve>>6&63,j[le++>>>0]=128|ve&63}else{if(le+3>=$e)break;j[le++>>>0]=240|ve>>18,j[le++>>>0]=128|ve>>12&63,j[le++>>>0]=128|ve>>6&63,j[le++>>>0]=128|ve&63}}return j[le>>>0]=0,le-Fe}function Je(D,j,le){return Ze(D,i(),j,le)}var Ae,ht,Dn,_t,Kn,Qt,vn,Xn,kn;C&&(Ae=d.buffer);function at(D){Ae=D,d.HEAP8=ht=new Int8Array(D),d.HEAP16=_t=new Int16Array(D),d.HEAP32=Qt=new Int32Array(D),d.HEAPU8=Dn=new Uint8Array(D),d.HEAPU16=Kn=new Uint16Array(D),d.HEAPU32=vn=new Uint32Array(D),d.HEAPF32=Xn=new Float32Array(D),d.HEAPF64=kn=new Float64Array(D)}var In=d.INITIAL_MEMORY||16777216;if(C)ue=d.wasmMemory,Ae=d.buffer;else if(d.wasmMemory)ue=d.wasmMemory;else if(ue=new WebAssembly.Memory({initial:In/65536,maximum:65536,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),N&&J("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ue&&(Ae=ue.buffer),In=Ae.byteLength,at(Ae);var Mn,Qr=[],Lo=[],Fr=[],Gu=!1;function lr(){return xe}function va(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Xm(d.preRun.shift());ju(Qr)}function Ut(){Gu=!0,!C&&ju(Lo)}function Ud(){if(!C){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)v1(d.postRun.shift());ju(Fr)}}function Xm(D){Qr.unshift(D)}function Zm(D){Lo.unshift(D)}function v1(D){Fr.unshift(D)}var ka=0,zo=null,ea=null;function Jm(D){ka++,d.monitorRunDependencies&&d.monitorRunDependencies(ka)}function Gd(D){if(ka--,d.monitorRunDependencies&&d.monitorRunDependencies(ka),ka==0&&(zo!==null&&(clearInterval(zo),zo=null),ea)){var j=ea;ea=null,j()}}function ys(D){d.onAbort&&d.onAbort(D),D="Aborted("+D+")",J(D),ke=!0,Se=1,D+=". Build with -sASSERTIONS for more info.";var j=new WebAssembly.RuntimeError(D);throw m(j),j}var Ym="data:application/octet-stream;base64,";function Hd(D){return D.startsWith(Ym)}function Po(D){return D.startsWith("file://")}var sn;sn="tfjs-backend-wasm-threaded-simd.wasm",Hd(sn)||(sn=A(sn));function jd(D){try{if(D==sn&&se)return new Uint8Array(se);if(S)return S(D);throw"both async and sync fetching of the wasm failed"}catch(j){ys(j)}}function Qm(){if(!se&&(w||I)){if(typeof fetch=="function"&&!Po(sn))return fetch(sn,{credentials:"same-origin"}).then(function(D){if(!D.ok)throw"failed to load wasm binary file at '"+sn+"'";return D.arrayBuffer()}).catch(function(){return jd(sn)});if(F)return new Promise(function(D,j){F(sn,function(le){D(new Uint8Array(le))},j)})}return Promise.resolve().then(function(){return jd(sn)})}function ef(){var D={env:sh,wasi_snapshot_preview1:sh};function j(ce,ve){var wt=ce.exports;if(d.asm=wt,pf(d.asm._emscripten_tls_init),Mn=d.asm.__indirect_function_table,Zm(d.asm.__wasm_call_ctors),be=ve,!C){var Jn=Ee.unusedWorkers.length;Ee.unusedWorkers.forEach(function(na){Ee.loadWasmModuleToWorker(na,function(){--Jn||Gd("wasm-instantiate")})})}}C||Jm("wasm-instantiate");function le(ce){j(ce.instance,ce.module)}function Ne(ce){return Qm().then(function(ve){return WebAssembly.instantiate(ve,D)}).then(function(ve){return ve}).then(ce,function(ve){J("failed to asynchronously prepare wasm: "+ve),ys(ve)})}function Fe(){return!se&&typeof WebAssembly.instantiateStreaming=="function"&&!Hd(sn)&&!Po(sn)&&!N&&typeof fetch=="function"?fetch(sn,{credentials:"same-origin"}).then(function(ce){var ve=WebAssembly.instantiateStreaming(ce,D);return ve.then(le,function(wt){return J("wasm streaming compile failed: "+wt),J("falling back to ArrayBuffer instantiation"),Ne(le)})}):Ne(le)}if(d.instantiateWasm)try{var $e=d.instantiateWasm(D,j);return $e}catch(ce){J("Module.instantiateWasm callback failed with error: "+ce),m(ce)}return Fe().catch(m),{}}var k1,I1,qd={};function bs(D){this.name="ExitStatus",this.message="Program terminated with exit("+D+")",this.status=D}function tf(D){var j=Ee.pthreads[D];delete Ee.pthreads[D],j.terminate(),Ty(D),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf(j),1),j.pthread_ptr=0}function nf(D){var j=Ee.pthreads[D];j.postMessage({cmd:"cancel"})}function Hu(D){var j=Ee.pthreads[D];Oe(j),Ee.returnWorkerToPool(j)}function rf(D){var j=Ee.getNewWorker();if(!j)return 6;Ee.runningWorkers.push(j),Ee.pthreads[D.pthread_ptr]=j,j.pthread_ptr=D.pthread_ptr;var le={cmd:"run",start_routine:D.startRoutine,arg:D.arg,pthread_ptr:D.pthread_ptr};return j.runPthread=()=>{N&&j.ref(),j.postMessage(le,D.transferList),delete j.runPthread},j.loaded&&j.runPthread(),0}var Kd={varargs:void 0,get:function(){Kd.varargs+=4;var D=l()[Kd.varargs-4>>>2];return D},getStr:function(D){var j=Ye(D);return j}};function Xd(D){if(C)return Ia(1,1,D);Se=D,lr()||(Ee.terminateAllThreads(),d.onExit&&d.onExit(D),ke=!0),x(D,new bs(D))}function af(D,j){if(Se=D,!j&&C)throw Jd(D),"unwind";Xd(D)}var Zd=af;function sf(D){if(D instanceof bs||D=="unwind")return Se;x(1,D)}var Ee={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){C?Ee.initWorker():Ee.initMainThread()},initMainThread:function(){for(var D=8;D--;)Ee.allocateUnusedWorker()},initWorker:function(){xe=!1},setExitStatus:function(D){Se=D},terminateAllThreads:function(){for(var D of Object.values(Ee.pthreads))Ee.returnWorkerToPool(D);for(var D of Ee.unusedWorkers)D.terminate();Ee.unusedWorkers=[]},returnWorkerToPool:function(D){var j=D.pthread_ptr;delete Ee.pthreads[j],Ee.unusedWorkers.push(D),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf(D),1),D.pthread_ptr=0,N&&D.unref(),Ty(j)},receiveObjectTransfer:function(D){},threadInitTLS:function(){Ee.tlsInitFunctions.forEach(D=>D())},loadWasmModuleToWorker:function(D,j){D.onmessage=$e=>{var ce=$e.data,ve=ce.cmd;if(D.pthread_ptr&&(Ee.currentProxiedOperationCallerThread=D.pthread_ptr),ce.targetThread&&ce.targetThread!=dh()){var wt=Ee.pthreads[ce.targetThread];wt?wt.postMessage(ce,ce.transferList):J('Internal error! Worker sent a message "'+ve+'" to target pthread '+ce.targetThread+", but that thread no longer exists!"),Ee.currentProxiedOperationCallerThread=void 0;return}ve==="processProxyingQueue"?qu(ce.queue):ve==="spawnThread"?rf(ce):ve==="cleanupThread"?Hu(ce.thread):ve==="killThread"?tf(ce.thread):ve==="cancelThread"?nf(ce.thread):ve==="loaded"?(D.loaded=!0,N&&D.unref(),j&&j(D),D.runPthread&&D.runPthread()):ve==="print"?Z("Thread "+ce.threadId+": "+ce.text):ve==="printErr"?J("Thread "+ce.threadId+": "+ce.text):ve==="alert"?alert("Thread "+ce.threadId+": "+ce.text):ce.target==="setimmediate"?D.postMessage(ce):ve==="callHandler"?d[ce.handler](...ce.args):ve&&J("worker sent an unknown command "+ve),Ee.currentProxiedOperationCallerThread=void 0},D.onerror=$e=>{var ce="worker sent an error!";throw J(ce+" "+$e.filename+":"+$e.lineno+": "+$e.message),$e},N&&(D.on("message",function($e){D.onmessage({data:$e})}),D.on("error",function($e){D.onerror($e)}),D.on("detachedExit",function(){}));var le=[],Ne=["onExit","onAbort","print","printErr"];for(var Fe of Ne)d.hasOwnProperty(Fe)&&le.push(Fe);D.postMessage({cmd:"load",handlers:le,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:ue,wasmModule:be})},allocateUnusedWorker:function(){var D,j=A("tfjs-backend-wasm-threaded-simd.worker.js");D=new Worker(j),Ee.unusedWorkers.push(D)},getNewWorker:function(){return Ee.unusedWorkers.length==0&&(Ee.allocateUnusedWorker(),Ee.loadWasmModuleToWorker(Ee.unusedWorkers[0])),Ee.unusedWorkers.pop()}};d.PThread=Ee;function ju(D){for(;D.length>0;)D.shift()(d)}function of(){var D=dh(),j=l()[D+52>>>2],le=l()[D+56>>>2],Ne=j-le;E1(j,Ne),hh(j)}d.establishStackSpace=of;function Jd(D){if(C)return Ia(2,0,D);try{Zd(D)}catch(j){sf(j)}}var Bo=[];function lf(D){var j=Bo[D];return j||(D>=Bo.length&&(Bo.length=D+1),Bo[D]=j=Mn.get(D)),j}function uf(D,j){var le=lf(D)(j);lr()?Ee.setExitStatus(le):_1(le)}d.invokeEntryPoint=uf;function pf(D){Ee.tlsInitFunctions.push(D)}function df(D){N1(D,!I,1,!w),Ee.threadInitTLS()}function hf(D){C?postMessage({cmd:"cleanupThread",thread:D}):Hu(D)}function Yd(D,j,le,Ne){return C?Ia(3,1,D,j,le,Ne):Qd(D,j,le,Ne)}function Qd(D,j,le,Ne){if(typeof SharedArrayBuffer>"u")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Fe=[],$e=0;if(C&&(Fe.length===0||$e))return Yd(D,j,le,Ne);if($e)return $e;var ce={startRoutine:le,pthread_ptr:D,arg:Ne,transferList:Fe};return C?(ce.cmd="spawnThread",postMessage(ce,Fe),0):rf(ce)}function cf(){return 65536}var mf=!0;function ff(){return mf}function qu(D){Atomics.store(l(),D>>2,1),dh()&&C1(D),Atomics.compareExchange(l(),D>>2,1,0)}d.executeNotifiedProxyingQueue=qu;function gf(D,j,le,Ne){if(D==j)setTimeout(()=>qu(Ne));else if(C)postMessage({targetThread:D,cmd:"processProxyingQueue",queue:Ne});else{var Fe=Ee.pthreads[D];if(!Fe)return;Fe.postMessage({cmd:"processProxyingQueue",queue:Ne})}return 1}function yf(D,j,le){return-1}function bf(){ys("")}function xs(D){xs.shown||(xs.shown={}),xs.shown[D]||(xs.shown[D]=1,N&&(D="warning: "+D),J(D))}function xf(){N||I||xs("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function wf(){return Date.now()}function eh(){return 4294901760}function vf(){return eh()}var Ku;N?Ku=()=>{var D=process.hrtime();return D[0]*1e3+D[1]/1e6}:Ku=()=>performance.timeOrigin+performance.now();function kf(D,j,le){i().copyWithin(D>>>0,j>>>0,j+le>>>0)}function If(){return N?gR().cpus().length:navigator.hardwareConcurrency}function Sf(D){var j=Cy(),le=D();return hh(j),le}function Ia(D,j){var le=arguments.length-2,Ne=arguments;return Sf(()=>{for(var Fe=le,$e=ch(Fe*8),ce=$e>>3,ve=0;ve<le;ve++){var wt=Ne[2+ve];h()[ce+ve>>>0]=wt}return T1(D,Fe,$e,j)})}var Xu=[];function Nf(D,j,le){Xu.length=j;for(var Ne=le>>3,Fe=0;Fe<j;Fe++)Xu[Fe]=h()[Ne+Fe>>>0];var $e=D<0,ce=$e?qd[-D-1]:Df[D];return ce.apply(null,Xu)}function Tf(D){try{return ue.grow(D-Ae.byteLength+65535>>>16),at(ue.buffer),1}catch{}}function Cf(D){var j=i().length;if(D=D>>>0,D<=j)return!1;var le=eh();if(D>le)return!1;let Ne=(wt,Jn)=>wt+(Jn-wt%Jn)%Jn;for(var Fe=1;Fe<=4;Fe*=2){var $e=j*(1+.2/Fe);$e=Math.min($e,D+100663296);var ce=Math.min(le,Ne(Math.max(D,$e),65536)),ve=Tf(ce);if(ve)return!0}return!1}function _f(){throw"unwind"}function th(D){return C?Ia(4,1,D):52}function nh(D,j,le,Ne,Fe){return C?Ia(5,1,D,j,le,Ne,Fe):70}var Ef=[null,[],[]];function $f(D,j){var le=Ef[D];j===0||j===10?((D===1?Z:J)(pt(le,0)),le.length=0):le.push(j)}function rh(D,j,le,Ne){if(C)return Ia(6,1,D,j,le,Ne);for(var Fe=0,$e=0;$e<le;$e++){var ce=u()[j>>>2],ve=u()[j+4>>>2];j+=8;for(var wt=0;wt<ve;wt++)$f(D,i()[ce+wt>>>0]);Fe+=ve}return u()[Ne>>>2]=Fe,0}function ah(D){var j=d["_"+D];return j}function Af(D,j){s().set(D,j>>>0)}function Ff(D,j,le,Ne,Fe){var $e={string:Yn=>{var Go=0;if(Yn!=null&&Yn!==0){var F1=(Yn.length<<2)+1;Go=ch(F1),Je(Yn,Go,F1)}return Go},array:Yn=>{var Go=ch(Yn.length);return Af(Yn,Go),Go}};function ce(Yn){return j==="string"?Ye(Yn):j==="boolean"?!!Yn:Yn}var ve=ah(D),wt=[],Jn=0;if(Ne)for(var na=0;na<Ne.length;na++){var A1=$e[le[na]];A1?(Jn===0&&(Jn=Cy()),wt[na]=A1(Ne[na])):wt[na]=Ne[na]}var _y=ve.apply(null,wt);function qF(Yn){return Jn!==0&&hh(Jn),ce(Yn)}return _y=qF(_y),_y}function Rf(D,j,le,Ne){le=le||[];var Fe=le.every(ce=>ce==="number"||ce==="boolean"),$e=j!=="string";return $e&&Fe&&!Ne?ah(D):function(){return Ff(D,j,le,arguments,Ne)}}Ee.init();var Df=[null,Xd,Jd,Yd,th,nh,rh],sh={__emscripten_init_main_thread_js:df,__emscripten_thread_cleanup:hf,__pthread_create_js:Qd,_emscripten_default_pthread_stack_size:cf,_emscripten_get_now_is_monotonic:ff,_emscripten_notify_task_queue:gf,_emscripten_set_offscreencanvas_size:yf,abort:bf,emscripten_check_blocking_allowed:xf,emscripten_date_now:wf,emscripten_get_heap_max:vf,emscripten_get_now:Ku,emscripten_memcpy_big:kf,emscripten_num_logical_cores:If,emscripten_receive_on_main_thread_js:Nf,emscripten_resize_heap:Cf,emscripten_unwind_to_js_event_loop:_f,exit:Zd,fd_close:th,fd_seek:nh,fd_write:rh,memory:ue||d.wasmMemory},S1=ef(),Mf=d.___wasm_call_ctors=function(){return(Mf=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},Of=d._init=function(){return(Of=d._init=d.asm.init).apply(null,arguments)},Lf=d._init_with_threads_count=function(){return(Lf=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},zf=d._get_threads_count=function(){return(zf=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},Pf=d._register_tensor=function(){return(Pf=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},Bf=d._dispose_data=function(){return(Bf=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},Wf=d._dispose=function(){return(Wf=d._dispose=d.asm.dispose).apply(null,arguments)},Vf=d._Abs=function(){return(Vf=d._Abs=d.asm.Abs).apply(null,arguments)},Uf=d._Acos=function(){return(Uf=d._Acos=d.asm.Acos).apply(null,arguments)},Gf=d._Acosh=function(){return(Gf=d._Acosh=d.asm.Acosh).apply(null,arguments)},Hf=d._Add=function(){return(Hf=d._Add=d.asm.Add).apply(null,arguments)},jf=d._AddN=function(){return(jf=d._AddN=d.asm.AddN).apply(null,arguments)},qf=d._All=function(){return(qf=d._All=d.asm.All).apply(null,arguments)},Kf=d._Any=function(){return(Kf=d._Any=d.asm.Any).apply(null,arguments)},Xf=d._ArgMax=function(){return(Xf=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},Zf=d._ArgMin=function(){return(Zf=d._ArgMin=d.asm.ArgMin).apply(null,arguments)},Jf=d._Asin=function(){return(Jf=d._Asin=d.asm.Asin).apply(null,arguments)},Yf=d._Asinh=function(){return(Yf=d._Asinh=d.asm.Asinh).apply(null,arguments)},Qf=d._Atan=function(){return(Qf=d._Atan=d.asm.Atan).apply(null,arguments)},eg=d._Atan2=function(){return(eg=d._Atan2=d.asm.Atan2).apply(null,arguments)},tg=d._Atanh=function(){return(tg=d._Atanh=d.asm.Atanh).apply(null,arguments)},ng=d._AvgPool=function(){return(ng=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},rg=d._AvgPool3D=function(){return(rg=d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},ag=d._AvgPool3DGrad=function(){return(ag=d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},sg=d._AvgPoolGrad=function(){return(sg=d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},ig=d._BatchMatMul=function(){return(ig=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},og=d._Bincount=function(){return(og=d._Bincount=d.asm.Bincount).apply(null,arguments)},lg=d._BitwiseAnd=function(){return(lg=d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},ug=d._Ceil=function(){return(ug=d._Ceil=d.asm.Ceil).apply(null,arguments)},pg=d._ClipByValue=function(){return(pg=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},dg=d._Conv2D=function(){return(dg=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},hg=d._Conv2DBackpropInput=function(){return(hg=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},cg=d._Conv3D=function(){return(cg=d._Conv3D=d.asm.Conv3D).apply(null,arguments)},mg=d._Conv3DBackpropFilterV2=function(){return(mg=d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},fg=d._Conv3DBackpropInputV2=function(){return(fg=d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},gg=d._Cos=function(){return(gg=d._Cos=d.asm.Cos).apply(null,arguments)},yg=d._Cosh=function(){return(yg=d._Cosh=d.asm.Cosh).apply(null,arguments)},bg=d._CropAndResize=function(){return(bg=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},xg=d._Cumprod=function(){return(xg=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},wg=d._Cumsum=function(){return(wg=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},vg=d._DenseBincount=function(){return(vg=d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},kg=d._DepthToSpace=function(){return(kg=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},Ig=d._DepthwiseConv2dNative=function(){return(Ig=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},Sg=d._Diag=function(){return(Sg=d._Diag=d.asm.Diag).apply(null,arguments)},Ng=d._Dilation2D=function(){return(Ng=d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},Tg=d._Dilation2DBackpropFilter=function(){return(Tg=d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},Cg=d._Dilation2DBackpropInput=function(){return(Cg=d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},_g=d._Elu=function(){return(_g=d._Elu=d.asm.Elu).apply(null,arguments)},Eg=d._EluGrad=function(){return(Eg=d._EluGrad=d.asm.EluGrad).apply(null,arguments)},$g=d._Equal=function(){return($g=d._Equal=d.asm.Equal).apply(null,arguments)},Ag=d._Erf=function(){return(Ag=d._Erf=d.asm.Erf).apply(null,arguments)},Fg=d._Exp=function(){return(Fg=d._Exp=d.asm.Exp).apply(null,arguments)},Rg=d._Expm1=function(){return(Rg=d._Expm1=d.asm.Expm1).apply(null,arguments)},Dg=d._FlipLeftRight=function(){return(Dg=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},Mg=d._Floor=function(){return(Mg=d._Floor=d.asm.Floor).apply(null,arguments)},Og=d._FloorDiv=function(){return(Og=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},Lg=d._FusedBatchNorm=function(){return(Lg=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},zg=d._FusedConv2D=function(){return(zg=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},Pg=d._FusedDepthwiseConv2D=function(){return(Pg=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},Bg=d._Gather=function(){return(Bg=d._Gather=d.asm.Gather).apply(null,arguments)},Wg=d._GatherNd=function(){return(Wg=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},Vg=d._Greater=function(){return(Vg=d._Greater=d.asm.Greater).apply(null,arguments)},Ug=d._GreaterEqual=function(){return(Ug=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Gg=d._IsFinite=function(){return(Gg=d._IsFinite=d.asm.IsFinite).apply(null,arguments)},Hg=d._IsInf=function(){return(Hg=d._IsInf=d.asm.IsInf).apply(null,arguments)},jg=d._IsNan=function(){return(jg=d._IsNan=d.asm.IsNan).apply(null,arguments)},qg=d._LRN=function(){return(qg=d._LRN=d.asm.LRN).apply(null,arguments)},Kg=d._LRNGrad=function(){return(Kg=d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},Xg=d._LeakyRelu=function(){return(Xg=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Zg=d._Less=function(){return(Zg=d._Less=d.asm.Less).apply(null,arguments)},Jg=d._LessEqual=function(){return(Jg=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},Yg=d._LinSpace=function(){return(Yg=d._LinSpace=d.asm.LinSpace).apply(null,arguments)},Qg=d._Log=function(){return(Qg=d._Log=d.asm.Log).apply(null,arguments)},ey=d._Log1p=function(){return(ey=d._Log1p=d.asm.Log1p).apply(null,arguments)},ty=d._LogicalAnd=function(){return(ty=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},ny=d._LogicalNot=function(){return(ny=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},ry=d._LogicalOr=function(){return(ry=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},ay=d._LogicalXor=function(){return(ay=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},sy=d._Max=function(){return(sy=d._Max=d.asm.Max).apply(null,arguments)},iy=d._MaxPool=function(){return(iy=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},oy=d._MaxPool3D=function(){return(oy=d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},ly=d._MaxPool3DGrad=function(){return(ly=d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},uy=d._MaxPoolGrad=function(){return(uy=d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},py=d._MaxPoolWithArgmax=function(){return(py=d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},dy=d._Maximum=function(){return(dy=d._Maximum=d.asm.Maximum).apply(null,arguments)},hy=d._Mean=function(){return(hy=d._Mean=d.asm.Mean).apply(null,arguments)},cy=d._Min=function(){return(cy=d._Min=d.asm.Min).apply(null,arguments)},my=d._Minimum=function(){return(my=d._Minimum=d.asm.Minimum).apply(null,arguments)},fy=d._MirrorPad=function(){return(fy=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},gy=d._Mod=function(){return(gy=d._Mod=d.asm.Mod).apply(null,arguments)},yy=d._Multinomial=function(){return(yy=d._Multinomial=d.asm.Multinomial).apply(null,arguments)},by=d._Multiply=function(){return(by=d._Multiply=d.asm.Multiply).apply(null,arguments)},xy=d._Neg=function(){return(xy=d._Neg=d.asm.Neg).apply(null,arguments)},wy=d._NonMaxSuppressionV3=function(){return(wy=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},vy=d._NonMaxSuppressionV4=function(){return(vy=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},ih=d._NonMaxSuppressionV5=function(){return(ih=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},oh=d._NotEqual=function(){return(oh=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},Zu=d._OneHot=function(){return(Zu=d._OneHot=d.asm.OneHot).apply(null,arguments)},ky=d._PadV2=function(){return(ky=d._PadV2=d.asm.PadV2).apply(null,arguments)},Iy=d._Pow=function(){return(Iy=d._Pow=d.asm.Pow).apply(null,arguments)},Wo=d._Prelu=function(){return(Wo=d._Prelu=d.asm.Prelu).apply(null,arguments)},lh=d._Prod=function(){return(lh=d._Prod=d.asm.Prod).apply(null,arguments)},Vo=d._RealDiv=function(){return(Vo=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},Uo=d._Reciprocal=function(){return(Uo=d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},Sy=d._Relu=function(){return(Sy=d._Relu=d.asm.Relu).apply(null,arguments)},X=d._Relu6=function(){return(X=d._Relu6=d.asm.Relu6).apply(null,arguments)},ie=d._ResizeBilinear=function(){return(ie=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},Ie=d._ResizeBilinearGrad=function(){return(Ie=d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},je=d._ResizeNearestNeighbor=function(){return(je=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},gt=d._ResizeNearestNeighborGrad=function(){return(gt=d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},yt=d._Reverse=function(){return(yt=d._Reverse=d.asm.Reverse).apply(null,arguments)},Ve=d._RotateWithOffset=function(){return(Ve=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},Be=d._Round=function(){return(Be=d._Round=d.asm.Round).apply(null,arguments)},Et=d._Rsqrt=function(){return(Et=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},Zn=d._ScatterNd=function(){return(Zn=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},ta=d._SearchSorted=function(){return(ta=d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},uh=d._SelectV2=function(){return(uh=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},Ju=d._Selu=function(){return(Ju=d._Selu=d.asm.Selu).apply(null,arguments)},Ny=d._Sigmoid=function(){return(Ny=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},Sn=d._Sign=function(){return(Sn=d._Sign=d.asm.Sign).apply(null,arguments)},Sa=d._Sin=function(){return(Sa=d._Sin=d.asm.Sin).apply(null,arguments)},ph=d._Sinh=function(){return(ph=d._Sinh=d.asm.Sinh).apply(null,arguments)},fF=d._Softmax=function(){return(fF=d._Softmax=d.asm.Softmax).apply(null,arguments)},gF=d._Softplus=function(){return(gF=d._Softplus=d.asm.Softplus).apply(null,arguments)},yF=d._SparseFillEmptyRows=function(){return(yF=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},bF=d._SparseReshape=function(){return(bF=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},xF=d._SparseSegmentReduction=function(){return(xF=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},wF=d._SparseToDense=function(){return(wF=d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},vF=d._Sqrt=function(){return(vF=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},kF=d._Square=function(){return(kF=d._Square=d.asm.Square).apply(null,arguments)},IF=d._SquaredDifference=function(){return(IF=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},SF=d._Step=function(){return(SF=d._Step=d.asm.Step).apply(null,arguments)},NF=d._StridedSlice=function(){return(NF=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},TF=d._Sub=function(){return(TF=d._Sub=d.asm.Sub).apply(null,arguments)},CF=d._Sum=function(){return(CF=d._Sum=d.asm.Sum).apply(null,arguments)},_F=d._Tan=function(){return(_F=d._Tan=d.asm.Tan).apply(null,arguments)},EF=d._Tanh=function(){return(EF=d._Tanh=d.asm.Tanh).apply(null,arguments)},$F=d._TensorScatterUpdate=function(){return($F=d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},AF=d._Tile=function(){return(AF=d._Tile=d.asm.Tile).apply(null,arguments)},FF=d._TopK=function(){return(FF=d._TopK=d.asm.TopK).apply(null,arguments)},RF=d._Transform=function(){return(RF=d._Transform=d.asm.Transform).apply(null,arguments)},DF=d._Transpose=function(){return(DF=d._Transpose=d.asm.Transpose).apply(null,arguments)},MF=d.__FusedMatMul=function(){return(MF=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},OF=d._malloc=function(){return(OF=d._malloc=d.asm.malloc).apply(null,arguments)},LF=d._free=function(){return(LF=d._free=d.asm.free).apply(null,arguments)},zF=d.__emscripten_tls_init=function(){return(zF=d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},dh=d._pthread_self=function(){return(dh=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},PF=d.___errno_location=function(){return(PF=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},N1=d.__emscripten_thread_init=function(){return(N1=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},BF=d.__emscripten_thread_crashed=function(){return(BF=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},WF=d._emscripten_main_thread_process_queued_calls=function(){return(WF=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},VF=d._emscripten_main_browser_thread_id=function(){return(VF=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},T1=d._emscripten_run_in_main_runtime_thread_js=function(){return(T1=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},UF=d._emscripten_dispatch_to_thread_=function(){return(UF=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},C1=d.__emscripten_proxy_execute_task_queue=function(){return(C1=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Ty=d.__emscripten_thread_free_data=function(){return(Ty=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},_1=d.__emscripten_thread_exit=function(){return(_1=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},E1=d._emscripten_stack_set_limits=function(){return(E1=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Cy=d.stackSave=function(){return(Cy=d.stackSave=d.asm.stackSave).apply(null,arguments)},hh=d.stackRestore=function(){return(hh=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},ch=d.stackAlloc=function(){return(ch=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},GF=d.dynCall_iijjiiii=function(){return(GF=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},HF=d.dynCall_jiji=function(){return(HF=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)};d.keepRuntimeAlive=lr,d.wasmMemory=ue,d.cwrap=Rf,d.ExitStatus=bs,d.PThread=Ee;var mh;ea=function D(){mh||$1(),mh||(ea=D)};function $1(D){if(D=D||y,ka>0)return;if(C){c(d),Ut(),startWorker(d);return}if(va(),ka>0)return;function j(){mh||(mh=!0,d.calledRun=!0,!ke&&(Ut(),c(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),Ud()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),j()},1)):j()}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();$1();var fh;f&&(fh={uncaughtException:process.listeners("uncaughtException").filter(function(D){return!f.uncaughtException.indexOf(D)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(D){return!f.unhandledRejection.indexOf(D)>-1})});var gh;if(typeof WasmBackendModule<"u")gh=WasmBackendModule;else if(typeof a<"u")gh=a;else throw new Error("Could not find wasm module in post.js");if(fh){var jF=gh._dispose;gh._dispose=function(){jF(),fh.uncaughtException.forEach(function(D){process.removeListener("uncaughtException",D)}),fh.unhandledRejection.forEach(function(D){process.removeListener("unhandledRejection",D)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),bR=Mt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),xR=Mt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(X,ie){i=X,o=ie});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),p=[],h="./this.program",d=(X,ie)=>{throw ie},c=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(X){return s.locateFile?s.locateFile(X,g):g+X}var b,x,w,I;function N(X){X instanceof zo||R("exiting due to exception: "+X)}if(f){var C=rx(),E=vI();m?g=E.dirname(g)+"/":g=__dirname+"/",b=(X,ie)=>(X=va(X)?new URL(X):E.normalize(X),C.readFileSync(X,ie?void 0:"utf8")),w=X=>{var ie=b(X,!0);return ie.buffer||(ie=new Uint8Array(ie)),ie},x=(X,ie,Ie)=>{X=va(X)?new URL(X):E.normalize(X),C.readFile(X,function(je,gt){je?Ie(je):ie(gt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),p=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof zo))throw X}),process.on("unhandledRejection",function(X){throw X}),d=(X,ie)=>{if(Dn())throw process.exitCode=X,ie;N(ie),process.exit(X)},s.inspect=function(){return"[Emscripten Module object]"}}else(c||m)&&(m?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",b=X=>{var ie=new XMLHttpRequest;return ie.open("GET",X,!1),ie.send(null),ie.responseText},m&&(w=X=>{var ie=new XMLHttpRequest;return ie.open("GET",X,!1),ie.responseType="arraybuffer",ie.send(null),new Uint8Array(ie.response)}),x=(X,ie,Ie)=>{var je=new XMLHttpRequest;je.open("GET",X,!0),je.responseType="arraybuffer",je.onload=()=>{if(je.status==200||je.status==0&&je.response){ie(je.response);return}Ie()},je.onerror=Ie,je.send(null)},I=X=>document.title=X);var A=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(p=s.arguments),s.thisProgram&&(h=s.thisProgram),s.quit&&(d=s.quit);var F=4,S;s.wasmBinary&&(S=s.wasmBinary);var M=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Fr("no native wasm support detected");var B,U=!1,H;function q(X,ie){X||Fr(ie)}var K=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Z(X,ie,Ie){ie>>>=0;for(var je=ie+Ie,gt=ie;X[gt]&&!(gt>=je);)++gt;if(gt-ie>16&&X.buffer&&K)return K.decode(X.subarray(ie,gt));for(var yt="";ie<gt;){var Ve=X[ie++];if(!(Ve&128)){yt+=String.fromCharCode(Ve);continue}var Be=X[ie++]&63;if((Ve&224)==192){yt+=String.fromCharCode((Ve&31)<<6|Be);continue}var Et=X[ie++]&63;if((Ve&240)==224?Ve=(Ve&15)<<12|Be<<6|Et:Ve=(Ve&7)<<18|Be<<12|Et<<6|X[ie++]&63,Ve<65536)yt+=String.fromCharCode(Ve);else{var Zn=Ve-65536;yt+=String.fromCharCode(55296|Zn>>10,56320|Zn&1023)}}return yt}function J(X,ie){return X>>>=0,X?Z(se,X,ie):""}function ee(X,ie,Ie,je){if(Ie>>>=0,!(je>0))return 0;for(var gt=Ie,yt=Ie+je-1,Ve=0;Ve<X.length;++Ve){var Be=X.charCodeAt(Ve);if(Be>=55296&&Be<=57343){var Et=X.charCodeAt(++Ve);Be=65536+((Be&1023)<<10)|Et&1023}if(Be<=127){if(Ie>=yt)break;ie[Ie++>>>0]=Be}else if(Be<=2047){if(Ie+1>=yt)break;ie[Ie++>>>0]=192|Be>>6,ie[Ie++>>>0]=128|Be&63}else if(Be<=65535){if(Ie+2>=yt)break;ie[Ie++>>>0]=224|Be>>12,ie[Ie++>>>0]=128|Be>>6&63,ie[Ie++>>>0]=128|Be&63}else{if(Ie+3>=yt)break;ie[Ie++>>>0]=240|Be>>18,ie[Ie++>>>0]=128|Be>>12&63,ie[Ie++>>>0]=128|Be>>6&63,ie[Ie++>>>0]=128|Be&63}}return ie[Ie>>>0]=0,Ie-gt}function re(X,ie,Ie){return ee(X,se,ie,Ie)}var te,ae,se,xe,ue,be,ke,Se,Oe;function We(X){te=X,s.HEAP8=ae=new Int8Array(X),s.HEAP16=xe=new Int16Array(X),s.HEAP32=be=new Int32Array(X),s.HEAPU8=se=new Uint8Array(X),s.HEAPU16=ue=new Uint16Array(X),s.HEAPU32=ke=new Uint32Array(X),s.HEAPF32=Se=new Float32Array(X),s.HEAPF64=Oe=new Float64Array(X)}var pt=s.INITIAL_MEMORY||16777216,Ye,Ze=[],Je=[],Ae=[],ht=!1;function Dn(){return M}function _t(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)vn(s.preRun.shift());ea(Ze)}function Kn(){ht=!0,ea(Je)}function Qt(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)kn(s.postRun.shift());ea(Ae)}function vn(X){Ze.unshift(X)}function Xn(X){Je.unshift(X)}function kn(X){Ae.unshift(X)}var at=0,In=null,Mn=null;function Qr(X){at++,s.monitorRunDependencies&&s.monitorRunDependencies(at)}function Lo(X){if(at--,s.monitorRunDependencies&&s.monitorRunDependencies(at),at==0&&(In!==null&&(clearInterval(In),In=null),Mn)){var ie=Mn;Mn=null,ie()}}function Fr(X){s.onAbort&&s.onAbort(X),X="Aborted("+X+")",R(X),U=!0,H=1,X+=". Build with -sASSERTIONS for more info.";var ie=new WebAssembly.RuntimeError(X);throw o(ie),ie}var Gu="data:application/octet-stream;base64,";function lr(X){return X.startsWith(Gu)}function va(X){return X.startsWith("file://")}var Ut;Ut="tfjs-backend-wasm.wasm",lr(Ut)||(Ut=y(Ut));function Ud(X){try{if(X==Ut&&S)return new Uint8Array(S);if(w)return w(X);throw"both async and sync fetching of the wasm failed"}catch(ie){Fr(ie)}}function Xm(){if(!S&&(c||m)){if(typeof fetch=="function"&&!va(Ut))return fetch(Ut,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+Ut+"'";return X.arrayBuffer()}).catch(function(){return Ud(Ut)});if(x)return new Promise(function(X,ie){x(Ut,function(Ie){X(new Uint8Array(Ie))},ie)})}return Promise.resolve().then(function(){return Ud(Ut)})}function Zm(){var X={env:Hu,wasi_snapshot_preview1:Hu};function ie(Ve,Be){var Et=Ve.exports;s.asm=Et,B=s.asm.memory,We(B.buffer),Ye=s.asm.__indirect_function_table,Xn(s.asm.__wasm_call_ctors),Lo("wasm-instantiate")}Qr("wasm-instantiate");function Ie(Ve){ie(Ve.instance)}function je(Ve){return Xm().then(function(Be){return WebAssembly.instantiate(Be,X)}).then(function(Be){return Be}).then(Ve,function(Be){R("failed to asynchronously prepare wasm: "+Be),Fr(Be)})}function gt(){return!S&&typeof WebAssembly.instantiateStreaming=="function"&&!lr(Ut)&&!va(Ut)&&!f&&typeof fetch=="function"?fetch(Ut,{credentials:"same-origin"}).then(function(Ve){var Be=WebAssembly.instantiateStreaming(Ve,X);return Be.then(Ie,function(Et){return R("wasm streaming compile failed: "+Et),R("falling back to ArrayBuffer instantiation"),je(Ie)})}):je(Ie)}if(s.instantiateWasm)try{var yt=s.instantiateWasm(X,ie);return yt}catch(Ve){R("Module.instantiateWasm callback failed with error: "+Ve),o(Ve)}return gt().catch(o),{}}var v1,ka;function zo(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}function ea(X){for(;X.length>0;)X.shift()(s)}function Jm(){Fr("")}function Gd(){return 4294901760}function ys(){return Gd()}function Ym(X,ie,Ie){se.copyWithin(X>>>0,ie>>>0,ie+Ie>>>0)}function Hd(X){try{return B.grow(X-te.byteLength+65535>>>16),We(B.buffer),1}catch{}}function Po(X){var ie=se.length;X=X>>>0;var Ie=Gd();if(X>Ie)return!1;let je=(Et,Zn)=>Et+(Zn-Et%Zn)%Zn;for(var gt=1;gt<=4;gt*=2){var yt=ie*(1+.2/gt);yt=Math.min(yt,X+100663296);var Ve=Math.min(Ie,je(Math.max(X,yt),65536)),Be=Hd(Ve);if(Be)return!0}return!1}var sn={varargs:void 0,get:function(){sn.varargs+=4;var X=be[sn.varargs-4>>>2];return X},getStr:function(X){var ie=J(X);return ie}};function jd(X){return 52}function Qm(X,ie,Ie,je,gt){return 70}var ef=[null,[],[]];function k1(X,ie){var Ie=ef[X];ie===0||ie===10?((X===1?A:R)(Z(Ie,0)),Ie.length=0):Ie.push(ie)}function I1(X,ie,Ie,je){for(var gt=0,yt=0;yt<Ie;yt++){var Ve=ke[ie>>>2],Be=ke[ie+4>>>2];ie+=8;for(var Et=0;Et<Be;Et++)k1(X,se[Ve+Et>>>0]);gt+=Be}return ke[je>>>2]=gt,0}function qd(X){var ie=s["_"+X];return ie}function bs(X,ie){ae.set(X,ie>>>0)}function tf(X,ie,Ie,je,gt){var yt={string:Sn=>{var Sa=0;if(Sn!=null&&Sn!==0){var ph=(Sn.length<<2)+1;Sa=Zu(ph),re(Sn,Sa,ph)}return Sa},array:Sn=>{var Sa=Zu(Sn.length);return bs(Sn,Sa),Sa}};function Ve(Sn){return ie==="string"?J(Sn):ie==="boolean"?!!Sn:Sn}var Be=qd(X),Et=[],Zn=0;if(je)for(var ta=0;ta<je.length;ta++){var uh=yt[Ie[ta]];uh?(Zn===0&&(Zn=ih()),Et[ta]=uh(je[ta])):Et[ta]=je[ta]}var Ju=Be.apply(null,Et);function Ny(Sn){return Zn!==0&&oh(Zn),Ve(Sn)}return Ju=Ny(Ju),Ju}function nf(X,ie,Ie,je){Ie=Ie||[];var gt=Ie.every(Ve=>Ve==="number"||Ve==="boolean"),yt=ie!=="string";return yt&&gt&&!je?qd(X):function(){return tf(X,ie,Ie,arguments,je)}}var Hu={abort:Jm,emscripten_get_heap_max:ys,emscripten_memcpy_big:Ym,emscripten_resize_heap:Po,fd_close:jd,fd_seek:Qm,fd_write:I1},rf=Zm(),Kd=s.___wasm_call_ctors=function(){return(Kd=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},Xd=s._init=function(){return(Xd=s._init=s.asm.init).apply(null,arguments)},af=s._init_with_threads_count=function(){return(af=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},Zd=s._get_threads_count=function(){return(Zd=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},sf=s._register_tensor=function(){return(sf=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},Ee=s._dispose_data=function(){return(Ee=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},ju=s._dispose=function(){return(ju=s._dispose=s.asm.dispose).apply(null,arguments)},of=s._Abs=function(){return(of=s._Abs=s.asm.Abs).apply(null,arguments)},Jd=s._Acos=function(){return(Jd=s._Acos=s.asm.Acos).apply(null,arguments)},Bo=s._Acosh=function(){return(Bo=s._Acosh=s.asm.Acosh).apply(null,arguments)},lf=s._Add=function(){return(lf=s._Add=s.asm.Add).apply(null,arguments)},uf=s._AddN=function(){return(uf=s._AddN=s.asm.AddN).apply(null,arguments)},pf=s._All=function(){return(pf=s._All=s.asm.All).apply(null,arguments)},df=s._Any=function(){return(df=s._Any=s.asm.Any).apply(null,arguments)},hf=s._ArgMax=function(){return(hf=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},Yd=s._ArgMin=function(){return(Yd=s._ArgMin=s.asm.ArgMin).apply(null,arguments)},Qd=s._Asin=function(){return(Qd=s._Asin=s.asm.Asin).apply(null,arguments)},cf=s._Asinh=function(){return(cf=s._Asinh=s.asm.Asinh).apply(null,arguments)},mf=s._Atan=function(){return(mf=s._Atan=s.asm.Atan).apply(null,arguments)},ff=s._Atan2=function(){return(ff=s._Atan2=s.asm.Atan2).apply(null,arguments)},qu=s._Atanh=function(){return(qu=s._Atanh=s.asm.Atanh).apply(null,arguments)},gf=s._AvgPool=function(){return(gf=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},yf=s._AvgPool3D=function(){return(yf=s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},bf=s._AvgPool3DGrad=function(){return(bf=s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},xs=s._AvgPoolGrad=function(){return(xs=s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},xf=s._BatchMatMul=function(){return(xf=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},wf=s._Bincount=function(){return(wf=s._Bincount=s.asm.Bincount).apply(null,arguments)},eh=s._BitwiseAnd=function(){return(eh=s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},vf=s._Ceil=function(){return(vf=s._Ceil=s.asm.Ceil).apply(null,arguments)},Ku=s._ClipByValue=function(){return(Ku=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},kf=s._Conv2D=function(){return(kf=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},If=s._Conv2DBackpropInput=function(){return(If=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},Sf=s._Conv3D=function(){return(Sf=s._Conv3D=s.asm.Conv3D).apply(null,arguments)},Ia=s._Conv3DBackpropFilterV2=function(){return(Ia=s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},Xu=s._Conv3DBackpropInputV2=function(){return(Xu=s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},Nf=s._Cos=function(){return(Nf=s._Cos=s.asm.Cos).apply(null,arguments)},Tf=s._Cosh=function(){return(Tf=s._Cosh=s.asm.Cosh).apply(null,arguments)},Cf=s._CropAndResize=function(){return(Cf=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},_f=s._Cumprod=function(){return(_f=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},th=s._Cumsum=function(){return(th=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},nh=s._DenseBincount=function(){return(nh=s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},Ef=s._DepthToSpace=function(){return(Ef=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},$f=s._DepthwiseConv2dNative=function(){return($f=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},rh=s._Diag=function(){return(rh=s._Diag=s.asm.Diag).apply(null,arguments)},ah=s._Dilation2D=function(){return(ah=s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},Af=s._Dilation2DBackpropFilter=function(){return(Af=s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},Ff=s._Dilation2DBackpropInput=function(){return(Ff=s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},Rf=s._Elu=function(){return(Rf=s._Elu=s.asm.Elu).apply(null,arguments)},Df=s._EluGrad=function(){return(Df=s._EluGrad=s.asm.EluGrad).apply(null,arguments)},sh=s._Equal=function(){return(sh=s._Equal=s.asm.Equal).apply(null,arguments)},S1=s._Erf=function(){return(S1=s._Erf=s.asm.Erf).apply(null,arguments)},Mf=s._Exp=function(){return(Mf=s._Exp=s.asm.Exp).apply(null,arguments)},Of=s._Expm1=function(){return(Of=s._Expm1=s.asm.Expm1).apply(null,arguments)},Lf=s._FlipLeftRight=function(){return(Lf=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},zf=s._Floor=function(){return(zf=s._Floor=s.asm.Floor).apply(null,arguments)},Pf=s._FloorDiv=function(){return(Pf=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},Bf=s._FusedBatchNorm=function(){return(Bf=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},Wf=s._FusedConv2D=function(){return(Wf=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},Vf=s._FusedDepthwiseConv2D=function(){return(Vf=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},Uf=s._Gather=function(){return(Uf=s._Gather=s.asm.Gather).apply(null,arguments)},Gf=s._GatherNd=function(){return(Gf=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},Hf=s._Greater=function(){return(Hf=s._Greater=s.asm.Greater).apply(null,arguments)},jf=s._GreaterEqual=function(){return(jf=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},qf=s._IsFinite=function(){return(qf=s._IsFinite=s.asm.IsFinite).apply(null,arguments)},Kf=s._IsInf=function(){return(Kf=s._IsInf=s.asm.IsInf).apply(null,arguments)},Xf=s._IsNan=function(){return(Xf=s._IsNan=s.asm.IsNan).apply(null,arguments)},Zf=s._LRN=function(){return(Zf=s._LRN=s.asm.LRN).apply(null,arguments)},Jf=s._LRNGrad=function(){return(Jf=s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},Yf=s._LeakyRelu=function(){return(Yf=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},Qf=s._Less=function(){return(Qf=s._Less=s.asm.Less).apply(null,arguments)},eg=s._LessEqual=function(){return(eg=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},tg=s._LinSpace=function(){return(tg=s._LinSpace=s.asm.LinSpace).apply(null,arguments)},ng=s._Log=function(){return(ng=s._Log=s.asm.Log).apply(null,arguments)},rg=s._Log1p=function(){return(rg=s._Log1p=s.asm.Log1p).apply(null,arguments)},ag=s._LogicalAnd=function(){return(ag=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},sg=s._LogicalNot=function(){return(sg=s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},ig=s._LogicalOr=function(){return(ig=s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},og=s._LogicalXor=function(){return(og=s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},lg=s._Max=function(){return(lg=s._Max=s.asm.Max).apply(null,arguments)},ug=s._MaxPool=function(){return(ug=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},pg=s._MaxPool3D=function(){return(pg=s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},dg=s._MaxPool3DGrad=function(){return(dg=s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},hg=s._MaxPoolGrad=function(){return(hg=s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},cg=s._MaxPoolWithArgmax=function(){return(cg=s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},mg=s._Maximum=function(){return(mg=s._Maximum=s.asm.Maximum).apply(null,arguments)},fg=s._Mean=function(){return(fg=s._Mean=s.asm.Mean).apply(null,arguments)},gg=s._Min=function(){return(gg=s._Min=s.asm.Min).apply(null,arguments)},yg=s._Minimum=function(){return(yg=s._Minimum=s.asm.Minimum).apply(null,arguments)},bg=s._MirrorPad=function(){return(bg=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},xg=s._Mod=function(){return(xg=s._Mod=s.asm.Mod).apply(null,arguments)},wg=s._Multinomial=function(){return(wg=s._Multinomial=s.asm.Multinomial).apply(null,arguments)},vg=s._Multiply=function(){return(vg=s._Multiply=s.asm.Multiply).apply(null,arguments)},kg=s._Neg=function(){return(kg=s._Neg=s.asm.Neg).apply(null,arguments)},Ig=s._NonMaxSuppressionV3=function(){return(Ig=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},Sg=s._NonMaxSuppressionV4=function(){return(Sg=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},Ng=s._NonMaxSuppressionV5=function(){return(Ng=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},Tg=s._NotEqual=function(){return(Tg=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},Cg=s._OneHot=function(){return(Cg=s._OneHot=s.asm.OneHot).apply(null,arguments)},_g=s._PadV2=function(){return(_g=s._PadV2=s.asm.PadV2).apply(null,arguments)},Eg=s._Pow=function(){return(Eg=s._Pow=s.asm.Pow).apply(null,arguments)},$g=s._Prelu=function(){return($g=s._Prelu=s.asm.Prelu).apply(null,arguments)},Ag=s._Prod=function(){return(Ag=s._Prod=s.asm.Prod).apply(null,arguments)},Fg=s._RealDiv=function(){return(Fg=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},Rg=s._Reciprocal=function(){return(Rg=s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},Dg=s._Relu=function(){return(Dg=s._Relu=s.asm.Relu).apply(null,arguments)},Mg=s._Relu6=function(){return(Mg=s._Relu6=s.asm.Relu6).apply(null,arguments)},Og=s._ResizeBilinear=function(){return(Og=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},Lg=s._ResizeBilinearGrad=function(){return(Lg=s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},zg=s._ResizeNearestNeighbor=function(){return(zg=s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},Pg=s._ResizeNearestNeighborGrad=function(){return(Pg=s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},Bg=s._Reverse=function(){return(Bg=s._Reverse=s.asm.Reverse).apply(null,arguments)},Wg=s._RotateWithOffset=function(){return(Wg=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},Vg=s._Round=function(){return(Vg=s._Round=s.asm.Round).apply(null,arguments)},Ug=s._Rsqrt=function(){return(Ug=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},Gg=s._ScatterNd=function(){return(Gg=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},Hg=s._SearchSorted=function(){return(Hg=s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},jg=s._SelectV2=function(){return(jg=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},qg=s._Selu=function(){return(qg=s._Selu=s.asm.Selu).apply(null,arguments)},Kg=s._Sigmoid=function(){return(Kg=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},Xg=s._Sign=function(){return(Xg=s._Sign=s.asm.Sign).apply(null,arguments)},Zg=s._Sin=function(){return(Zg=s._Sin=s.asm.Sin).apply(null,arguments)},Jg=s._Sinh=function(){return(Jg=s._Sinh=s.asm.Sinh).apply(null,arguments)},Yg=s._Softmax=function(){return(Yg=s._Softmax=s.asm.Softmax).apply(null,arguments)},Qg=s._Softplus=function(){return(Qg=s._Softplus=s.asm.Softplus).apply(null,arguments)},ey=s._SparseFillEmptyRows=function(){return(ey=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},ty=s._SparseReshape=function(){return(ty=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},ny=s._SparseSegmentReduction=function(){return(ny=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},ry=s._SparseToDense=function(){return(ry=s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},ay=s._Sqrt=function(){return(ay=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},sy=s._Square=function(){return(sy=s._Square=s.asm.Square).apply(null,arguments)},iy=s._SquaredDifference=function(){return(iy=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},oy=s._Step=function(){return(oy=s._Step=s.asm.Step).apply(null,arguments)},ly=s._StridedSlice=function(){return(ly=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},uy=s._Sub=function(){return(uy=s._Sub=s.asm.Sub).apply(null,arguments)},py=s._Sum=function(){return(py=s._Sum=s.asm.Sum).apply(null,arguments)},dy=s._Tan=function(){return(dy=s._Tan=s.asm.Tan).apply(null,arguments)},hy=s._Tanh=function(){return(hy=s._Tanh=s.asm.Tanh).apply(null,arguments)},cy=s._TensorScatterUpdate=function(){return(cy=s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},my=s._Tile=function(){return(my=s._Tile=s.asm.Tile).apply(null,arguments)},fy=s._TopK=function(){return(fy=s._TopK=s.asm.TopK).apply(null,arguments)},gy=s._Transform=function(){return(gy=s._Transform=s.asm.Transform).apply(null,arguments)},yy=s._Transpose=function(){return(yy=s._Transpose=s.asm.Transpose).apply(null,arguments)},by=s.__FusedMatMul=function(){return(by=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},xy=s._malloc=function(){return(xy=s._malloc=s.asm.malloc).apply(null,arguments)},wy=s._free=function(){return(wy=s._free=s.asm.free).apply(null,arguments)},vy=s.___errno_location=function(){return(vy=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},ih=s.stackSave=function(){return(ih=s.stackSave=s.asm.stackSave).apply(null,arguments)},oh=s.stackRestore=function(){return(oh=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Zu=s.stackAlloc=function(){return(Zu=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},ky=s.dynCall_iijjiiii=function(){return(ky=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},Iy=s.dynCall_jiji=function(){return(Iy=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=nf;var Wo;Mn=function X(){Wo||lh(),Wo||(Mn=X)};function lh(X){if(X=X||p,at>0||(_t(),at>0))return;function ie(){Wo||(Wo=!0,s.calledRun=!0,!U&&(Kn(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Qt()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ie()},1)):ie()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();lh();var Vo;l&&(Vo={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var Uo;if(typeof a<"u")Uo=a;else if(typeof WasmBackendModuleThreadedSimd<"u")Uo=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Vo){var Sy=Uo._dispose;Uo._dispose=function(){Sy(),Vo.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Vo.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),vc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},zp=class{refCount(e){return On("refCount")}incRef(e){return On("incRef")}timerAvailable(){return!0}time(e){return On("time")}read(e){return On("read")}readSync(e){return On("readSync")}readToGPU(e,t){return On("readToGPU")}numDataIds(){return On("numDataIds")}disposeData(e,t){return On("disposeData")}write(e,t,n){return On("write")}move(e,t,n,r,a){return On("move")}createTensorFromGPUData(e,t,n){return On("createTensorFromGPUData")}memory(){return On("memory")}floatPrecision(){return On("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return On("dispose")}};function On(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function kI(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Uh(e,t,n)}function wR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Uh(e,n,r),Uh(t,n,r)}function bp(e,t,n){return Math.max(e,Math.min(t,n))}function vR(e){return e%2===0?e:e+1}function Uh(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function kR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function IR(e,t){let n=Math.random();return t*n+(1-n)*e}function SR(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function yn(e,t,n=""){$(ca(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function si(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function nt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function NR(e){return e.length===0}function II(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==null&&t[n]!==null&&e[n]!==t[n])return!1;return!0}function ca(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function nl(e){return e%1===0}function TR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function CR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function _R(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return kI(t),t}function cp(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ER(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function $R(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function gr(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),$(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>nl(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function SI(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:gr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function NI(e,t){return ax(e,t)}function ax(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function TI(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function CI(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function AR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Gh(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function _I(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ra(e){return typeof e=="string"||e instanceof String}function EI(e){return typeof e=="boolean"}function $I(e){return typeof e=="number"}function Pp(e){return Array.isArray(e)?Pp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":$I(e)?"float32":Ra(e)?"string":EI(e)?"bool":"float32"}function Ba(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Hh(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function wl(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function AI(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<s;l++)a[l]=AI(e+l*o,i,n,r)}return a}function Yo(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return AI(0,e,t,n)}function FR(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function sx(e,t){let n=kc(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function kc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function RR(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return Yo(e,new Float32Array(n));if(t==="int32")return Yo(e,new Int32Array(n));if(t==="bool")return Yo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function qn(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function DR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function MR(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Ic(e){return e&&e.then&&typeof e.then=="function"}var R1="tfjsflags",FI=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=OR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Ic(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);R1 in e&&e[R1].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=zR(n,r)})}};function OR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(LR(t,r[0],r[1]),r.join("="))),t}function LR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function zR(e,t){let n=t.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:t}function G(){return ix}var ix=null;function PR(e){ix=e}var Ey;function RI(){if(Ey==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Ey=e}return Ey}function BR(){let e=RI();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function ox(e,t){let n=BR();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var vl="Abs",ii="Acos",oi="Acosh",ts="Add",li="AddN",kl="All",Il="Any",Sl="ArgMax",Nl="ArgMin",ui="Asin",pi="Asinh",di="Atan",hi="Atanh",ci="Atan2",mi="AvgPool",Bp="AvgPoolGrad",Tl="AvgPool3D",Wp="AvgPool3DGrad",fi="BatchMatMul",Cl="BatchToSpaceND",_l="Bincount",El="BitwiseAnd",DI="BroadcastTo",Vp="BroadcastArgs",gi="Cast",yi="Ceil",ns="ClipByValue",Sc="Complex",Up="ComplexAbs",$l="Concat",bi="Conv2D",Nc="Conv2DBackpropFilter",xi="Conv2DBackpropInput",wi="Conv3D",Al="Conv3DBackpropFilterV2",Fl="Conv3DBackpropInputV2",vi="Cos",ki="Cosh",Rl="Cumprod",Ii="Cumsum",Dl="CropAndResize",Gp="DenseBincount",Ml="DepthToSpace",Si="DepthwiseConv2dNative",Tc="DepthwiseConv2dNativeBackpropFilter",Cc="DepthwiseConv2dNativeBackpropInput",Hp="Diag",Ni="Dilation2D",rl="Dilation2DBackpropInput",al="Dilation2DBackpropFilter",_c="Draw",Ti="RealDiv",Ec="Einsum",Ci="Elu",Ol="EluGrad",_i="Erf",Ll="Equal",Ei="Exp",zl="ExpandDims",$i="Expm1",$c="FFT",jp="Fill",Pl="FlipLeftRight",Ai="Floor",Fi="FloorDiv",Ri="FusedBatchNorm",Bl="GatherV2",Wl="GatherNd",Vl="Greater",Di="GreaterEqual",Mi="Identity",Ac="IFFT",Fc="Imag",Oi="IsFinite",Li="IsInf",zi="IsNan",Pi="LeakyRelu",Ul="Less",Gl="LessEqual",Hl="LinSpace",Bi="Log",Wi="Log1p",jl="LogicalAnd",ql="LogicalNot",Kl="LogicalOr",MI="LogicalXor",OI="LogSoftmax",WR="LowerBound",Vi="LRN",Xl="LRNGrad",VR="MatrixBandPart",Ui="Max",Gi="Maximum",Hi="MaxPool",qp="MaxPoolGrad",Zl="MaxPool3D",Kp="MaxPool3DGrad",Xp="MaxPoolWithArgmax",ji="Mean",qi="Min",Ki="Minimum",Xi="MirrorPad",Zi="Mod",Jl="Multinomial",Ji="Multiply",Yl="Neg",Ql="NotEqual",eu="NonMaxSuppressionV3",tu="NonMaxSuppressionV4",nu="NonMaxSuppressionV5",ru="OnesLike",Yi="OneHot",au="Pack",Qi="PadV2",UR="Pool",eo="Pow",to="Prelu",no="Prod",Rc="RaggedGather",Dc="RaggedRange",Mc="RaggedTensorToTensor",Zp="Range",Oc="Real",ro="Reciprocal",ao="Relu",su="Reshape",so="ResizeNearestNeighbor",iu="ResizeNearestNeighborGrad",io="ResizeBilinear",ou="ResizeBilinearGrad",oo="Relu6",lo="Reverse",uo="Round",po="Rsqrt",lu="ScatterNd",uu="TensorScatterUpdate",pu="SearchSorted",du="Select",ho="Selu",hu="Slice",co="Sin",mo="Sinh",fo="Sign",go="Sigmoid",yo="Softplus",bo="Sqrt",xo="Sum",cu="SpaceToBatchND",mu="SplitV",wo="Softmax",Jp="SparseFillEmptyRows",fu="SparseReshape",Yp="SparseSegmentMean",Qp="SparseSegmentSum",gu="SparseToDense",vo="SquaredDifference",ed="Square",td="StaticRegexReplace",yu="StridedSlice",nd="StringNGrams",rd="StringSplit",ad="StringToHashBucketFast",ko="Sub",Io="Tan",So="Tanh",rs="Tile",bu="TopK",xu="Transform",oa="Transpose",sd="Unique",wu="Unpack",id="UnsortedSegmentSum",GR="UpperBound",vu="ZerosLike",as="Step",jh="FromPixels",ku="RotateWithOffset",zs="_FusedMatMul",Ps="FusedConv2D",Bs="FusedDepthwiseConv2D";function Fa(...e){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...e)}function HR(...e){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...e)}var sl=ox("kernelRegistry",()=>new Map),xp=ox("gradRegistry",()=>new Map);function wp(e,t){let n=lx(e,t);return sl.get(n)}function Ky(e){return xp.get(e)}function qh(e){let t=sl.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function od(e){let{kernelName:t,backendName:n}=e,r=lx(t,n);sl.has(r)&&Fa(`The kernel '${t}' for backend '${n}' is already registered`),sl.set(r,e)}function LI(e){let{kernelName:t}=e;xp.has(t)&&G().getBool("DEBUG")&&Fa(`Overriding the gradient for '${t}'`),xp.set(t,e)}function jR(e,t){let n=lx(e,t);if(!sl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);sl.delete(n)}function qR(e){if(!xp.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);xp.delete(e)}function KR(e,t){qh(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});od(r)})}function lx(e,t){return`${t}_${e}`}var v={};_e(v,{arraysEqual:()=>ca,arraysEqualWithNull:()=>II,assert:()=>$,assertNonNegativeIntegerDimensions:()=>qn,assertNonNull:()=>si,assertShapesMatch:()=>yn,bytesFromStringArray:()=>_I,bytesPerElement:()=>Gh,checkConversionForErrors:()=>TI,clamp:()=>bp,computeStrides:()=>wl,convertBackendValuesAndArrayBuffer:()=>FR,createScalarValue:()=>eD,createShuffledIndices:()=>_R,decodeString:()=>Kh,distSquared:()=>SR,encodeString:()=>ud,fetch:()=>nD,fingerPrint64:()=>QR,flatten:()=>Wa,getArrayFromDType:()=>ax,getTypedArrayFromDType:()=>NI,hasEncodingLoss:()=>AR,hexToLong:()=>ld,indexToLoc:()=>MR,inferDtype:()=>Pp,inferFromImplicitShape:()=>$R,isBoolean:()=>EI,isFunction:()=>Ba,isInt:()=>nl,isNumber:()=>$I,isPromise:()=>Ic,isScalarShape:()=>NR,isString:()=>Ra,isTypedArray:()=>qt,isValidDtype:()=>CI,locToIndex:()=>DR,makeOnesTypedArray:()=>sx,makeZerosNestedTypedArray:()=>RR,makeZerosTypedArray:()=>kc,nearestDivisor:()=>Hh,nearestLargerEven:()=>vR,now:()=>vp,parseAxisParam:()=>gr,randUniform:()=>IR,repeatedTry:()=>ER,rightPad:()=>cp,shuffle:()=>kI,shuffleCombo:()=>wR,sizeFromShape:()=>nt,sizeToSquarishShape:()=>CR,squeezeShape:()=>SI,sum:()=>kR,swap:()=>Uh,tanh:()=>TR,toNestedArray:()=>Yo,toTypedArray:()=>Lc});function zI(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var D1=es(rR()),Ts=D1.default||D1;function ld(e){return Ts.fromString(e,!0,16)}var PI=ld("c3a5c85c97cb3127"),Is=ld("b492b66fbe98f273"),pn=ld("9ae16a3b2f90404f");function Xy(e){return e.xor(e.shru(47))}function BI(e,t,n){let r=e.slice(t,t+n);return Ts.fromBytes(Array.from(r),!0,!0)}function ct(e,t){return BI(e,t,8)}function M1(e,t){return BI(e,t,4)}function jt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function La(e,t,n=ld("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function XR(e,t,n,r,a,s){a=a.add(e),s=jt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(jt(a,44)),[a.add(r),s.add(i)]}function yh(e,t,n,r){return XR(ct(e,t),ct(e,t+8),ct(e,t+16),ct(e,t+24),n,r)}function ZR(e,t=e.length){if(t>=8){let n=pn.add(t*2),r=ct(e,0).add(pn),a=ct(e,t-8),s=jt(a,37).mul(n).add(r),i=jt(r,25).add(a).mul(n);return La(s,i,n)}if(t>=4){let n=pn.add(t*2),r=M1(e,0);return La(r.shl(3).add(t),M1(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return Xy(pn.mul(s).xor(PI.mul(i))).mul(pn)}return pn}function JR(e,t=e.length){let n=pn.add(t*2),r=ct(e,0).mul(Is),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(pn);return La(jt(r.add(a),43).add(jt(s,30)).add(i),r.add(jt(a.add(pn),18)).add(s),n)}function YR(e,t=e.length){let n=pn.add(t*2),r=ct(e,0).mul(pn),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(pn),o=jt(r.add(a),43).add(jt(s,30)).add(i),l=La(o,r.add(jt(a.add(pn),18)).add(s),n),u=ct(e,16).mul(n),p=ct(e,24),h=o.add(ct(e,t-32)).mul(n),d=l.add(ct(e,t-24)).mul(n);return La(jt(u.add(p),43).add(jt(h,30)).add(d),u.add(jt(p.add(r),18)).add(h),n)}function QR(e,t=e.length){let n=Ts.fromNumber(81,!0);if(t<=32)return t<=16?ZR(e,t):JR(e,t);if(t<=64)return YR(e,t);let r=n,a=n.mul(Is).add(113),s=Xy(a.mul(pn).add(113)).mul(pn),i=[Ts.UZERO,Ts.UZERO],o=[Ts.UZERO,Ts.UZERO];r=r.mul(pn).add(ct(e,0));let l=0,u=(t-1>>6)*64,p=u+(t-1&63)-63;do r=jt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(Is),a=jt(a.add(i[1]).add(ct(e,l+48)),42).mul(Is),r=r.xor(o[1]),a=a.add(i[0]).add(ct(e,l+40)),s=jt(s.add(o[0]),33).mul(Is),i=yh(e,l,i[1].mul(Is),r.add(o[0])),o=yh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u);let h=Is.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=jt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(h),a=jt(a.add(i[1]).add(ct(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ct(e,l+40))),s=jt(s.add(o[0]),33).mul(h),i=yh(e,l,i[1].mul(h),r.add(o[0])),o=yh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],La(La(i[0],o[0],h).add(Xy(a).mul(PI)).add(s),La(i[1],o[1],h).add(r),h)}function eD(e,t){return t==="string"?ud(e):Lc([e],t)}function tD(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Lc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Wa(e)),G().getBool("DEBUG")&&TI(e,t),tD(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function vp(){return G().platform.now()}function nD(e,t){return G().platform.fetch(e,t)}function ud(e,t="utf-8"){return t=t||"utf-8",G().platform.encode(e,t)}function Kh(e,t="utf-8"){return t=t||"utf-8",G().platform.decode(e,t)}function qt(e){return G().platform.isTypedArray!=null?G().platform.isTypedArray(e):zI(e)}function Wa(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||Ic(e)||e==null||qt(e)&&n)t.push(e);else if(Array.isArray(e)||qt(e))for(let r=0;r<e.length;++r)Wa(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)Wa(e[a],t,n)}return t}var rD=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new sD)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=vp();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:vp()-i})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(u=>{aD(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function aD(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var sD=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?cp(`${r}ms`,9):r.error,o=cp(e,25),l=t.rank,u=t.size,p=cp(t.shape.toString(),14),h="";for(let d in a){let c=a[d];if(c!=null){let m=c.shape||t.shape,f=m.length;h+=`${d}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${p}	%c${u}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function iD(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],p=u.inputs;for(let h in p){let d=p[h],c=!1;for(let m=0;m<t.length;m++)if(r[d.id]){u.outputs.forEach(f=>r[f.id]=!0),c=!0,a[u.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],p=u.inputs;for(let h=0;h<u.outputs.length;h++)if(s[u.outputs[h].id]){for(let d in p)s[p[d].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(a[u.id]&&i[u.id]){let p={};for(let d in u.inputs){let c=u.inputs[d];r[c.id]&&(p[d]=c)}let h=Object.assign({},u);h.inputs=p,h.outputs=u.outputs,o.push(h)}}return o}function oD(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let p=s.inputs[l];if(!ca(u.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${p.shape}'`);if(e[p.id]==null)e[p.id]=u;else{let h=e[p.id];e[p.id]=r(h,u),h.dispose()}}}}var O1=20,Yu=3,$y=7;function lD(e,t,n,r){let a=wl(t),s=uD(e,t,n,a),i=t.length,o=Dh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function uD(e,t,n,r){let a=nt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?ap(e):e;if(o>1)for(let u=0;u<a/s;u++){let p=u*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],rp(l[p+h],0,n).length)}return i}function rp(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed($y))} + ${parseFloat(e[1].toFixed($y))}j`:Ra(e)?r=`'${e}'`:n==="bool"?r=WI(e):r=parseFloat(e.toFixed($y)).toString(),cp(r,t)}function WI(e){return e===0?"false":"true"}function Dh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=ap(e);return[rp(f[0],0,n)]}return n==="bool"?[WI(e[0])]:[e[0].toString()]}if(l===1){if(o>O1){let f=Yu*i,g=Array.from(e.slice(0,f)),y=Array.from(e.slice((o-Yu)*i,o*i));return n==="complex64"&&(g=ap(g),y=ap(y)),["["+g.map((b,x)=>rp(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>rp(b,a[o-Yu+x],n)).join(", ")+"]"]}return["["+(n==="complex64"?ap(e):Array.from(e)).map((f,g)=>rp(f,a[g],n)).join(", ")+"]"]}let u=t.slice(1),p=r.slice(1),h=r[0]*i,d=[];if(o>O1){for(let f=0;f<Yu;f++){let g=f*h,y=g+h;d.push(...Dh(e.slice(g,y),u,n,p,a,!1))}d.push("...");for(let f=o-Yu;f<o;f++){let g=f*h,y=g+h;d.push(...Dh(e.slice(g,y),u,n,p,a,f===o-1))}}else for(let f=0;f<o;f++){let g=f*h,y=g+h;d.push(...Dh(e.slice(g,y),u,n,p,a,f===o-1))}let c=l===2?",":"";d[0]="["+(o>0?d[0]+c:"");for(let f=1;f<d.length-1;f++)d[f]=" "+d[f]+c;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":m),d}function ap(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ft=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=nt(e),n!=null){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ax(t,this.size),this.strides=wl(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return kr().makeTensor(this.values,this.shape,this.dtype)}},kr=null,Ko=null,pD=null;function dD(e){kr=e}function hD(e){Ko=e}function cD(e){pD=e}var Le=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=nt(e),this.strides=wl(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Ko.buffer(this.shape,this.dtype,e)}bufferSync(){return Ko.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Yo(this.shape,e,this.dtype==="complex64")}arraySync(){return Yo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=kr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Kh(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=kr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Kh(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await kr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ko.print(this,e)}clone(){return this.throwIfDisposed(),Ko.clone(this)}toString(e=!1){let t=this.dataSync();return lD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ko.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),kr().makeVariable(this,e,t,n)}};Object.defineProperty(Le,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Q(){return ox("Tensor",()=>Le)}Q();var Ws=class extends Le{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ca(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);kr().disposeTensor(this),this.dataId=e.dataId,kr().incRef(this,null)}dispose(){kr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ws,Symbol.hasInstance,{value:e=>e instanceof Le&&e.assign!=null&&e.assign instanceof Function});var Ir={};_e(Ir,{assertTypesMatch:()=>GI,getTensorsInContainer:()=>ux,isTensorInList:()=>fD,makeTypesMatch:()=>St});var Zy;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(Zy||(Zy={}));var Jy;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Jy||(Jy={}));var Yy;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Yy||(Yy={}));var Qy;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Qy||(Qy={}));var eb;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(eb||(eb={}));var mD={float32:Qy,int32:Jy,bool:Yy,complex64:eb};function ar(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return mD[e][t]}function zc(e){return ar(e,"int32")}function VI(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function UI(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function St(e,t){if(e.dtype===t.dtype)return[e,t];let n=ar(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function GI(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function fD(e,t){return t.some(n=>n.id===e.id)}function ux(e){let t=[];return HI(e,t,new Set),t}function HI(e,t,n){if(e==null)return;if(e instanceof Le){t.push(e);return}if(!gD(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),HI(s,t,n))}}function gD(e){return Array.isArray(e)||typeof e=="object"}function Ay(e){return e.kernelName!=null}var L1=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},px=class tb{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new L1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(Fa(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new rD(this.backendInstance),!0}setupRegisteredKernels(){qh(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){qh(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=n.factory();if(r&&!(r instanceof zp)&&typeof r.then=="function"){let a=++this.pendingBackendInitId,s=r.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Fa(`Initialization of backend ${t} failed`),Fa(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return Fa(`Initialization of backend ${t} failed`),Fa(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n],{success:a,asyncInit:s}=this.initializeBackend(r);if(s||a)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){let r=this.state.tensorInfo.get(n),a=r.backend,s=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),r.backend=t,t.move(n,s,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let a;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,n,r){t();try{let a=r();return n(),a}catch(a){throw n(),a}}nextTensorId(){return tb.nextTensorId++}nextVariableId(){return tb.nextVariableId++}clone(t){let n=O.runKernel(Mi,{x:t}),r={x:t},a=i=>({x:()=>{let o="float32",l={x:i},u={dtype:o};return O.runKernel(gi,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[n],a,s,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,wp(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){let a=this.backend.numDataIds(),s=0;r.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l,u=Ay(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ay(t)){let{kernelName:m,inputs:f,attrs:g}=t;this.backendName==null&&this.backend;let y=wp(m,this.backendName);$(y!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:f,attrs:g,backend:this.backend});let x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,x);let w=x.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){let I=this.getTensorsForGradient(m,f,w);r=this.saveTensorsForBackwardMode(I)}return w}}else{let{forwardFunc:m}=t,f=g=>{a&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,f));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:p,attrs:h}=t,d=Ay(t)?null:t.backwardsFunc,c;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(c=this.profiler.profileKernel(u,p,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),n=c.outputs)}),a&&this.addTapeNode(u,p,n,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(m=>p[m]!=null?p[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,n,r){let a=Ky(t);if(a!=null){let s=a.inputsToSave||[],i=a.outputsToSave||[],o;a.saveAllInputs?($(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=s.map(u=>n[u]);let l=r.filter((u,p)=>i[p]);return o.concat(l)}return[]}makeTensor(t,n,r,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",a=a||this.backend;let s=t;r==="string"&&Ra(t[0])&&(s=t.map(l=>ud(l)));let i=a.write(s,n,r),o=new Le(n,r,i,this.nextTensorId());if(this.trackTensor(o,a),r==="string"){let l=this.state.tensorInfo.get(i),u=_I(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(t,n,r,a){r=r||"float32";let s={dataId:t,shape:n,dtype:r};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,n){let{dataId:r,shape:a,dtype:s}=t,i=new Le(a,s,r,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(t,n=!0,r,a){r=r||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));let s=new Ws(t,n,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*Gh(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Ws||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let r=t.size*Gh(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,a,s,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:s},l=Ky(t);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=u=>(u=u.map((p,h)=>{if(p==null){let d=r[h],c=kc(d.size,d.dtype);return this.makeTensor(c,d.shape,d.dtype)}return p}),a(u.length>1?u:u[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){let n=ux(t),r=new Set(n.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!r.has(i.id)&&i.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(s=>{!s.kept&&s.scopeId===a.id&&this.track(s)})}gradients(t,n,r,a=!1){if($(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));$(s instanceof Le,()=>"The result y returned by f() must be a tensor.");let i=iD(this.state.activeTape,n,s);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=r??yD(s.shape),oD(o,i,u=>this.tidy(u),bD);let l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let p of u.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return $(Ba(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{$(n.every(o=>o instanceof Le),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,a={};n.forEach((o,l)=>{a[l]=o});let s=(o,l)=>(r=t(...n,l),$(r.value instanceof Le,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Ba(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(o,l)=>{let u=r.gradFunc(o,l),p=Array.isArray(u)?u:[u];$(p.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(p.every(d=>d instanceof Le),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let h={};return p.forEach((d,c)=>{h[c]=()=>d}),h};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){let n=vp(),r=await this.backend.time(t);return r.wallMs=vp()-n,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new L1;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};px.nextTensorId=0;px.nextVariableId=0;function yD(e){let t=sx(nt(e),"float32");return O.makeTensor(t,e,"float32")}function jI(){let e=RI();if(e._tfengine==null){let t=new FI(e);e._tfengine=new px(t)}return PR(e._tfengine.ENV),dD(()=>e._tfengine),e._tfengine}var O=jI();function bD(e,t){let n={a:e,b:t};return O.runKernel(ts,n)}var pd={};_e(pd,{isBrowser:()=>qI,isMobile:()=>vD,mockIsMobile:()=>wD});function xD(){return typeof navigator<"u"&&navigator!=null}var nb;function wD(e){nb=e}function vD(e){if(nb!==void 0)return nb;if(e||xD()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function qI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var En=G();En.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});En.registerFlag("IS_BROWSER",()=>qI());En.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");En.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));En.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));En.registerFlag("PROD",()=>!1);En.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>En.getBool("DEBUG"));En.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);En.registerFlag("IS_TEST",()=>!1);En.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>En.getBool("DEBUG"));En.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);En.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);En.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function jr(e,t){let n=e;if(qt(e))return t==="string"?[]:[e.length];if(VI(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(UI(e))return[e.buffer.size/(t==null?4:Gh(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||qt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&KI(e,r,[]),r}function KI(e,t,n){if(n=n||[],!Array.isArray(e)&&!qt(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)KI(e[a],r,n.concat(a))}function z1(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,r="numeric"){if(e instanceof Q())return z1(r,e.dtype,t,n),e;let a=Pp(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),z1(r,a,t,n),e==null||!qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=jr(e,a);!qt(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?Lc(e,a):Wa(e,[],!0);return O.makeTensor(i,s,a)}function kp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>_(a,`${t}[${s}]`,n,r))}var dx="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+dx;let a=(...s)=>{O.startScope(n);try{let i=r(...s);return Ic(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function kD(e,t){let n=_(e,"real","complex"),r=_(t,"imag","complex");yn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return O.runKernel(Sc,a)}var pa=L({complex_:kD});function ss(e,t,n,r){if(r==null)r=Pp(e);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(UI(e)||VI(e)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return O.backend.createTensorFromGPUData(e,t||n,r)}if(!qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){qn(t);let a=nt(t),s=nt(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==nt(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!qt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?Lc(e,r):Wa(e,[],!0),O.makeTensor(e,t,r)}function cn(e,t,n){let r=jr(e,n);return ss(e,t,r,n)}var Vs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ma=class XI{static join(t){return new XI(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(r=>qt(r)?r.buffer:r),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let n=0;for(let r=0;r<t.length;r++){let a=t[r];r!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=n+a.byteLength;this.shards.push({buffer:a,start:n,end:s}),n=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,n=isNaN(Number(n))?0:n,t=Math.max(0,t),n=Math.min(this.byteLength,n),n<=t)return new ArrayBuffer(0);let r=this.findShardForByte(t);if(r===-1)throw new Error(`Could not find start shard for byte ${t}`);let a=n-t,s=new ArrayBuffer(a),i=new Uint8Array(s),o=0;for(let l=r;l<this.shards.length;l++){let u=this.shards[l],p=t+o-u.start,h=o,d=Math.min(n,u.end)-u.start,c=new Uint8Array(u.buffer,p,d-p);if(i.set(c,h),o+=c.length,n<u.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function n(a){return t<a.start?-1:t>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let r=ID(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}};function ID(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(s===0)return a;s<0?r=a:n=a+1}return-1}function SD(){G().set("PROD",!0)}function ND(){G().set("DEBUG",!0)}function TD(){G().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function hx(e){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}cD(hx);function CD(){O.disposeVariables()}function dr(){return O}function Xh(){return O.memory()}function _D(e){return O.profile(e)}function W(e,t){return O.tidy(e,t)}function Ce(e){ux(e).forEach(t=>t.dispose())}function Lt(e){return O.keep(e)}function ED(e){return O.time(e)}function $D(e){return O.setBackend(e)}function AD(){return O.ready()}function ZI(){return O.backendName}function FD(e){O.removeBackend(e)}function RD(e){return O.findBackend(e)}function DD(e){return O.findBackendFactory(e)}function Pc(e,t,n=1){return O.registerBackend(e,t,n)}function cx(){return O.backend}function MD(e,t){G().setPlatform(e,t)}var Va=4;async function OD(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let p=new Promise(async h=>{let d=await l.bytes(),c=d.reduce((g,y)=>g+y.length,0)+Va*d.length,m=new Uint8Array(c),f=0;for(let g=0;g<d.length;g++){let y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=Va,m.set(y,f),f+=y.length}h(m)});r.push(p)}else r.push(l.data());t!=null&&(u.group=t),n.push(u)}let s=await Promise.all(r);return{data:PD(s),specs:n}}function JI(e,t){let n=new ma(e),r={},a=0;for(let s of t){let i=LD(s,(o,l)=>n.slice(a+o,a+l));r[s.name]=YI(s,n.slice(a,a+i)),a+=i}return r}function LD(e,t){let n=nt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Vs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=Va+new Uint32Array(t(a,a+Va))[0];return a}else r=Vs[e.dtype];return n*r}async function zD(e,t){let n=nt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Vs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=Va+new Uint32Array(await t(a,a+Va))[0];return a}else r=Vs[e.dtype];return n*r}function YI(e,t){let n=e.name,r=e.dtype,a=e.shape,s=nt(a),i,o=0;if("quantization"in e){let l=e.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${e.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${e.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${e.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Vs[l.dtype],p=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(p.length);for(let h=0;h<p.length;h++){let d=p[h];i[h]=d*l.scale+l.min}}else if(l.dtype==="float16")i=jD()(p);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(p.length);for(let h=0;h<p.length;h++){let d=p[h];i[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*u}else if(r==="string"){let l=nt(e.shape);i=[];for(let u=0;u<l;u++){let p=new Uint32Array(t.slice(o,o+Va))[0];o+=Va;let h=new Uint8Array(t.slice(o,o+p));i.push(h),o+=p}}else{let l=Vs[r];if(r==="float32")i=new Float32Array(t);else if(r==="int32")i=new Int32Array(t);else if(r==="bool")i=new Uint8Array(t);else if(r==="complex64"){i=new Float32Array(t);let u=new Float32Array(i.length/2),p=new Float32Array(i.length/2);for(let m=0;m<u.length;m++)u[m]=i[m*2],p[m]=i[m*2+1];let h=cn(u,a,"float32"),d=cn(p,a,"float32"),c=pa(h,d);return h.dispose(),d.dispose(),c}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*l}return cn(i,a,r)}async function P1(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:a,value:s}=await e.read();if(a&&s==null){let o=n-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}let i=new Uint8Array(r.length+s.byteLength);i.set(r,0),i.set(new Uint8Array(s),r.length),r=i}return r.buffer}async function QI(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let i=await zD(s,async(u,p)=>(a=await P1(r,a,p),a.slice(u,p)));a=await P1(r,a,i);let o=a.slice(0,i);a=a.slice(i);let l=YI(s,o);if(n[s.name]=l,ZI()==="webgpu"){let u=cx();"uploadToGPU"in u&&nt(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n}function PD(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var mx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function B1(e){return mx?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function BD(e){if(mx)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function WD(e){if(mx){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function VD(e){return ma.join(e)}function W1(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function eS(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function tS(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}async function fx(e,t){let n,r;return e.weightsManifest!=null&&([n,r]=await t(e.weightsManifest)),tS(e,n,r)}function dd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:B1(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:B1(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new ma(e.weightData).byteLength}}function rb(e){let t=[];for(let n of e)t.push(...n.weights);return t}function UD(){let e=n=>{let r=n<<13,a=0;for(;!(r&8388608);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function GD(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function HD(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function jD(){let e=UD(),t=GD(),n=HD();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var sr=class wr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return wr.instance==null&&(wr.instance=new wr),wr.instance}static registerSaveRouter(t){wr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){wr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return wr.getHandlers(t,"save")}static getLoadHandlers(t,n){return wr.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return(n==="load"?wr.getInstance().loadRouters:wr.getInstance().saveRouters).forEach(s=>{let i=s(t,r);i!==null&&a.push(i)}),a}},qD=e=>sr.registerSaveRouter(e),KD=e=>sr.registerLoadRouter(e),XD=e=>sr.getSaveHandlers(e),ZD=(e,t)=>sr.getLoadHandlers(e,t),ab="tensorflowjs",sb=1,As="models_store",Da="model_info_store";function nS(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ib(e){let t=e.result;t.createObjectStore(As,{keyPath:"modelPath"}),t.createObjectStore(Da,{keyPath:"modelPath"})}var Us=class{constructor(e){if(this.indexedDB=nS(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let a=this.indexedDB.open(ab,sb);a.onupgradeneeded=()=>ib(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(As,"readonly"),o=i.objectStore(As).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{t.weightData=ma.join(t.weightData);let i=dd(t),o=s.transaction(Da,"readwrite"),l=o.objectStore(Da),u;try{u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return r(h)}let p;u.onsuccess=()=>{p=s.transaction(As,"readwrite");let h=p.objectStore(As),d;try{d=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(c){return r(c)}d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=c=>{l=o.objectStore(Da);let m=l.delete(this.modelPath);m.onsuccess=()=>(s.close(),r(d.error)),m.onerror=f=>(s.close(),r(d.error))}},u.onerror=h=>(s.close(),r(u.error)),o.oncomplete=()=>{p==null?s.close():p.oncomplete=()=>s.close()}}},a.onerror=s=>r(a.error)})}};Us.URL_SCHEME="indexeddb://";var rS=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Us.URL_SCHEME)?JD(e.slice(Us.URL_SCHEME.length)):null;sr.registerSaveRouter(rS);sr.registerLoadRouter(rS);function JD(e){return new Us(e)}function YD(e){return e.startsWith(Us.URL_SCHEME)?e.slice(Us.URL_SCHEME.length):e}var QD=class{constructor(){this.indexedDB=nS()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(ab,sb);n.onupgradeneeded=()=>ib(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Da,"readonly"),s=a.objectStore(Da).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=YD(e),new Promise((t,n)=>{let r=this.indexedDB.open(ab,sb);r.onupgradeneeded=()=>ib(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(Da,"readwrite"),i=s.objectStore(Da),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),p=()=>{l=a.transaction(As,"readwrite");let h=l.objectStore(As).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=d=>n(o.error)};u.onsuccess=p,u.onerror=h=>(p(),a.close(),n(o.error))}},o.onerror=u=>(a.close(),n(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})}},ia="/",Xo="tensorflowjs_models",aS="info",eM="model_topology",tM="weight_specs",nM="weight_data",rM="model_metadata";function sS(e){return{info:[Xo,e,aS].join(ia),topology:[Xo,e,eM].join(ia),weightSpecs:[Xo,e,tM].join(ia),weightData:[Xo,e,nM].join(ia),modelMetadata:[Xo,e,rM].join(ia)}}function iS(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function aM(e){let t=e.split(ia);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ia)}function sM(e){return e.startsWith(Gs.URL_SCHEME)?e.slice(Gs.URL_SCHEME.length):e}var Gs=class{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=sS(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=dd(e),a=ma.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,BD(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch{throw iS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=WD(s),t}};Gs.URL_SCHEME="localstorage://";var oS=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gs.URL_SCHEME)?iM(e.slice(Gs.URL_SCHEME.length)):null;sr.registerSaveRouter(oS);sr.registerLoadRouter(oS);function iM(e){return new Gs(e)}var oM=class{constructor(){$(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Xo+ia,n=ia+aS;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=aM(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=sM(e);let t=sS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return iS(t),n}},Qo="://",Ua=class Ca{constructor(){this.managers={}}static getInstance(){return Ca.instance==null&&(Ca.instance=new Ca),Ca.instance}static registerManager(t,n){$(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Qo)&&(t=t.slice(0,t.indexOf(Qo))),$(t.length>0,()=>"scheme must not be an empty string.");let r=Ca.getInstance();$(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=Ca.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(Ca.getInstance().managers)}};function Mh(e){if(e.indexOf(Qo)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ua.getSchemes().join(",")}`);return{scheme:e.split(Qo)[0],path:e.split(Qo)[1]}}async function lS(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=sr.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=sr.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Mh(e).scheme,l=Mh(e).path,u=o===Mh(e).scheme,p=await a.load();n&&u&&await Ua.getManager(o).removeModel(l);let h=await i.save(p);return n&&!u&&await Ua.getManager(o).removeModel(l),h.modelArtifactsInfo}async function lM(){let e=Ua.getSchemes(),t={};for(let n of e){let r=await Ua.getManager(n).listModels();for(let a in r){let s=n+Qo+a;t[s]=r[a]}}return t}async function uM(e){let t=Mh(e);return Ua.getManager(t.scheme).removeModel(t.path)}async function pM(e,t){return lS(e,t,!1)}async function dM(e,t){return lS(e,t,!0)}var hM=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return zI(e)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new hM);try{Ua.registerManager(Gs.URL_SCHEME,new oM)}catch{}try{Ua.registerManager(Us.URL_SCHEME,new QD)}catch{}}var cM={importFetch:()=>aR()},Fy,mM=class{constructor(){this.util=sR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return G().global.fetch!=null?G().global.fetch(e,t):(Fy==null&&(Fy=cM.importFetch()),Fy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new mM);function Me(e,t="float32",n){return t=t||"float32",qn(e),new Ft(e,t,n)}function fM(e,t){let n=_(e,"x","cast");if(!CI(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return O.runKernel(gi,r,a)}var oe=L({cast_:fM});function gM(e){let t={x:_(e,"x","clone","string_or_numeric")};return O.runKernel(Mi,t)}var Vr=L({clone_:gM});function gx(e,t=!1){console.log(e.toString(t))}jI();var yM={buffer:Me,cast:oe,clone:Vr,print:gx};hD(yM);function bM(e,t){let n=_(e,"a","add"),r=_(t,"b","add");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(ts,a)}var Y=L({add_:bM});function xM(e,t){let n=_(e,"a","floorDiv"),r=_(t,"b","floorDiv");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(Fi,a)}var Bc=L({floorDiv_:xM});function wM(e,t){let n=_(e,"a","div"),r=_(t,"b","div");if([n,r]=St(n,r),n.dtype==="int32"&&r.dtype==="int32")return Bc(n,r);let a={a:n,b:r},s={};return O.runKernel(Ti,a,s)}var me=L({div_:wM});function vM(e,t){let n=_(e,"a","mul"),r=_(t,"b","mul");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(Ji,a)}var z=L({mul_:vM});function kM(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return O.runKernel(Up,n)}else{let n={x:t};return O.runKernel(vl,n)}}var $t=L({abs_:kM});function IM(e){let t={x:_(e,"x","acos")};return O.runKernel(ii,t)}var yx=L({acos_:IM});function SM(e){let t={x:_(e,"x","acosh")};return O.runKernel(oi,t)}var bx=L({acosh_:SM});function NM(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>_(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ca(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return O.runKernel(li,r)}var uS=L({addN_:NM});function TM(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return O.runKernel(kl,r,a)}var Wc=L({all_:TM});function CM(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return O.runKernel(Il,r,a)}var Ip=L({any_:CM});function _M(e,t=0){let n={x:_(e,"x","argMax")},r={axis:t};return O.runKernel(Sl,n,r)}var Hs=L({argMax_:_M});function EM(e,t=0){let n={x:_(e,"x","argMin")},r={axis:t};return O.runKernel(Nl,n,r)}var xx=L({argMin_:EM});function $M(e){let t={x:_(e,"x","asin")};return O.runKernel(ui,t)}var wx=L({asin_:$M});function AM(e){let t={x:_(e,"x","asinh")};return O.runKernel(pi,t)}var vx=L({asinh_:AM});function FM(e){let t={x:_(e,"x","atan")};return O.runKernel(di,t)}var kx=L({atan_:FM});function RM(e,t){let n=_(e,"a","atan2"),r=_(t,"b","atan2");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(ci,a)}var Ix=L({atan2_:RM});function DM(e){let t={x:_(e,"x","atanh")};return O.runKernel(hi,t)}var Sx=L({atanh_:DM});function MM(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=hS(a);return hd(e,o,n,s,r,null,null,l)}function pS(e,t,n,r,a,s,i="channelsLast"){let[o,l]=Sp(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return hd(e,u,n,r,a,s,!1,i)}function OM(e,t,n,r,a,s,i="NDHWC"){let[o,l,u]=ob(t),p,h;if(i==="NDHWC")h="channelsLast",p=[o,l,u,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",p=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return dS(e,p,n,r,a,!1,h,s)}function hd(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,p,h]=e;else if(o==="channelsFirst")[l,h,u,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,c,,m]=t,[f,g]=Sp(n),[y,b]=Sp(r),x=el(d,y),w=el(c,b),{padInfo:I,outHeight:N,outWidth:C}=PM(a,u,p,f,g,x,w,s,o),E=i?m*h:m,A;return o==="channelsFirst"?A=[l,E,N,C]:o==="channelsLast"&&(A=[l,N,C,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:N,outWidth:C,outChannels:E,padInfo:I,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function dS(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,p,h,d]=e;else if(i==="channelsFirst")[l,d,u,p,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=ob(n),[w,I,N]=ob(r),C=el(c,w),E=el(m,I),A=el(f,N),{padInfo:R,outDepth:F,outHeight:S,outWidth:M}=BM(a,u,p,h,y,b,x,C,E,A,o),B=s?g*d:g,U;return i==="channelsFirst"?U=[l,B,F,S,M]:i==="channelsLast"&&(U=[l,F,S,M,B]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:F,outHeight:S,outWidth:M,outChannels:B,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:w,dilationHeight:I,dilationWidth:N,inShape:e,outShape:U,filterShape:t}}function LM(e,t,n,r,a){r==null&&(r=Nx(e,t,n));let s=e[0],i=e[1],o=Np((s-t+2*r)/n+1,a),l=Np((i-t+2*r)/n+1,a);return[o,l]}function zM(e,t,n,r,a,s){a==null&&(a=Nx(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Np((e[o]-t[o]+2*a)/r[o]+1,s));return i}function Nx(e,t,n,r=1){let a=el(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Sp(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function ob(e){return typeof e=="number"?[e,e,e]:e}function el(e,t){return t<=1?e:e+(e-1)*(t-1)}function PM(e,t,n,r,a,s,i,o,l){let u,p,h;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=LM([t,n],s,r,e,o);p=d[0],h=d[1]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a);let d=Math.max(0,(p-1)*r+s-t),c=Math.max(0,(h-1)*a+i-n),m=Math.floor(d/2),f=d-m,g=Math.floor(c/2),y=c-g;u={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:c,left:m,right:f,type:d===0&&c===0&&m===0&&f===0?"VALID":"EXPLICIT"},p=Np((t-s+d+c)/r+1,o),h=Np((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:p,outWidth:h}}function BM(e,t,n,r,a,s,i,o,l,u,p){let h,d,c,m;if(e==="valid"&&(e=0),typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=zM([t,n,r,1],[o,l,u],1,[a,s,i],e,p);d=f[0],c=f[1],m=f[2]}else if(e==="same"){d=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let f=(d-1)*a+o-t,g=(c-1)*s+l-n,y=(m-1)*i+u-r,b=Math.floor(f/2),x=f-b,w=Math.floor(g/2),I=g-w,N=Math.floor(y/2),C=y-N;h={top:w,bottom:I,left:N,right:C,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:c,outWidth:m}}function Np(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ga(e){let[t,n,r]=Sp(e);return t===1&&n===1&&r===1}function Xr(e,t){return Ga(e)||Ga(t)}function js(e){return Sp(e).every(t=>t>0)}function hS(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function bn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")$(nl(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{$(nl(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function WM(e,t){let n={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(su,n,r)}var P=L({reshape_:WM});function VM(e,t,n,r,a){let s=_(e,"x","avgPool","float32"),i=1;$(Xr(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),bn("avgPool",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(mi,u,p);return h=oe(h,s.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var fa=L({avgPool_:VM});function UM(e,t,n,r,a,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),bn("avgPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(Tl,u,p);return h=oe(h,o.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Tx=L({avgPool3d_:UM});function GM(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=kp(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Vr(n[0]);let r=n,a={axis:t};return O.runKernel($l,r,a)}var ot=L({concat_:GM});function HM(e,t,n=!1,r=!1){let a=_(e,"a","matMul"),s=_(t,"b","matMul");[a,s]=St(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return O.runKernel(fi,i,o)}var Re=L({matMul_:HM});function jM(e){let t={x:_(e,"x","sigmoid","float32")};return O.runKernel(go,t)}var cr=L({sigmoid_:jM});function qM(e,t,n){let r=_(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return O.runKernel(hu,a,s)}var Ue=L({slice_:qM});function KM(e){let t={x:_(e,"x","tanh","float32")};return O.runKernel(So,t)}var qs=L({tanh_:KM});function XM(e,t,n,r,a,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),u=_(r,"data","basicLSTMCell"),p=_(a,"c","basicLSTMCell"),h=_(s,"h","basicLSTMCell"),d=ot([u,h],1),c=Re(d,o),m=Y(c,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Ue(m,[0,0],y),x=Ue(m,[0,g],y),w=Ue(m,[0,g*2],y),I=Ue(m,[0,g*3],y),N=Y(z(cr(b),qs(x)),z(p,cr(Y(i,w)))),C=z(qs(N),cr(I));return[N,C]}var cS=L({basicLSTMCell_:XM});function ZM(e,t,n){let r=_(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);$(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return O.runKernel(Cl,s,i)}var cd=L({batchToSpaceND_:ZM});function JM(e){let t;return e.rank===0||e.rank===1?t=P(e,[1,1,1,e.size]):e.rank===2?t=P(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function YM(e,t,n,r,a,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;a!=null&&(u=_(a,"scale","batchNorm"));let p;r!=null&&(p=_(r,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:JM(i),scale:u,offset:p,mean:o,variance:l},d={varianceEpsilon:s},c=O.runKernel(Ri,h,d);return P(c,i.shape)}var No=L({batchNorm_:YM});function QM(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;a!=null&&(u=_(a,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),No(i,o,l,p,u,s)}var Cx=L({batchNorm2d_:QM});function eO(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;a!=null&&(u=_(a,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),No(i,o,l,p,u,s)}var _x=L({batchNorm3d_:eO});function tO(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),u;a!=null&&(u=_(a,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),No(i,o,l,p,u,s)}var Ex=L({batchNorm4d_:tO});function nO(e,t,n){let r=_(e,"x","bincount"),a=_(t,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return O.runKernel(_l,s,i)}var $x=L({bincount_:nO});function rO(e,t){let n=_(e,"x","bitwiseAnd"),r=_(t,"y","bitwiseAnd");if(!ca(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return O.runKernel(El,a)}var mS=L({bitwiseAnd_:rO});function aO(e,t){let n=_(e,"s0","broadcastArgs","int32"),r=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return O.runKernel(Vp,a)}var fS=L({broadcastArgs_:aO});function sO(e,t){let n=_(e,"broadcastTo","x"),r=n.shape;if(qn(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=P(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return Vr(n);let i={x:n},o={reps:s};return O.runKernel(rs,i,o)}var Rs=L({broadcastTo_:sO});function iO(e){let t={x:_(e,"x","ceil","float32")};return O.runKernel(yi,t)}var Ax=L({ceil_:iO});function Vn(e,t,n){qn(e),n=n||Pp(t);let r={shape:e,value:t,dtype:n};return O.runKernel(jp,{},r)}function oO(e,t,n){let r=_(e,"x","clipByValue");if($(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Vn(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return O.runKernel(ns,a,s)}var on=L({clipByValue_:oO});function lO(e){return ot(e,0)}var Fx=L({concat1d_:lO});function uO(e,t){return ot(e,t)}var Rx=L({concat2d_:uO});function pO(e,t){return ot(e,t)}var Dx=L({concat3d_:pO});function dO(e,t){return ot(e,t)}var Mx=L({concat4d_:dO});function hO(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),u=o,p=!1;o.rank===3&&(p=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),bn("conv2d",r,i);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),$(Xr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(js(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(bi,d,c);return p?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var mn=L({conv2d_:hO});function cO(e,t,n,r,a="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),u=o,p=!1;o.rank===2&&(p=!0,u=P(o,[1,o.shape[0],o.shape[1]])),$(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),bn("conv1d",r,i),$(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Xr(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(js(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=P(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=P(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=mn(d,h,[1,n],r,"NHWC",[1,s],i);return p?P(c,[c.shape[2],c.shape[3]]):P(c,[c.shape[0],c.shape[2],c.shape[3]])}var Vc=L({conv1d_:cO});function mO(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let p=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];$(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),$(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),bn("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=O.runKernel(xi,d,c);return u?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ox=L({conv2DBackpropInput_:mO});function fO(e,t,n,r,a,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Ox(n,i,o,r,a,"NHWC",s)}var Uc=L({conv2dTranspose_:fO});function gO(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(Xr(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(js(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv3D: Strides should be larger than 0.");let p={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=O.runKernel(wi,p,h);return u?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Lx=L({conv3d_:gO});function yO(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let p={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=O.runKernel(Fl,p,h);return o?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var gS=L({conv3DBackpropInput_:yO});function bO(e,t,n,r,a){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return gS(n,s,i,r,a)}var zx=L({conv3dTranspose_:bO});function xO(e){let t={x:_(e,"x","cos","float32")};return O.runKernel(vi,t)}var md=L({cos_:xO});function wO(e){let t={x:_(e,"x","cosh","float32")};return O.runKernel(ki,t)}var Gc=L({cosh_:wO});function vO(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Rl,a,s)}var Tp=L({cumprod_:vO});function kO(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Ii,a,s)}var Hc=L({cumsum_:kO});function IO(e,t,n,r=!1){let a=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return O.runKernel(Gp,i,o)}var Zh=L({denseBincount_:IO});function SO(e,t,n="NHWC"){let r=_(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return O.runKernel(Ml,o,l)}var Px=L({depthToSpace_:SO});function NO(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;o.rank===3&&(p=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),bn("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(Si,d,c);return p?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var To=L({depthwiseConv2d_:NO});function TO(e){let t={x:_(e,"x","diag")};return O.runKernel(Hp,t)}var yS=L({diag_:TO});function CO(e,t,n,r,a=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),$(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let p={x:l,filter:o},h={strides:n,pad:r,dilations:a},d=O.runKernel(Ni,p,h);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Bx=L({dilation2d_:CO}),Iu={};_e(Iu,{assertAndGetBroadcastShape:()=>lt,getBroadcastDims:()=>bS,getReductionAxes:()=>Dt});function bS(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function Dt(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function lt(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r[n-a-1]=i;else if(i===1)r[n-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r[n-a-1]=s}return r}function _O(e,t){let n=_(e,"a","equal","string_or_numeric"),r=_(t,"b","equal","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ll,a)}var Un=L({equal_:_O});function EO(e,t,n){let r=_(t,"a","where"),a=_(n,"b","where"),s=_(e,"condition","where","bool"),i=lt(lt(s.shape,r.shape),a.shape),o=Rs(s,i),l=Rs(r,i),u=Rs(a,i),p={condition:o,t:l,e:u};return O.runKernel(du,p)}var Zt=L({where_:EO});function $O(e){let t={x:_(e,"x","zerosLike")};return O.runKernel(vu,t)}var Ge=L({zerosLike_:$O});function AO(e,t){let n=_(e,"a","div"),r=_(t,"b","div");[n,r]=St(n,r);let a=me(n,r),s=Ge(a),i=Un(r,s);return Zt(i,s,a)}var Wx=L({divNoNan_:AO});function FO(e,t){let n=_(e,"t1","dot"),r=_(t,"t2","dot");$((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=P(n,[1,-1]),o=P(r,[-1,1]),l=Re(i,o);return P(l,[])}else if(n.rank===1&&r.rank===2){let i=P(n,[1,-1]),o=P(r,[r.shape[0],r.shape[1]]),l=Re(i,o);return P(l,[l.size])}else if(n.rank===2&&r.rank===1){let i=P(r,[-1,1]),o=Re(n,i);return P(o,[o.size])}else{let i=P(r,[r.shape[0],r.shape[1]]);return Re(n,i)}}var Vx=L({dot_:FO});function RO(e,...t){let n=t.map((a,s)=>_(a,`tensors${s}`,"einsum")),r={equation:e};return O.runKernel(Ec,n,r)}var Cs=L({einsum_:RO});function DO(e){let t={x:_(e,"x","elu","float32")};return O.runKernel(Ci,t)}var Su=L({elu_:DO});function MO(e,t){let n=_(e,"x","ensureShape","string_or_numeric");if(!II(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var xS=L({ensureShape_:MO});function OO(e){let t=_(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=oe(t,"float32"));let n={x:t};return O.runKernel(_i,n)}var Ux=L({erf_:OO});function Gx(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function wS(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function vS(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function Ks(e,t){let n=t.map(r=>1);return wS(e,n,t)}function LO(e,t,n){$(Gx(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function kS(e,t){if(Gx(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function Hx(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function zO(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function PO(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return O.runKernel(Ui,r,a)}var rr=L({max_:PO});function BO(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return O.runKernel(qi,r,a)}var il=L({min_:BO});function WO(e,t){let n=_(e,"base","pow"),r=_(t,"exp","pow");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(eo,a)}var da=L({pow_:WO});function we(e,t){if((qt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&qt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ss(e,[],[],t)}function VO(e){let t={x:_(e,"x","sqrt","float32")};return O.runKernel(bo,t)}var rn=L({sqrt_:VO});function UO(e){let t=_(e,"x","square"),n={};return O.runKernel("Square",{x:t},n)}var it=L({square_:UO});function GO(e,t=null,n=!1){let r=_(e,"x","sum");r.dtype==="bool"&&(r=oe(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(xo,a,s)}var fe=L({sum_:GO});function HO(e,t="euclidean",n=null,r=!1){e=_(e,"x","norm");let a=IS(e,t,n),s=a.shape;if(r){let i=gr(n,e.shape);s=Ks(a.shape,i)}return P(a,s)}function IS(e,t,n=null){if(e.rank===0)return $t(e);if(e.rank!==1&&n===null)return IS(P(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return fe($t(e),n);if(t===1/0)return rr($t(e),n);if(t===-1/0)return il($t(e),n);if(t==="euclidean"||t===2)return rn(fe(da($t(e),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return rr(fe($t(e),n[0]),n[1]-1);if(t===1/0)return rr(fe($t(e),n[1]),n[0]);if(t===-1/0)return il(fe($t(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(fe(it(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Nu=L({norm_:HO});function jO(e,t=null,n=!1){return Nu(e,"euclidean",t,n)}var jx=L({euclideanNorm_:jO});function qO(e){let t={x:_(e,"x","exp")};return O.runKernel(Ei,t)}var ln=L({exp_:qO});function KO(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return O.runKernel(zl,r,a)}var Kt=L({expandDims_:KO});function XO(e){let t={x:_(e,"x","expm1")};return O.runKernel($i,t)}var qx=L({expm1_:XO});function ZO(e,t){let n=_(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return O.runKernel(rs,r,a)}var Wn=L({tile_:ZO});function JO(e,t,n,r="float32"){t==null&&(t=e);let a=Me([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=P(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Wn(Kt(i,0),[n[0],1,1]);if(n.length===2)return Wn(Kt(Kt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Wn(Kt(Kt(Kt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var jc=L({eye_:JO});function YO(e){let t={x:_(e,"x","floor","float32")};return O.runKernel(Ai,t)}var Tu=L({floor_:YO});function QO(e,t,n=0,r=0){let a=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return O.runKernel(Bl,i,o)}var Cu=L({gather_:QO});function e3(e,t){let n=_(e,"a","greater","string_or_numeric"),r=_(t,"b","greater","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Vl,a)}var xn=L({greater_:e3});function t3(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),r=_(t,"b","greaterEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Di,a)}var ga=L({greaterEqual_:t3});function n3(e){let t={input:_(e,"input","imag")};return O.runKernel(Fc,t)}var fd=L({imag_:n3});function r3(e){let t={x:_(e,"x","isFinite")};return O.runKernel(Oi,t)}var Kx=L({isFinite_:r3});function a3(e){let t={x:_(e,"x","isInf")};return O.runKernel(Li,t)}var Xx=L({isInf_:a3});function s3(e){let t={x:_(e,"x","isNaN")};return O.runKernel(zi,t)}var Zx=L({isNaN_:s3});function i3(e,t=.2){let n={x:_(e,"x","leakyRelu")},r={alpha:t};return O.runKernel(Pi,n,r)}var gd=L({leakyRelu_:i3});function o3(e,t){let n=_(e,"a","less","string_or_numeric"),r=_(t,"b","less","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ul,a)}var ol=L({less_:o3});function l3(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),r=_(t,"b","lessEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Gl,a)}var is=L({lessEqual_:l3});function SS(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return O.runKernel(Hl,{},r)}function u3(e,t=5,n=1,r=1,a=.5){let s=_(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(nl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},p=O.runKernel(Vi,l,u);return o?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Jx=L({localResponseNormalization_:u3});function p3(e){let t={x:_(e,"x","log","float32")};return O.runKernel(Bi,t)}var Gn=L({log_:p3});function d3(e){let t={x:_(e,"x","log1p")};return O.runKernel(Wi,t)}var yd=L({log1p_:d3});function h3(e){return $(Ba(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=_(t,"x","tf.grad","string_or_numeric"),a=n!=null?_(n,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(r),[r],a);return a!=null&&yn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),qc(i),i[0]})}}function c3(e){return $(Ba(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=kp(t,"args","tf.grads","string_or_numeric"),a=n!=null?_(n,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...r),r,a);return a!=null&&yn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),qc(i),i})}}function m3(e){return $(Ba(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Le,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Le,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=O.gradients(()=>e(t),[t],n);return qc(r),{grad:r[0],value:a}}}function f3(e){return $(Ba(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof Le),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Le,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=O.gradients(()=>e(...t),t,n);return n!=null&&yn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),qc(r.grads),r}}function NS(e,t){$(Ba(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(u=>u instanceof Ws),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in O.registeredVariables)t.push(O.registeredVariables[u])}let r=n?t.filter(u=>!u.trainable):null,a=t.length;t=t.filter(u=>u.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);$(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,p)=>{o[p]!=null&&(l[u.name]=o[p])}),r?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function qr(e){return O.customGrad(e)}function qc(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function g3(e){let t={x:_(e,"x","neg")};return O.runKernel(Yl,t)}var mt=L({neg_:g3});function y3(e){let t={x:_(e,"x","softplus")};return O.runKernel(yo,t)}var Co=L({softplus_:y3});function b3(e){let t=_(e,"x","logSigmoid");return qr(n=>({value:mt(Co(mt(n))),gradFunc:r=>z(r,cr(mt(n)))}))(t)}var Yx=L({logSigmoid_:b3});function x3(e,t){let n=_(e,"a","sub"),r=_(t,"b","sub");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(ko,a)}var he=L({sub_:x3});function w3(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return qr((r,a)=>{let s=rr(r,t,!0),i=he(r,s),o=he(oe(i,"float32"),Gn(fe(ln(i),t,!0)));return a([o]),{value:o,gradFunc:(l,u)=>{let[p]=u,h=!0,d=ln(p);return he(l,z(fe(l,t,h),d))}}})(n)}var Kc=L({logSoftmax_:w3});function v3(e,t=null,n=!1){let r=_(e,"x","logSumExp"),a=gr(t,r.shape),s=rr(r,a,!0),i=he(r,s),o=ln(i),l=fe(o,a),u=Gn(l),p=Y(P(s,u.shape),u);if(n){let h=Ks(p.shape,a);return P(p,h)}return p}var bd=L({logSumExp_:v3});function k3(e,t){let n=_(e,"a","logicalAnd","bool"),r=_(t,"b","logicalAnd","bool");lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(jl,a)}var mr=L({logicalAnd_:k3});function I3(e){let t={x:_(e,"x","logicalNot","bool")};return O.runKernel(ql,t)}var xd=L({logicalNot_:I3});function S3(e,t){let n=_(e,"a","logicalOr","bool"),r=_(t,"b","logicalOr","bool");lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Kl,a)}var Xc=L({logicalOr_:S3});function N3(e,t){let n=_(e,"a","logicalXor","bool"),r=_(t,"b","logicalXor","bool");return lt(n.shape,r.shape),mr(Xc(e,t),xd(mr(e,t)))}var Qx=L({logicalXor_:N3}),bh=2147483648;function T3(e,t,n="left"){let r=_(e,"sortedSequence","searchSorted"),a=_(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=P(r,[-1,s]),l=P(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(nt(l.shape)>=bh)throw new Error(`values tensor size must less than ${bh}`);if(o.shape[1]>=bh)throw new Error(`trailing dim_size must less than ${bh} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:n};return O.runKernel(pu,u,p)}var Zc=L({searchSorted_:T3});function TS(e,t){return Zc(e,t,"left")}function C3(e,t,n,r,a){let s=_(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(Xr(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),bn("maxPool",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(Hi,u,p);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ht=L({maxPool_:C3});function _3(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),bn("maxPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(Zl,u,p);return l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var ew=L({maxPool3d_:_3});function E3(e,t,n,r,a=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=O.runKernel(Xp,s,i);return{result:o[0],indexes:o[1]}}var CS=L({maxPoolWithArgmax_:E3});function $3(e,t){let n=_(e,"a","maximum"),r=_(t,"b","maximum");[n,r]=St(n,r),n.dtype==="bool"&&(n=oe(n,"int32"),r=oe(r,"int32")),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Gi,a)}var Zr=L({maximum_:$3});function A3(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return O.runKernel(ji,r,a)}var vt=L({mean_:A3});function kt(e,t="float32"){if(qn(e),t==="complex64"){let r=kt(e,"float32"),a=kt(e,"float32");return pa(r,a)}let n=kc(nt(e),t);return O.makeTensor(n,e,t)}function Tn(e,t="float32"){if(qn(e),t==="complex64"){let r=Tn(e,"float32"),a=kt(e,"float32");return pa(r,a)}let n=sx(nt(e),t);return O.makeTensor(n,e,t)}function _S(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=_(e,"x","meshgrid",e instanceof Le?e.dtype:"float32");if(t===void 0)return[r];let a=_(t,"y","meshgrid",t instanceof Le?t.dtype:"float32"),s=nt(r.shape),i=nt(a.shape);return n==="xy"?(r=P(r,[1,-1]),a=P(a,[-1,1]),[Re(Tn([i,1],r.dtype),r),Re(a,Tn([1,s],a.dtype))]):(r=P(r,[-1,1]),a=P(a,[1,-1]),[Re(r,Tn([1,i],r.dtype)),Re(Tn([s,1],a.dtype),a)])}function F3(e,t){let n=_(e,"a","minimum"),r=_(t,"b","minimum");[n,r]=St(n,r),n.dtype==="bool"&&(n=oe(n,"int32"),r=oe(r,"int32")),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ki,a)}var Ha=L({minimum_:F3});function R3(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=_(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return O.runKernel(Xi,i,s)}var tw=L({mirrorPad_:R3});function D3(e,t){let n=_(e,"a","mod"),r=_(t,"b","mod");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(Zi,a)}var nw=L({mod_:D3});function M3(e,t=null,n=!1){e=_(e,"x","moments");let r=gr(t,e.shape),a=vt(e,r,n),s=a.shape;n||(s=Ks(a.shape,r));let i=it(he(oe(e,"float32"),P(a,s))),o=vt(i,r,n);return{mean:a,variance:o}}var wd=L({moments_:M3});function O3(e,t,n,r){let a=_(t,"data","multiRNNCell"),s=kp(n,"c","multiRNNCell"),i=kp(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let d=e[h](o,s[h],i[h]);l.push(d[0]),l.push(d[1]),o=d[1]}let u=[],p=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),p.push(l[h+1]);return[u,p]}var ES=L({multiRNNCell_:O3});function L3(e,t,n,r=!1){let a=_(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?P(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=O.runKernel(Jl,o,l);return i===1?P(u,[u.size]):u}var $S=L({multinomial_:L3});function z3(e,t){let n=_(e,"a","notEqual","string_or_numeric"),r=_(t,"b","notEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ql,a)}var Xs=L({notEqual_:z3});function P3(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return O.runKernel(Yi,s,i)}var ll=L({oneHot_:P3});function B3(e){let t={x:_(e,"x","onesLike")};return O.runKernel(ru,t)}var Hn=L({onesLike_:B3});function W3(e,t){let n=_(e,"v1","outerProduct"),r=_(t,"v2","outerProduct");$(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=P(n,[-1,1]),s=P(r,[1,-1]);return Re(a,s)}var AS=L({outerProduct_:W3});function V3(e,t,n=0){let r=_(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return O.runKernel(Qi,s,a)}var $r=L({pad_:V3});function U3(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),$r(e,[t],n)}var FS=L({pad1d_:U3});function G3(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var RS=L({pad2d_:G3});function H3(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var DS=L({pad3d_:H3});function j3(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var MS=L({pad4d_:j3});function q3(e,t,n){let r=_(e,"x","spaceToBatchND");$(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return O.runKernel(cu,a,s)}var vd=L({spaceToBatchND_:q3});function K3(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=_(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(Xr(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let p=pS(l.shape,t,s,a,r),h=[p.dilationHeight,p.dilationWidth],d;r==="same"?d=Z3([p.filterHeight,p.filterWidth],h):d=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[m,f]=X3([p.inHeight,p.inWidth],h,d),g=c?r:"valid",y=c?l:vd(l,h,m),b=(n==="avg"?()=>fa(y,t,s,g,i):()=>Ht(y,t,s,g,i))(),x=c?b:cd(b,h,f);return u?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function X3(e,t,n){let r=n.map(p=>p[0]),a=n.map(p=>p[1]),s=e.concat(r,a),i=t.map((p,h)=>(p-s[h]%p)%p),o=a.map((p,h)=>p+i[h]),l=t.map((p,h)=>[r[h],o[h]]),u=t.map((p,h)=>[0,i[h]]);return[l,u]}function Z3(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var rw=L({pool_:K3});function J3(e,t){let n=_(e,"x","prelu"),r=_(t,"alpha","prelu"),a={x:n,alpha:r};return O.runKernel(to,a)}var kd=L({prelu_:J3});function Y3(e,t=null,n=!1){let r=_(e,"x","prod");r.dtype==="bool"&&(r=oe(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(no,a,s)}var aw=L({prod_:Y3});function Q3(e,t,n,r){let a=e.map((p,h)=>_(p,`tensors${h}`,"raggedGather","int32")),s=_(t,"paramsDenseValues","raggedGather"),i=_(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=O.runKernel(Rc,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var OS=L({raggedGather_:Q3});function eL(e,t,n){let r=_(e,"starts","raggedRange"),a=_(t,"limits","raggedRange",r.dtype),s=_(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=O.runKernel(Dc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var LS=L({raggedRange_:eL});function tL(e,t,n,r,a){let s=_(e,"shape","raggedTensorToTensor","int32"),i=_(t,"values","raggedTensorToTensor"),o=_(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((h,d)=>_(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},p={rowPartitionTypes:a};return O.runKernel(Mc,u,p)}var zS=L({raggedTensorToTensor_:tL});function nL(e,t,n){qn(e);let r=nt(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return O.makeTensor(a,e,n)}var PS=L({rand_:nL}),sw=es(wc()),BS={};_e(BS,{TEST_EPSILON_FLOAT16:()=>WS,createVideoElement:()=>pL,encodeStrings:()=>VS,expectArrayBuffersEqual:()=>uL,expectArraysClose:()=>aL,expectArraysEqual:()=>iL,expectNumbersClose:()=>oL,expectPromiseToFail:()=>sL,expectValuesInRange:()=>lL,play:()=>dL,testEpsilon:()=>iw});var rL=.001,WS=.1;function aL(e,t,n){return n==null&&(n=iw()),lb(e,t,(r,a)=>ow(r,a,n))}function iw(){return O.backend.floatPrecision()===32?rL:WS}function lb(e,t,n){let r=!0;if((qt(e)||qt(t))&&(r=!1),qt(e)&&qt(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=jr(e),o=jr(t);if(!ca(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=qt(e)?e:Wa(e),s=qt(t)?t:Wa(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function sL(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function iL(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ra(e)||Ra(e[0])||Ra(t)||Ra(t[0])?lb(e,n,(r,a)=>r==a):lb(e,t,(r,a)=>ow(r,a,0))}function oL(e,t,n){if(n==null&&(n=iw()),!ow(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function ow(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function lL(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function uL(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function VS(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?VS(n):e[t]=ud(n)}return e}function pL(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}async function dL(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var lw=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=sw.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},hL=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=sw.alea(a.toString()),this.randn=new lw(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},cL=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sw.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function mL(e,t,n=1,r="float32",a){if(qn(e),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new hL(t,n,r,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var US=L({randomGamma_:mL});function fL(e,t=0,n=1,r,a){if(qn(e),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new lw(t,n,r,!1,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Jc=L({randomNormal_:fL});function gL(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Jc(e,0,1,t,n)}var GS=L({randomStandardNormal_:gL});function yL(e,t=0,n=1,r="float32",a){qn(e);let s=Me(e,r),i=new cL(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var os=L({randomUniform_:yL});function bL(e,t,n,r){return os(e,t,n,"int32",r)}var HS=L({randomUniformInt_:bL});function Zs(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return O.runKernel(Zp,{},a)}function xL(e){let t={input:_(e,"input","real")};return O.runKernel(Oc,t)}var ul=L({real_:xL});function wL(e){let t={x:_(e,"x","reciprocal")};return O.runKernel(ro,t)}var uw=L({reciprocal_:wL});function vL(e){let t={x:_(e,"x","relu")};return O.runKernel(ao,t)}var tt=L({relu_:vL});function kL(e){let t={x:_(e,"x","relu6")};return O.runKernel(oo,t)}var Yc=L({relu6_:kL});function IL(e,t){let n={x:_(e,"x","reverse")},r={dims:t};return O.runKernel(lo,n,r)}var ir=L({reverse_:IL});function SL(e){let t=_(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ir(t,0)}var jS=L({reverse1d_:SL});function NL(e,t){let n=_(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ir(n,t)}var qS=L({reverse2d_:NL});function TL(e,t){let n=_(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ir(n,t)}var KS=L({reverse3d_:TL});function CL(e,t){let n=_(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ir(n,t)}var XS=L({reverse4d_:CL});function _L(e){let t={x:_(e,"x","round")};return O.runKernel(uo,t)}var Qc=L({round_:_L});function EL(e){let t={x:_(e,"x","rsqrt","float32")};return O.runKernel(po,t)}var em=L({rsqrt_:EL});function $L(e){let t={x:_(e,"x","selu")};return O.runKernel(ho,t)}var tm=L({selu_:$L});function AL(e,t,n,r,a,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),u=_(n,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(o.rank===3&&(h=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];$(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let m=To(p,l,r,a,i,s),f=mn(m,u,1,"valid",i);return h?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var _u=L({separableConv2d_:AL});async function FL(e,t){let n=_(e,"x","setdiff1d"),r=_(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let p=0;p<a.length;p++)i.has(a[p])||o++;let l=new Ft([o],n.dtype),u=new Ft([o],"int32");for(let p=0,h=0;p<a.length;p++)i.has(a[p])||(l.values[h]=a[p],u.values[h]=p,h++);return[l.toTensor(),u.toTensor()]}var ZS=FL;function RL(e){let t={x:_(e,"x","sign")};return O.runKernel(fo,t)}var pw=L({sign_:RL});function DL(e){let t={x:_(e,"x","sin","float32")};return O.runKernel(co,t)}var nm=L({sin_:DL});function ML(e){let t={x:_(e,"x","sinh")};return O.runKernel(mo,t)}var rm=L({sinh_:ML});function OL(e,t,n){let r=_(e,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ue(r,[t],[n])}var Id=L({slice1d_:OL});function LL(e,t,n){let r=_(e,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var am=L({slice2d_:LL});function zL(e,t,n){let r=_(e,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var Eu=L({slice3d_:zL});function PL(e,t,n){let r=_(e,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var pl=L({slice4d_:PL});function BL(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return O.runKernel(wo,r,a)}var ls=L({softmax_:BL});function WL(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel($c,t)}var Sd=L({fft_:WL});function VL(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(Ac,t)}var dl=L({ifft_:VL});function UL(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=P(e,[n,t]);r=dl(a)}else{let a=[n,2*(t-1)],s=P(ul(e),[n,t]),i=P(fd(e),[n,t]),o=ir(Ue(s,[0,1],[n,t-2]),1),l=z(ir(Ue(i,[0,1],[n,t-2]),1),we(-1)),u=ot([s,o],1),p=ot([i,l],1),h=P(pa(u,p),[a[0],a[1]]);r=dl(h)}if(r=ul(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=P(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var sm=L({irfft_:UL});function GL(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return O.runKernel(mu,r,a)}var Cn=L({split_:GL});function HL(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,a=Ue(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,a=ot([e,kt(m)],e.shape.length-1),n=t}else a=e;let s=Ge(a),i=P(pa(a,s),[r,n]),o=Sd(i),l=Math.floor(n/2)+1,u=ul(o),p=fd(o),h=Cn(u,[l,n-l],u.shape.length-1),d=Cn(p,[l,n-l],p.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,P(pa(h[0],d[0]),c)}var Nd=L({rfft_:HL});function jL(e,t){let n=_(e,"a","squaredDifference"),r=_(t,"b","squaredDifference");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r},s={};return O.runKernel(vo,a,s)}var im=L({squaredDifference_:jL});function qL(e,t){let n=_(e,"x","squeeze","string_or_numeric");return P(n,SI(n.shape,t).newShape)}var us=L({squeeze_:qL});function KL(e,t=0){let n=kp(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return O.runKernel(au,r,a)}var Rt=L({stack_:KL});function XL(e,t=0){let n={x:_(e,"x","step")},r={alpha:t};return O.runKernel(as,n,r)}var _o=L({step_:XL});function ZL(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:_(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return O.runKernel(yu,u,p)}var dw=L({stridedSlice_:ZL});function JL(e){let t={x:_(e,"x","tan","float32")};return O.runKernel(Io,t)}var hw=L({tan_:JL});function Qe(e,t){si(e);let n=jr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ss(e,null,n,t)}function Ur(e,t,n){if(si(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=jr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ss(e,t,r,n)}function om(e,t,n){if(si(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=jr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ss(e,t,r,n)}function ja(e,t,n){if(si(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=jr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ss(e,t,r,n)}function JS(e,t,n){if(si(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=jr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ss(e,t,r,n)}function YS(e,t,n){if(si(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=jr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ss(e,t,r,n)}var lm={};_e(lm,{calculateShapes:()=>QS,validateInput:()=>um,validateUpdateShape:()=>cw});function cw(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function um(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}cw(n,t,e)}function QS(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a,l=nt(t.shape)/o,u=[...wl(n.slice(0,a)),1],p=nt(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:p}}function YL(e,t,n){let r=_(e,"tensor","tensorScatterupdate"),a=_(t,"indices","tensorScatterupdate","int32"),s=_(n,"updates","tensorScatterupdate");if(um(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return O.runKernel(uu,i,o)}var eN=L({tensorScatterUpdate_:YL});function QL(e,t=1,n=!0){let r=_(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=O.runKernel(bu,s,i);return{values:o,indices:l}}var mw=L({topk_:QL});function ez(e,t=0,n=1,r,a){if(qn(e),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new lw(t,n,r,!0,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var pm=L({truncatedNormal_:ez});function tz(e,t=0){let n=_(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=O.runKernel(sd,r,a);return{values:s,indices:i}}var fw=L({unique_:tz});function nz(e,t,n){let r=_(e,"x","unsortedSegmentSum"),a=_(t,"segmentIds","unsortedSegmentSum","int32");$(nl(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return O.runKernel(id,s,i)}var dm=L({unsortedSegmentSum_:nz});function rz(e,t=0){let n=_(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return O.runKernel(wu,r,a)}var Nt=L({unstack_:rz});function tN(e,t){return Zc(e,t,"right")}function gw(e,t=!0,n,r){return O.makeVariable(e,t,n,r)}function nN(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Me(e,"int32"),a=Me([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function az(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),r=nN(t.shape,n);return e!==t&&t.dispose(),r}var yw=az;async function sz(e,t,n){let r=_(e,"tensor","boolMask"),a=_(t,"mask","boolMask","bool"),s=n??0,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),yn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=P(r,u),h=P(a,[-1]),d=await yw(h),c=us(d,[1]),m=Cu(p,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),m}var rN=sz;function iz(e,t,n){let r=_(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?W(()=>{let i=ul(r),o=fd(r);return i=O.runKernel(oa,{x:i},s),o=O.runKernel(oa,{x:o},s),n&&(o=mt(o)),pa(i,o)}):O.runKernel(oa,a,s)}var De=L({transpose_:iz});function oz(e,t,n,r,a=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");GI(s,i),$(ca(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=we(1),u=he(l,o),p=z(he(i,s),u);if(a){$(r!=null,()=>"When using zeroDebias: true, step is required.");let h=_(r,"step","movingAverage");p=me(p,he(l,da(o,h)))}return Y(s,p)}var aN=L({movingAverage_:oz});function lz(e,t,n){qn(n);let r=_(e,"indices","scatterND","int32"),a=_(t,"updates","scatterND");um(a,r,n);let s={indices:r,updates:a},i={shape:n};return O.runKernel(lu,s,i)}var sN=L({scatterND_:lz});function uz(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function pz(e,t,n,r=0){qn(n);let a=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(r,"defaultValue","sparseToDense",s.dtype);uz(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return O.runKernel(gu,o,l)}var iN=L({sparseToDense_:pz});function dz(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return O.runKernel(Wl,r)}var oN=L({gatherND_:dz});function hz(e,t){if(t==null)return e.shape.slice();if(ca(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function cz(e,t,n,r){let a=_(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Le?a.clone():a;let s=hz(a,n),i=1-t,o=me(Tu(Y(os(s,0,1,"float32",r),i)),i);return z(a,o)}var bw=L({dropout_:cz});function xw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hm(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Qe(a,"float32")}async function mz(e,t,n=1){let r=_(e,"predictions","inTopK"),a=_(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),yn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],p=NI("bool",l);for(let h=0;h<l;h++){let d=h*u,c=i.subarray(d,d+u),m=[];for(let f=0;f<c.length;f++)m.push({value:c[f],index:f});m.sort((f,g)=>g.value-f.value),p[h]=0;for(let f=0;f<n;f++)if(m[f].index===o[h]){p[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),cn(p,a.shape,"bool")}var lN=mz,hl={};_e(hl,{conv2d:()=>yz,depthwiseConv2d:()=>vz,matMul:()=>Iz});function fz(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],p=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),$(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),bn("conv2dDerFilter",a,i);let h={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return O.runKernel(Nc,h,d)}var ww=L({conv2DBackpropFilter_:fz});function cm(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,_o(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function mm(e,t){let n=t,r=Dt(e.shape,t.shape);return r.length>0&&(n=fe(n,r)),P(n,e.shape)}function fm(e,t,n,r){if(t==="linear")return e;if(t==="relu")return tt(e);if(t==="elu")return Su(e);if(t==="relu6")return Yc(e);if(t==="prelu")return kd(e,n);if(t==="leakyrelu")return gd(e,r);if(t==="sigmoid")return cr(e);throw new Error(`Unknown fused activation ${t}.`)}var gm=(e,t)=>!(e>0)||t==="linear";function gz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",gm(O.state.gradientDepth,l)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=mn(e,t,n,r,a,s,i);return o!=null&&(N=Y(N,o)),fm(N,l,u,p)}let h=_(e,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),bn("fused conv2d",r,i);let f=a==="NHWC"?c.shape[3]:c.shape[1];$(d.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${d.shape[2]}.`),$(Xr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=hd(c.shape,d.shape,n,s,r,i),y;o!=null&&(y=_(o,"bias","fused conv2d"),[y]=St(y,h),a==="NHWC"?lt(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(u!=null){let N=u.shape;if($(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)$(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{lt(N,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=_(u,"prelu weights","fused conv2d")}let x=(N,C)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,R,F]=C,S=cm(N,R,l);$(Ga(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let M=Ox(A.shape,S,E,n,r),B=ww(A,S,E.shape,n,r),U=[M,B];if(F!=null){let H=mm(F,S);U.push(H)}return U},w={x:c,filter:d,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return o==null?qr((N,C,E)=>{let A=O.runKernel(Ps,w,I);return E([C,N,A]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,d):qr((N,C,E,A)=>{let R=O.runKernel(Ps,w,I);return A([C,N,R,E]),m&&(R=P(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,d,y)}var yz=L({fusedConv2d_:gz});function bz(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return O.runKernel(Tc,u,p)}var uN=L({depthwiseConv2dNativeBackpropFilter_:bz});function xz(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=O.runKernel(Cc,u,p);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var pN=L({depthwiseConv2dNativeBackpropInput_:xz});function wz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(gm(O.state.gradientDepth,l)===!1){let I=To(e,t,n,r,a,s,i);return o!=null&&(I=Y(I,o)),fm(I,l,u,p)}let h=_(e,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),$(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),$(Xr(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),bn("fused depthwiseConv2d",r,i);let f=hd(c.shape,d.shape,n,s,r,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=St(g,h),lt(f.outShape,g.shape));let y;u!=null&&(y=_(u,"prelu weights","fused depthwiseConv2d"));let b=(I,N)=>{$(Ga(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,A,R]=N,F=cm(I,A,l),S=pN(E.shape,F,C,n,r,s,i),M=uN(E,F,C.shape,n,r,s,i);if(R!=null){let B=mm(g,F);return[S,M,B]}return[S,M]},x={x:c,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return o==null?qr((I,N,C)=>{let E=O.runKernel(Bs,x,w);return C([N,I,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,d):qr((I,N,C,E)=>{let A=O.runKernel(Bs,x,w);return E([N,I,A,C]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,d,g)}var vz=L({fusedDepthwiseConv2d_:wz});function kz({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(gm(O.state.gradientDepth,s)===!1){let R=Re(e,t,n,r);return a!=null&&(R=Y(R,a)),fm(R,s,i,o)}let l=_(e,"a","fused matMul"),u=_(t,"b","fused matMul");[l,u]=St(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=nt(m),y=nt(f);$(p===h,()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=lt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),x=n?P(l,[g,p,d]):P(l,[g,d,p]),w=r?P(u,[y,c,h]):P(u,[y,h,c]),I;a!=null&&(I=_(a,"bias","fused matMul"),[I]=St(I,l),lt(b,I.shape));let N;i!=null&&(N=_(i,"prelu weights","fused matMul"));let C=(R,F)=>{let[S,M,B,U]=F,H=cm(P(R,B.shape),B,s),q,K;if(!n&&!r?(q=Re(H,M,!1,!0),K=Re(S,H,!0,!1)):!n&&r?(q=Re(H,M,!1,!1),K=Re(H,S,!0,!1)):n&&!r?(q=Re(M,H,!1,!0),K=Re(S,H,!1,!1)):(q=Re(M,H,!0,!0),K=Re(H,S,!0,!0)),a!=null){let Z=mm(U,H);return[q,K,Z]}else return[q,K]},E={a:x,b:w,bias:I,preluActivationWeights:N},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?qr((R,F,S)=>{let M=O.runKernel(zs,E,A);return S([R,F,M]),{value:P(M,b),gradFunc:C}})(x,w):qr((R,F,S,M)=>{let B=O.runKernel(zs,E,A);return M([R,F,B,S]),{value:P(B,b),gradFunc:C}})(x,w,I)}var Iz=L({fusedMatMul_:kz});function Sz(e){return hm(e,.54,.46)}var Nz=L({hammingWindow_:Sz});function Tz(e){return hm(e,.5,.5)}var dN=L({hannWindow_:Tz});function Cz(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ue(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=ot([Ue(e,s,t-o),Vn([o],a)]);i.push(l),s+=n}return i.length===0?Ur([],[0,t]):P(ot(i),[i.length,t])}var hN=L({frame_:Cz});function _z(e,t,n,r,a=dN){r==null&&(r=xw(t));let s=hN(e,t,n),i=z(s,a(t));return Nd(i,r)}var Ez=L({stft_:_z});function $z(e,t,n,r,a="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),u=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let p={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return O.runKernel(Dl,p,h)}var Az=L({cropAndResize_:$z});function Fz(e){let t=_(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return O.runKernel(Pl,n,{})}var Rz=L({flipLeftRight_:Fz});function Dz(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Wn(t,a)}var Mz=L({grayscaleToRGB_:Dz});function Oz(e){let t=_(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),$(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a=t.dtype,s=oe(t,"float32"),i=Qe([.2989,.587,.114]),o;switch(t.rank){case 2:o=Cs("ij,j->i",s,i);break;case 3:o=Cs("ijk,k->ij",s,i);break;case 4:o=Cs("ijkl,l->ijk",s,i);break;case 5:o=Cs("ijklm,m->ijkl",s,i);break;case 6:o=Cs("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Kt(o,-1),oe(o,a)}var Lz=L({rgbToGrayscale_:Oz});function zz(e,t,n=0,r=.5){let a=_(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return O.runKernel(ku,s,i)}var Pz=L({rotateWithOffset_:zz});function $u(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function Bz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=$u(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return O.runKernel(eu,{boxes:s,scores:i},l)}var Wz=L({nonMaxSuppression_:Bz});function Vz(e,t,n){let r=Uz(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Uz(e,t,n){return Hz(e,t,n||Gz)}function Gz(e,t){return e>t?1:e<t?-1:0}function Hz(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function cN(e,t,n,r,a){return vw(e,t,n,r,a,0)}function mN(e,t,n,r,a,s){return vw(e,t,n,r,a,0,!1,s,!0)}function fN(e,t,n,r,a,s){return vw(e,t,n,r,a,s,!0)}function vw(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(V1);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let w=!1;for(let I=h.length-1;I>=x;--I){let N=jz(e,b,h[I]);if(N>=r){w=!0;break}if(g.score=g.score*qz(r,p,N),g.score<=a)break}g.suppressBeginIndex=h.length,w||(g.score===y?(h.push(b),d.push(g.score)):g.score>a&&Vz(u,g,V1))}let c=h.length,m=n-c;o&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));let f={selectedIndices:h};return i&&(f.selectedScores=d),l&&(f.validOutputs=c),f}function jz(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),m=(h-u)*(d-p);if(c<=0||m<=0)return 0;let f=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(c+m-x)}function qz(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function V1(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function Kz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=$u(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=cN(u,p,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qe(h,"int32")}var Xz=Kz;function Zz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=$u(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=O.runKernel(nu,u,p);return{selectedIndices:h[0],selectedScores:h[1]}}var Jz=L({nonMaxSuppressionWithScore_:Zz});async function Yz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=$u(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=fN(p,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(d,"int32"),selectedScores:Qe(c)}}var Qz=Yz;function eP(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=$u(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:p,scoreThreshold:h,padToMaxOutputSize:s},m=O.runKernel(tu,d,c);return{selectedIndices:m[0],validOutputs:m[1]}}var tP=L({nonMaxSuppressionPadded_:eP});async function nP(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=$u(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=mN(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(m,"int32"),validOutputs:we(f,"int32")}}var rP=nP;function aP(e,t,n=!1,r=!1){let a=_(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=O.runKernel(io,o,l);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var gN=L({resizeBilinear_:aP});function sP(e,t,n=!1,r=!1){let a=_(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=O.runKernel(so,o,l);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var yN=L({resizeNearestNeighbor_:sP});function iP(e,t="binary",n=!1,r=.5){let a=_(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],u=z(Qe([r]),255),p,h,d,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[p,h,d]=Cn(a,[1,1,1],-1);let f=z(p,s),g=z(h,i),y=z(d,o);c=Y(Y(f,g),y)}else c=e;if(t==="otsu"){let f=$x(oe(Qc(c),"int32"),cn([]),256);u=oP(f,l)}let m=n?is(c,u):xn(c,u);return oe(z(m,255),"int32")}function oP(e,t){let n=Qe([-1]),r=Qe([0]),a=Qe([0]),s,i,o,l,u,p;for(let h=0;h<e.size-1;h++){s=Ue(e,0,h+1),i=Ue(e,h+1),u=me(fe(s),t),p=me(fe(i),t);let d=fe(z(s,Zs(0,s.size)));o=me(d,fe(s));let c=Vn(i.shape,s.size),m=Y(Zs(0,i.size),c),f=z(i,m);l=me(fe(f),fe(i));let g=he(o,l),y=he(o,l),b=z(u,p);a=z(z(b,g),y);let x=xn(a,r);r=Zt(x,a,r),n=Zt(x,Qe([h]),n)}return n}var lP=L({threshold_:iP});function uP(e,t,n="nearest",r="constant",a=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return O.runKernel(xu,l,u)}var pP=L({transform_:uP});function dP(e,t,n){let r=_(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,l;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=_(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Zt(ol(t,0),s,Ha(t,s))),typeof n=="number"?($(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=_(n<0?i:n,"numUpper","bandPart")):($(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Zt(ol(n,0),i,Ha(n,i)));let u=P(Zs(0,s,1,"int32"),[-1,1]),p=Zs(0,i,1,"int32"),h=he(u,p),d=mr(is(h,o),ga(h,mt(l))),c=kt([s,i],r.dtype);return P(Rt(Nt(P(r,[-1,s,i])).map(m=>Zt(d,m,c))),a)}var hP=L({bandPart_:dP});function cP(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=Cn(e,e.shape[0],0).map(a=>us(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(O.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=z(fe(z(n[i],s)),n[i]);s=he(s,o)}return me(s,Nu(s,"euclidean"))}));return t?Rt(n,0):n}var mP=L({gramSchmidt_:cP});function fP(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return U1(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),r=Nt(P(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(l=>{let[u,p]=U1(l,t);a.push(u),s.push(p)});let i=P(Rt(a,0),e.shape),o=P(Rt(s,0),e.shape);return[i,o]}}function U1(e,t=!1){return O.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=jc(n),s=Vr(e),i=Ur([[1]],[1,1]),o=Vr(i),l=n>=r?r:n;for(let u=0;u<l;++u){let p=s,h=o,d=a;[o,s,a]=O.tidy(()=>{let c=Ue(s,[u,u],[n-u,1]),m=Nu(c),f=Ue(s,[u,u],[1,1]),g=Zt(xn(f,0),Ur([[-1]]),Ur([[1]])),y=he(f,z(g,m)),b=me(c,y);b.shape[0]===1?o=Vr(i):o=ot([i,Ue(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=mt(me(Re(g,y),m)),w=Ue(s,[u,0],[n-u,r]),I=z(x,o),N=De(o);if(u===0)s=he(w,Re(I,Re(N,w)));else{let A=he(w,Re(I,Re(N,w)));s=ot([Ue(s,[0,0],[u,r]),A],0)}let C=De(I),E=Ue(a,[0,u],[n,a.shape[1]-u]);if(u===0)a=he(E,Re(Re(E,o),C));else{let A=he(E,Re(Re(E,o),C));a=ot([Ue(a,[0,0],[n,u]),A],1)}return[o,s,a]}),Ce([p,h,d])}return!t&&n>r&&(a=Ue(a,[0,0],[n,r]),s=Ue(s,[0,0],[r,r])),[a,s]})}var gP=L({qr_:fP}),dn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(dn||(dn={}));function yP(e,t,n=dn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=_(t,"weights","computeWeightedLoss"));let s=a==null?r:z(r,a);if(n===dn.NONE)return s;if(n===dn.SUM)return fe(s);if(n===dn.MEAN){if(a==null)return vt(s);{let i=r.size/a.size,o=me(fe(s),fe(a));return i>1?me(o,we(i)):o}}if(n===dn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return me(fe(s),we(r.size));{let i=z(a,Tn(r.shape)),o=oe(fe(Xs(i,we(0))),"float32");return me(fe(s),o)}}throw Error(`Unknown reduction: ${n}`)}var ya=L({computeWeightedLoss_:yP});function bP(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),yn(a.shape,s.shape,"Error in absoluteDifference: ");let o=$t(he(a,s));return ya(o,i,r)}var xP=L({absoluteDifference_:bP});function wP(e,t,n,r,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;r!=null&&(o=_(r,"weights","cosineDistance")),yn(s.shape,i.shape,"Error in cosineDistance: ");let l=we(1),u=he(l,fe(z(s,i),n,!0));return ya(u,o,a)}var vP=L({cosineDistance_:wP});function kP(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),yn(a.shape,s.shape,"Error in hingeLoss: ");let o=we(1);a=he(z(we(2),a),o);let l=tt(he(o,z(a,s)));return ya(l,i,r)}var IP=L({hingeLoss_:kP});function SP(e,t,n,r=1,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),yn(s.shape,i.shape,"Error in huberLoss: ");let l=we(r),u=$t(he(i,s)),p=Ha(u,l),h=he(u,p),d=Y(z(we(.5),it(p)),z(l,h));return ya(d,o,a)}var NP=L({huberLoss_:SP});function TP(e,t,n,r=1e-7,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),yn(s.shape,i.shape,"Error in logLoss: ");let l=we(1),u=we(r),p=mt(z(s,Gn(Y(i,u)))),h=z(he(l,s),Gn(Y(he(l,i),u))),d=he(p,h);return ya(d,o,a)}var CP=L({logLoss_:TP});function _P(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),yn(a.shape,s.shape,"Error in meanSquaredError: ");let o=im(a,s);return ya(o,i,r)}var EP=L({meanSquaredError_:_P});function $P(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),r=_(t,"logits","sigmoidCrossEntropyWithLogits");yn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=tt(r),s=z(r,n),i=yd(ln(mt($t(r))));return Y(he(a,s),i)}function AP(e,t,n,r=0,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),yn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=we(r),p=we(1),h=we(.5);s=Y(z(s,he(p,u)),z(h,u))}let l=$P(s,i);return ya(l,o,a)}var FP=L({sigmoidCrossEntropy_:AP});function RP(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return qr((r,a,s)=>{let i=bd(a,[n],!0),o=he(oe(a,"float32"),i);s([r,o]);let l=mt(z(o,r));return{value:fe(l,[n]),gradFunc:(u,p)=>{let[h,d]=p,c=Ks(u.shape,[n]);return[z(P(u,c),he(oe(h,"float32"),ln(d))),z(P(u,c),he(ln(d),oe(h,"float32")))]}}})(e,t)}function DP(e,t,n,r=0,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),yn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let u=we(r),p=we(1),h=we(s.shape[1]);s=Y(z(s,he(p,u)),me(u,h))}let l=RP(s,i);return ya(l,o,a)}var MP=L({softmaxCrossEntropy_:DP});function OP(e,t,n,r){let a=_(e,"indices","sparseFillEmptyRows","int32"),s=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=O.runKernel(Jp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var LP=L({sparseFillEmptyRows_:OP});function zP(e,t,n){let r=_(e,"inputIndices","sparseReshape","int32"),a=_(t,"inputShape","sparseReshape","int32"),s=_(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=O.runKernel(fu,i);return{outputIndices:o[0],outputShape:o[1]}}var PP=L({sparseReshape_:zP});function BP(e,t,n){let r=_(e,"data","sparseSegmentMean"),a=_(t,"indices","sparseSegmentMean","int32"),s=_(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Yp,i)}var WP=L({sparseSegmentMean_:BP});function VP(e,t,n){let r=_(e,"data","sparseSegmentSum"),a=_(t,"indices","sparseSegmentSum","int32"),s=_(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Qp,i)}var UP=L({sparseSegmentSum_:VP});function GP(e,t,n,r,a,s,i,o){let l=_(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=_(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=O.runKernel(nd,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}var HP=L({stringNGrams_:GP});function jP(e,t,n=!0){let r=_(e,"input","stringSplit","string"),a=_(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=O.runKernel(rd,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var qP=L({stringSplit_:jP});function KP(e,t){let n=_(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return O.runKernel(ad,a,r)}var XP=L({stringToHashBucketFast_:KP});function ZP(e,t,n,r=!0){let a=_(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return O.runKernel(td,{x:a},s)}var JP=L({staticRegexReplace_:ZP}),bN={fft:Sd,ifft:dl,rfft:Nd,irfft:sm},xN={hammingWindow:Nz,hannWindow:dN,frame:hN,stft:Ez},Qn={flipLeftRight:Rz,grayscaleToRGB:Mz,resizeNearestNeighbor:yN,resizeBilinear:gN,rgbToGrayscale:Lz,rotateWithOffset:Pz,cropAndResize:Az,nonMaxSuppression:Wz,nonMaxSuppressionAsync:Xz,nonMaxSuppressionWithScore:Jz,nonMaxSuppressionWithScoreAsync:Qz,nonMaxSuppressionPadded:tP,nonMaxSuppressionPaddedAsync:rP,threshold:lP,transform:pP},kw={bandPart:hP,gramSchmidt:mP,qr:gP},wN={absoluteDifference:xP,computeWeightedLoss:ya,cosineDistance:vP,hingeLoss:IP,huberLoss:NP,logLoss:CP,meanSquaredError:EP,sigmoidCrossEntropy:FP,softmaxCrossEntropy:MP},vN={sparseFillEmptyRows:LP,sparseReshape:PP,sparseSegmentMean:WP,sparseSegmentSum:UP},kN={stringNGrams:HP,stringSplit:qP,stringToHashBucketFast:XP,staticRegexReplace:JP},ne={};_e(ne,{Serializable:()=>IN,SerializationMap:()=>SN,getRegisteredName:()=>QP,registerClass:()=>NN});var YP=new Map,ub=new Map,IN=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},SN=class Zo{constructor(){this.classNameMap={}}static getMap(){return Zo.instance==null&&(Zo.instance=new Zo),Zo.instance}static register(t){Zo.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function NN(e,t,n){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);let r=n,a=t+">"+r;return SN.register(e),YP.set(a,e),ub.set(e,a),e}function QP(e){return ub.has(e)?ub.get(e):e.className}var ba=class extends IN{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return Ce(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return NS(e,t)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ba,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Iw=class extends ba{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:W(()=>Ge(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;W(()=>{let l=Y(z(i,this.rho),z(it(s),1-this.rho)),u=z(me(rn(Y(o,this.epsilon)),rn(Y(i,this.epsilon))),s),p=Y(z(o,this.rho),z(it(u),1-this.rho));i.assign(l),o.assign(p);let h=Y(z(u,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(e=>e.variable)),Ce(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Sw=class extends ba{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:W(()=>Vn(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;W(()=>{let i=Y(s,it(a));s.assign(i);let o=Y(z(me(a,rn(Y(i,O.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Nw=class extends ba{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(n).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=he(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>Ge(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>Ge(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,h=Y(z(u,this.beta1),z(l,1-this.beta1)),d=Y(z(p,this.beta2),z(it(l),1-this.beta2)),c=me(h,n),m=me(d,r);u.assign(h),p.assign(d);let f=Y(z(me(c,Y(rn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(da(this.beta1,this.iterations_+1)),this.accBeta2.assign(da(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Tw=class extends ba{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=me(-this.learningRate,Y(z(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:Ge(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:Ge(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,h=Y(z(u,this.beta1),z(l,1-this.beta1)),d=z(p,this.beta2),c=$t(l),m=Zr(d,c);u.assign(h),p.assign(m);let f=Y(z(me(r,n),me(h,Y(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},ym=class extends ba{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=O.registeredVariables[t];W(()=>{let s=Y(z(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Lt(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Cw=class extends ym{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:W(()=>Ge(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&W(()=>{let i,o=Y(z(this.m,a),s);this.useNesterov?i=Y(z(this.c,Y(s,z(o,this.m))),r):i=Y(z(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},_w=class extends ba{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:W(()=>Ge(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;W(()=>{let l=Y(z(i,this.decay),z(it(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[n].variable,p=Y(z(u,this.decay),z(s,1-this.decay)),h=me(z(s,this.learningRate),rn(he(l,Y(it(p),this.epsilon)))),d=Y(z(o,this.momentum),h);i.assign(l),u.assign(p),o.assign(d);let c=he(r,d);r.assign(c)}else{let u=Y(z(i,this.decay),z(it(s),1-this.decay)),p=Y(z(o,this.momentum),me(z(s,this.learningRate),rn(Y(u,this.epsilon))));i.assign(u),o.assign(p);let h=he(r,p);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},eB=[Iw,Sw,Nw,Tw,Cw,_w,ym];function tB(){for(let e of eB)NN(e)}var nn={};_e(nn,{CompositeArrayBuffer:()=>ma,browserFiles:()=>lB,browserHTTPRequest:()=>mB,concatenateArrayBuffers:()=>VD,copyModel:()=>pM,decodeWeights:()=>JI,decodeWeightsStream:()=>QI,encodeWeights:()=>OD,fromMemory:()=>gB,fromMemorySync:()=>$N,getLoadHandlers:()=>ZD,getModelArtifactsForJSON:()=>fx,getModelArtifactsForJSONSync:()=>tS,getModelArtifactsInfoForJSON:()=>dd,getSaveHandlers:()=>XD,getWeightSpecs:()=>rb,http:()=>$w,isHTTPScheme:()=>db,listModels:()=>lM,loadWeights:()=>pB,moveModel:()=>dM,registerLoadRouter:()=>KD,registerSaveRouter:()=>qD,removeModel:()=>uM,weightsLoaderFactory:()=>CN,withSaveHandler:()=>yB,withSaveHandlerSync:()=>bB});var nB="model",rB=".json",aB=".weights.bin";function G1(e){return new Promise(t=>setTimeout(t)).then(e)}var Jh=class pb{constructor(t){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(pb.URL_SCHEME)&&(t=t.slice(pb.URL_SCHEME.length)),(t==null||t.length===0)&&(t=nB),this.modelJsonFileName=t+rB,this.weightDataFileName=t+aB}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let n=ma.join(t.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=eS(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await G1(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=r,await G1(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:dd(t)}}}};Jh.URL_SCHEME="downloads://";var sB=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=fx(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>W1(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=W1(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},iB=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jh.URL_SCHEME)?oB(e.slice(Jh.URL_SCHEME.length)):null;sr.registerSaveRouter(iB);function oB(e="model"){return new Jh(e)}function lB(e){return new sB(e)}function H1(e,t,n,r){i(e),n=n??0,r=r??1,o(n,r);let a=0,s=l=>(l.then(u=>{let p=n+ ++a/e.length*(r-n);return t(p),u}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function TN(e,t){t==null&&(t={});let n=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,r=e.map(s=>n(s,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?await Promise.all(r):await H1(r,t.onProgress,0,.5)).map(s=>s.arrayBuffer());return t.onProgress==null?await Promise.all(a):await H1(a,t.onProgress,.5,1)}function uB(e,t){var n;let r=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,a=0,s;return(n=t.onProgress)===null||n===void 0||n.call(t,0),new ReadableStream({pull:async i=>{for(var o;a<e.length;){s||(s=(await r(e[a],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=await s.read();if(l){a++,s=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,a/e.length);continue}i.enqueue(u);return}i.close()}})}async function pB(e,t="",n,r){return CN(a=>TN(a,{requestInit:r}))(e,t,n)}function CN(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,m)=>{let f=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Vs[y]*nt(g.shape),x=()=>{a[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((w,I)=>{w===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(c=>c)){let c=r.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,m,f)=>(m&&c.push(f),c),[]),u=[];l.forEach(c=>{t[c].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;u.push(f)})});let p=await e(u),h={},d=0;return l.forEach(c=>{let m=t[c].paths.length,f=new ma(p.slice(d,d+m));s[c].forEach(g=>{let y=f.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=JI(y,[g.manifestEntry]);for(let x in b)h[x]=b[x]}),d+=m}),h}}var dB="application/octet-stream",hB="application/json",Ew=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=G().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=eS(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:hB}),"model.json"),e.weightData!=null){let s=ma.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:dB}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:dd(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return fx(e,t=>this.loadWeights(t))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=rb(e.weightsManifest),r=()=>uB(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=cB(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let l of o.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):s.push(a+l+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e),n=rb(e),r=await TN(t,this.loadOptions);return[n,r]}};Ew.URL_SCHEME_REGEX=/^https?:\/\//;function cB(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function db(e){return e.match(Ew.URL_SCHEME_REGEX)!=null}var _N=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>db(r)):n=db(e),n)return $w(e,t)}return null};sr.registerSaveRouter(_N);sr.registerLoadRouter(_N);function $w(e,t){return new Ew(e,t)}function mB(e,t){return $w(e,t)}var Ry=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},EN=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},fB=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function gB(e,t,n,r){let a=arguments;return new fB($N(...a))}function $N(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Ry(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ry({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ry({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function yB(e){return new EN(e)}function bB(e){return new EN(e)}var AN={};_e(AN,{confusionMatrix:()=>wB});function xB(e,t,n){let r=_(e,"labels","confusionMatrix"),a=_(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=ll(oe(r,"int32"),n),i=ll(oe(a,"int32"),n),o=De(s),l=Re(o,i);return oe(l,"int32")}var wB=L({confusionMatrix_:xB}),Td={};_e(Td,{draw:()=>_B,fromPixels:()=>EB,fromPixelsAsync:()=>NB,toPixels:()=>CB});var vs,j1=!1;function FN(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(wp(jh,O.backendName)!=null){let d={pixels:e},c={numChannels:t};return O.runKernel(jh,d,c)}let[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(i)p=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)p=e.data;else if(s||a||o){if(vs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")vs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else vs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});vs.canvas.width=l,vs.canvas.height=u,vs.drawImage(e,0,0,l,u),p=vs.getImageData(0,0,l,u).data}let h;if(t===4)h=new Int32Array(p);else{let d=l*u;h=new Int32Array(d*t);for(let c=0;c<d;c++)for(let m=0;m<t;++m)h[c*t+m]=p[c*4+m]}return om(h,[u,l,t],"int32")}function vB(e){return e!=null&&e.data instanceof Uint8Array}function kB(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function IB(e){return e!=null&&e.width!==0&&e.height!==0}function SB(e){return kB()&&!(e instanceof ImageBitmap)&&IB(e)&&!vB(e)}async function NB(e,t=3){let n=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&SB(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return FN(n,t)}function RN(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function TB(e){let t=e?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function CB(e,t){let n=_(e,"img","toPixels");if(!(e instanceof Le)){let u=n;n=oe(u,"int32"),u.dispose()}RN(n);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2],i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let p=[0,0,0,255];for(let d=0;d<s;d++){let c=i[u*s+d];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(p[0]=c*o,p[1]=c*o,p[2]=c*o):p[d]=c*o}let h=u*4;l[h+0]=Math.round(p[0]),l[h+1]=Math.round(p[1]),l[h+2]=Math.round(p[2]),l[h+3]=Math.round(p[3])}if(t!=null){j1||wp(_c,O.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),j1=!0),t.width=a,t.height=r;let u=t.getContext("2d"),p=new ImageData(l,a,r);u.putImageData(p,0,0)}return n!==e&&n.dispose(),l}function _B(e,t,n){let r=_(e,"img","draw");if(!(e instanceof Le)){let i=r;r=oe(i,"int32"),i.dispose()}RN(r),TB(n?.imageOptions);let a={image:r},s={canvas:t,options:n};O.runKernel(_c,a,s)}var EB=L({fromPixels_:FN}),Aw={};_e(Aw,{prepareAndValidate:()=>DN});function DN(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(nt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let p=[...wl(e.shape).map(h=>h/u),1].slice(0,s);return[l,i,u,p]}var Pt={};_e(Pt,{assertParamsValid:()=>AB,computeFlatOffset:()=>OB,computeOutShape:()=>RB,getNormalizedAxes:()=>DB,isSliceContinous:()=>MB,maskToAxes:()=>FB,parseSliceParams:()=>UN,sliceInfo:()=>LB,startForAxis:()=>WN,startIndicesWithElidedDims:()=>zN,stopForAxis:()=>VN,stopIndicesWithElidedDims:()=>PN,stridesForAxis:()=>BN,stridesWithElidedDims:()=>MN});var hb=-2,$B=-1;function AB(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function FB(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function RB(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function MN(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ON(e,t,n){return n<=e?n:n-(t-1)}function LN(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function DB(e,t,n,r,a,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let c=t[0],m=n+1;p=zN(i,c,m,r,e),h=PN(o,c,m,a,e),d=MN(s,c,m,e)}else for(let c=0;c<u;c++)p[c]=WN(i,r,s,e,c,l),h[c]=VN(o,a,s,e,c,l),d[c]=BN(s,c,l);return{begin:p,end:h,strides:d}}function zN(e,t,n,r,a){let s=[...a],i=LN(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=ON(t,n,o),u=r[l];e&1<<l&&(u=0),s[o]=u}return s}function PN(e,t,n,r,a){let s=[...a],i=LN(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=ON(t,n,o),u=r[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=bp(0,s[o],a[o])}return s}function BN(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function WN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=bp(0,i,l-1),i}function VN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),o>0?i=bp(0,i,l):i=bp(-1,i,l-1),i}function MB(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function OB(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function UN(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function LB(e,t,n,r,a,s,i,o,l){let u;if(r==null?(u=new Array(t.length),u.fill(1)):u=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)p&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};zB(h,d);let c=!0,m=!0,f=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<b),w=e[b];if(w===-1){g.push(x?1:-1);continue}let I=[d.beginMask&1<<b,d.endMask&1<<b],N=[d.strides[b]>0?0:-1,d.strides[b]>0?w:w-1];if(x&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&d.strides[b]===1;let C=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(x){let F=d.begin[b]<0?w+d.begin[b]:d.begin[b];if(d.begin[b]=F,d.end[b]=d.begin[b]+1,F<0||F>=w)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=q1(d.begin[b],0,d.strides[b],w,I,N),d.end[b]=q1(d.end[b],1,d.strides[b],w,I,N);let R=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===w;c=c&&R,m=m&&(b===0&&d.strides[b]===1||R)}else c=c&&d.strides[b]===1&&C,m=m&&(b===0&&d.strides[b]===1||C);let E,A=!1;if(d.beginValid&&d.endValid?(E=d.end[b]-d.begin[b],A=!0):x?(E=1,A=!0):C&&w>=0&&(d.strides[b]<0?E=-w:E=w,A=!0),A){let R;E===0||E<0!=d.strides[b]<0?R=0:R=Math.trunc(E/d.strides[b])+(E%d.strides[b]!==0?1:0),g.push(R)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let x=d.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===hb&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>d.finalShapeGatherIndices[x]!==hb),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:d.begin,end:d.end,strides:d.strides}}function zB(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(hb),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push($B),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function q1(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var PB="4.16.0",GN=class{static sgd(e){return new ym(e)}static momentum(e,t,n=!1){return new Cw(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new _w(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Nw(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Iw(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Tw(e,t,n,r,a)}static adagrad(e,t=.1){return new Sw(e,t)}},Ss=GN,BB=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function Fw(){return new Promise(e=>BB(()=>e()))}var T={};_e(T,{ERF_A1:()=>tW,ERF_A2:()=>nW,ERF_A3:()=>rW,ERF_A4:()=>aW,ERF_A5:()=>sW,ERF_P:()=>eW,PARALLELIZE_THRESHOLD:()=>Rw,RowPartitionType:()=>Lr,SELU_SCALE:()=>jN,SELU_SCALEALPHA:()=>HN,applyActivation:()=>fm,assertAndGetBroadcastShape:()=>lt,assertAxesAreInnerMostDims:()=>LO,assertParamsConsistent:()=>WB,assignToTypedArray:()=>dW,axesAreInnerMostDims:()=>Gx,calculateShapes:()=>QS,checkEinsumDimSizes:()=>yW,checkPadOnDimRoundingMode:()=>bn,combineLocations:()=>wS,combineRaggedTensorToTensorShapes:()=>UB,complexWithEvenIndex:()=>lW,complexWithOddIndex:()=>uW,computeConv2DInfo:()=>hd,computeConv3DInfo:()=>dS,computeDefaultPad:()=>Nx,computeDilation2DInfo:()=>MM,computeOptimalWindowSize:()=>qB,computeOutAndReduceShapes:()=>vS,computeOutShape:()=>VB,computePool2DInfo:()=>pS,computePool3DInfo:()=>OM,convertConv2DDataFormat:()=>hS,decodeEinsumEquation:()=>fW,eitherStridesOrDilationsAreOne:()=>Xr,expandShapeToKeepDim:()=>Ks,exponent:()=>cW,exponents:()=>hW,fromStringArrayToUint8:()=>zW,fromUint8ToStringArray:()=>LW,getAxesPermutation:()=>kS,getBroadcastDims:()=>bS,getComplexWithIndex:()=>pW,getEinsumComputePath:()=>bW,getEinsumPermutation:()=>gW,getFusedBiasGradient:()=>mm,getFusedDyActivation:()=>cm,getImageCenter:()=>KB,getInnerMostAxes:()=>zO,getPermuted:()=>ZB,getRaggedRank:()=>HB,getReductionAxes:()=>Dt,getReshaped:()=>XB,getReshapedPermuted:()=>JB,getRowPartitionTypesHelper:()=>GB,getSliceBeginCoords:()=>YB,getSliceSize:()=>QB,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>kW,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>IW,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>SW,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>CW,getSparseReshapeInputOutputMismatchErrorMessage:()=>EW,getSparseReshapeInputOutputMultipleErrorMessage:()=>_W,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>NW,getSparseReshapeNegativeOutputDimErrorMessage:()=>TW,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>RW,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>$W,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>AW,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>FW,getUndoAxesPermutation:()=>Hx,isIdentityPermutation:()=>xW,log:()=>HR,mergeRealAndImagArrays:()=>iW,prepareAndValidate:()=>DN,prepareSplitSize:()=>vW,segment_util:()=>qN,shouldFuse:()=>gm,slice_util:()=>Pt,splitRealAndImagArrays:()=>oW,stridesOrDilationsArePositive:()=>js,tupleValuesAreOne:()=>Ga,upcastType:()=>ar,validateDefaultValueShape:()=>jB,validateInput:()=>um,validateUpdateShape:()=>cw,warn:()=>Fa});function WB(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function VB(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Lr;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Lr||(Lr={}));function UB(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function GB(e){let t={FIRST_DIM_SIZE:Lr.FIRST_DIM_SIZE,VALUE_ROWIDS:Lr.VALUE_ROWIDS,ROW_LENGTHS:Lr.ROW_LENGTHS,ROW_SPLITS:Lr.ROW_SPLITS,ROW_LIMITS:Lr.ROW_LIMITS,ROW_STARTS:Lr.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function HB(e){return e.length===0?0:e[0]===Lr.FIRST_DIM_SIZE?e.length-1:e.length}function jB(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Rw=30;function qB(e){return e<=Rw?e:Hh(e,Math.floor(Math.sqrt(e)))}function KB(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function XB(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function ZB(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function JB(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function YB(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function QB(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var HN=1.7580993408473768,jN=1.0507009873554805,eW=.3275911,tW=.254829592,nW=-.284496736,rW=1.421413741,aW=-1.453152027,sW=1.061405429;function iW(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function oW(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function lW(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function uW(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function pW(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function dW(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function hW(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function cW(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Dy="->",mW=/->/g,K1=",",X1="...";function fW(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(mW,"").length)/Dy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Dy}").`);let[r,a]=e.split(Dy);$(r.indexOf(X1)===-1,()=>`The ellipsis notation ("${X1}") is not supported yet.`);let s=r.split(K1),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let c=a[d];if(!s.some(m=>m.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let d=0;d<r.length;++d){let c=r[d];o.indexOf(c)===-1&&c!==K1&&o.push(c)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let c=0;c<s[d].length;++c)l[d].push(o.indexOf(s[d][c]))}let u=o.length,p=a.length,h=[];for(let d=p;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function gW(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function yW(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function bW(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],l=wW(t,o);for(let u of l)s.indexOf(u)===-1&&(r[i].push(u),s.push(u))}return{path:n,steps:r}}function xW(e){return e.every((t,n)=>t===n)}function wW(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function vW(e,t,n=0){let r=[];if(typeof t=="number")$(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function kW(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function IW(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function SW(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function NW(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function TW(e,t){return`size ${e} must be non-negative, not ${t}`}function CW(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function _W(e,t){let n=nt(e),r=nt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function EW(e,t){let n=nt(e),r=nt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function $W(){return"segment ids must be >= 0"}function AW(){return"segment ids are not increasing"}function FW(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function RW(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var qN={};_e(qN,{collectGatherOpShapeInfo:()=>OW,computeOutShape:()=>MW,segOpComputeOptimalWindowSize:()=>DW});function DW(e,t){let n=!1,r;for(e<=Rw?(r=e,n=!0):r=Hh(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=Hh(e,r+1);return r}function MW(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function OW(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),p*=e.shape[h];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function LW(e){try{return e.map(t=>Kh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function zW(e){return e.map(t=>ud(t))}var Jr={};_e(Jr,{nonMaxSuppressionV3Impl:()=>cN,nonMaxSuppressionV4Impl:()=>mN,nonMaxSuppressionV5Impl:()=>fN,whereImpl:()=>nN});tB();var KN={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,_o(oe(n,"float32"),-1))}}},PW={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=it(oe(n,"float32")),a=rn(he(we(1),r));return mt(me(e,a))}}}},BW={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(he(it(oe(n,"float32")),1));return me(e,r)}}}},WW={kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=e,i=Dt(n.shape,a);return i.length>0&&(s=fe(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Dt(r.shape,a);return i.length>0&&(s=fe(s,i)),P(s,r.shape)}}}},VW={kernelName:li,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},UW={kernelName:Sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},GW={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},HW={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,rn(he(we(1),it(oe(n,"float32")))))}}},jW={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(Y(we(1),it(oe(n,"float32"))));return me(e,r)}}}},qW={kernelName:ci,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=Y(it(n),it(r)),i=z(e,me(r,s)),o=Dt(n.shape,a);return o.length>0&&(i=fe(i,o)),P(i,n.shape)},b:()=>{let s=Y(it(n),it(r)),i=mt(z(e,me(n,s))),o=Dt(r.shape,a);return o.length>0&&(i=fe(i,o)),P(i,r.shape)}}}},KW={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(it(oe(n,"float32")),1))}}},XW={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,he(we(1),it(oe(n,"float32"))))}}};function ZW(e,t,n,r,a,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;o.rank===4&&(p=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),bn("avgPool3dGrad",a,s);let h={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=O.runKernel(Wp,h,d);return p?P(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var JW=L({avgPool3dGrad_:ZW}),YW={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>JW(e,r,a,s,i,o)}}};function QW(e,t,n,r,a){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let p={dy:l,input:o},h={filterSize:n,strides:r,pad:a},d=O.runKernel(Bp,p,h);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var e4=L({avgPoolGrad_:QW}),t4={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>e4(e,r,a,s,i)}}},n4={kernelName:fi,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Re(e,a,!1,!0),b:()=>Re(r,e,!0,!1)}:!s&&i?{a:()=>Re(e,a,!1,!1),b:()=>Re(e,r,!0,!1)}:s&&!i?{a:()=>Re(a,e,!1,!0),b:()=>Re(r,e,!1,!1)}:{a:()=>Re(a,e,!0,!0),b:()=>Re(e,r,!0,!0)}}},r4={kernelName:Cl,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>vd(e,r,a)}}},a4={kernelName:DI,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>fe(e,o,!0)}}},s4={kernelName:gi,gradFunc:e=>({x:()=>e.clone()})},i4={kernelName:yi,gradFunc:e=>({x:()=>Ge(e)})},o4={kernelName:ns,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Zt(mr(ga(r,a),is(r,s)),e,Ge(e))}}},l4={kernelName:Up,inputsToSave:["x"],gradFunc:KN.gradFunc},u4={kernelName:$l,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=gr(a,t[0].shape)[0],i=r.map(o=>o[s]);return Cn(e,i,s).map(o=>()=>o)}},p4={kernelName:bi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(Ga(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Ox(r.shape,e,a,i,o,l),filter:()=>ww(r,e,a.shape,i,o,l)}}},d4={kernelName:xi,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>mn(e,a,s,i,o,1,l),filter:()=>ww(e,r,a.shape,s,i,o,l)}}};function h4(e,t,n,r,a){let s=e;e.rank===4&&(s=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return O.runKernel(Al,o,l)}var c4=L({conv3DBackpropFilter_:h4}),m4={kernelName:wi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(Ga(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>gS(i.shape,e,o,a,s),filter:()=>c4(i,e,o.shape,a,s)}}},f4={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(mt(nm(oe(n,"float32"))),e)}}},g4={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(rm(oe(n,"float32")),e)}}},y4={kernelName:Ii,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=kS([a],r.rank),l=Hc(e,a,s,!i);return o!=null&&(l=De(l,o)),l}}}},b4={kernelName:Si,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r??[1,1];$(Ga(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(Xr(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),bn("depthwiseConv2d",s,i),{x:()=>pN(l.shape,e,u,a,s,o,i),filter:()=>uN(l,e,u.shape,a,s,o,i)}}},x4={kernelName:Ni,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>O.runKernel(rl,s,n),filter:()=>O.runKernel(al,i,n)}}},w4={kernelName:Ci,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>O.runKernel(Ol,r)}}},v4={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(ln(mt(it(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,r)}}},k4={kernelName:Ei,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},I4={kernelName:zl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>P(e,n.shape)}}},S4={kernelName:$i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,ln(n))}}},N4={kernelName:Ai,gradFunc:e=>({x:()=>Ge(e)})},T4={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=me(e,oe(r,"float32")),i=Dt(n.shape,a);return i.length>0?P(fe(s,i),n.shape):s},b:()=>{let s=z(e,oe(n,"float32")),i=Dt(r.shape,a);i.length>0&&(s=P(fe(s,i),r.shape));let o=it(r);return mt(me(s,oe(o,"float32")))}}}},C4={kernelName:Ri,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o??we(1),u=Dt(s.shape,a.shape),p=[];if(s.rank===1){for(let f=0;f<a.shape.length-1;++f)p.push(a.shape[f]);p.push(1)}let h=he(a,s),d=z(e,l),c=em(Y(i,we(r))),m=z(z(z(c,c),c),we(-.5));return{x:()=>s.rank===1?P(z(z(e,Wn(P(c,[1,1,1,s.shape[0]]),p)),l),a.shape):P(z(z(e,c),l),a.shape),mean:()=>{let f=z(z(c,we(-1)),d);return s.rank===1&&(f=fe(f,u)),P(f,s.shape)},variance:()=>{let f=z(z(m,h),d);return s.rank===1&&(f=fe(f,u)),P(f,s.shape)},scale:()=>{let f=z(h,c),g=z(e,f);return s.rank===1&&(g=fe(g,u)),P(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=fe(f,u)),P(f,s.shape)}}}},_4={kernelName:Bl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=gr(s,r.shape)[0],l=(u,p,h)=>()=>{let d=u.shape,c=p.size,m=d.slice(0,o),f=m.length,g=d.slice(s,d.length).slice(1),y=g.length,b=Z1(0,f),x=Z1(f+1,f+1+y),w=J1([m,[c],g]),I=P(h,w),N=P(p,[c]),C=J1([[f],b,x]),E=De(I,C),A=dm(E,N,u.shape[o]),R=Hx(C);return A=De(A,R),A};if(i===1){let u=r.shape[0],p=r.split(u,0);return{x:()=>Rt(p.map((h,d)=>l(h,a.slice(d,1),e.slice(d,1))())).reshape(r.shape),indices:()=>a}}else return{x:l(r,a,e),indices:()=>a}}};function Z1(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function J1(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var E4={kernelName:Di,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ge(n),b:()=>Ge(r)}}},$4={kernelName:Mi,gradFunc:e=>({x:()=>oe(e,"float32")})},A4={kernelName:Oi,gradFunc:e=>({x:()=>Ge(e)})},F4={kernelName:Li,gradFunc:e=>({x:()=>Ge(e)})},R4={kernelName:zi,gradFunc:e=>({x:()=>Ge(e)})},D4={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=xn(r,0);return{x:()=>Zt(s,e,z(e,a))}}},M4={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(n,1))}}},O4={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,oe(n,"float32"))}}},L4={kernelName:OI,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=ln(r);return he(e,z(fe(e,a,!0),s))}}}};function z4(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return O.runKernel(Xl,o,l)}var P4=L({localResponseNormalizationBackprop_:z4}),B4={kernelName:Vi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>P4(r,a,e,s,i,o,l)}}};function XN(e,t,n,r){return t.rank<n.rank&&(t=P(t,Ks(t.shape,r))),e.rank<n.rank&&(e=P(e,Ks(e.shape,r))),{x:()=>z(e,oe(Un(n,t),e.dtype))}}var Y1={kernelName:Ui,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=gr(a,s.shape),l=XN(e,i,s,o);return{x:()=>l.x()}}},W4={kernelName:Gi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,oe(ga(n,r),"float32")),b:()=>z(e,oe(ol(n,r),"float32"))}}};function V4(e,t,n,r,a,s,i){let o=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),u=_(n,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;l.rank===4&&(c=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),bn("maxPool3dGrad",s,i);let m={dy:p,input:h,output:d},f={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(Kp,m,f);return c?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var U4=L({maxPool3dGrad_:V4}),G4={kernelName:Zl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>U4(e,r,a,s,i,o,l)}}};function H4(e,t,n,r,a,s,i){let o=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),u=_(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),bn("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(qp,p,h)}var j4=L({maxPoolGrad_:H4}),q4={kernelName:Hi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>j4(e,r,a,s,i,o)}}},K4={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=gr(a,r.shape),i=vS(r.shape,s)[1],o=nt(i);return{x:()=>{let l=r.shape.slice();s.forEach(p=>{l[p]=1});let u=P(e,l);return me(z(u,Tn(r.shape,"float32")),o)}}}},X4={kernelName:qi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=gr(a,s.shape),l=XN(e,i,s,o);return{x:()=>l.x()}}},Z4={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,oe(is(n,r),"float32")),b:()=>z(e,oe(xn(n,r),"float32"))}}},J4={kernelName:Xi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},Y4={kernelName:Zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=Dt(n.shape,a);return s.length>0?P(fe(e,s),n.shape):e},b:()=>{let s=z(e,mt(Tu(me(n,r)))),i=Dt(r.shape,a);return i.length>0?P(fe(s,i),r.shape):s}}}},Q4={kernelName:Ji,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=z(e,oe(r,"float32")),i=Dt(n.shape,a);return i.length>0?P(fe(s,i),n.shape):s},b:()=>{let s=z(e,oe(n,"float32")),i=Dt(r.shape,a);return i.length>0?P(fe(s,i),r.shape):s}}}},eV={kernelName:Yl,gradFunc:e=>({x:()=>mt(e)})},tV={kernelName:Yi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>kt(n.shape,"float32")}}},nV={kernelName:ru,gradFunc:e=>({x:()=>Ge(e)})},rV={kernelName:au,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Nt(e,r).map(a=>()=>a)}},Q1={kernelName:Qi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},aV={kernelName:eo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=lt(s.shape,i.shape);return{a:()=>{let l=oe(i,"float32"),u=z(e,z(l,da(s,he(l,we(1))))),p=Dt(s.shape,o);return p.length>0&&(u=fe(u,p)),P(u,s.shape)},b:()=>{let l=xn(s,0),u=Zt(l,Gn(s),Ge(s)),p=z(e,z(a,u)),h=Dt(i.shape,o);return h.length>0&&(p=fe(p,h)),P(p,i.shape)}}}},sV={kernelName:to,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=xn(n,0);return{x:()=>Zt(a,e,z(e,r)),alpha:()=>{let s=Zt(a,Ge(e),z(e,n)),i=Dt(r.shape,e.shape);return i.length>0&&(s=fe(s,i)),P(s,r.shape)}}}};function iV(e,t,n){let r=e.shape.slice();r[n]=1;let a=P(t,r),s=Tp(e,n,!0,!1),i=Tp(e,n,!0,!0),o=z(s,i);return z(a,o)}function oV(e,t,n){let r=e.shape.length,a=r-n.length,s=T.getAxesPermutation(n,r),i=e;s!=null&&(i=De(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((h,d)=>h*d,1);o.push(l);let u=i.reshape(o),p=iV(u,t,a);if(p=p.reshape(i.shape),s!=null){let h=T.getUndoAxesPermutation(s);p=De(p,h)}return p}var lV={kernelName:no,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>oV(r,e,s)}}},uV={kernelName:Ti,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=me(e,oe(r,"float32")),i=Dt(n.shape,a);return i.length>0?P(fe(s,i),n.shape):s},b:()=>{let s=z(e,oe(n,"float32")),i=Dt(r.shape,a);i.length>0&&(s=P(fe(s,i),r.shape));let o=it(r);return mt(me(s,oe(o,"float32")))}}}},pV={kernelName:ro,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,mt(it(n)))}}},dV={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(is(n,6),_o(n));return{x:()=>z(e,oe(r,"float32"))}}},hV={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,oe(_o(n),"float32"))}}},cV={kernelName:su,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,n.shape)}}},mV={kernelName:io,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(ou,a,n)}}},fV={kernelName:so,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(iu,a,n)}}},gV={kernelName:lo,gradFunc:(e,t,n)=>{let{dims:r}=n,a=gr(r,e.shape);return{x:()=>ir(e,a)}}},yV={kernelName:uo,gradFunc:e=>({x:()=>Ge(e)})},bV={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>mt(me(e,z(da(n,1.5),2)))}}},xV={kernelName:du,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>oe(Ge(n),"float32"),t:()=>z(e,oe(n,e.dtype)),e:()=>z(e,oe(xd(n),e.dtype))}}},wV={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=xn(n,we(0)),a=we(HN),s=we(jN),i=z(e,s),o=z(z(e,a),ln(oe(n,"float32")));return Zt(r,i,o)}}}},vV={kernelName:go,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,he(we(1),n)))}}},kV={kernelName:fo,gradFunc:e=>({x:()=>Ge(e)})},IV={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(md(oe(n,"float32")),e)}}},SV={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Gc(oe(n,"float32")),e)}}},NV={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=UN(r,a,s),u=[];for(let p=0;p<e.rank;p++)u.push([o[p],i[p]-o[p]-l[p]]);return{x:()=>$r(e,u)}}},TV={kernelName:wo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=z(e,r);return{logits:()=>he(i,z(fe(i,[a],s),r))}}},CV={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,cr(n))}}},ek={kernelName:cu,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>cd(e,r,a)}}},tk={kernelName:mu,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>ot(e,r)}}},_V={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,z(rn(oe(n,"float32")),2))}}},EV={kernelName:ed,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(oe(n,"float32"),2))}}},$V={kernelName:vo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=we(2);return{a:()=>z(e,z(a,he(n,r))),b:()=>z(e,z(a,he(r,n)))}}},AV={kernelName:as,gradFunc:e=>({x:()=>Ge(e)})},FV={kernelName:ko,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=e,i=Dt(n.shape,a);return i.length>0&&(s=fe(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Dt(r.shape,a);return i.length>0&&(s=fe(s,i)),P(mt(s),r.shape)}}}},RV={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;gr(s,r.shape).forEach(l=>{a[l]=1});let i=P(e,a),o=z(i,Tn(r.shape,"float32"));return{x:()=>o}}},DV={kernelName:Io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,it(md(n)))}}},MV={kernelName:So,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(he(we(1),it(n)),e)}}},OV={kernelName:rs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=Ge(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=Y(s,Ue(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=Y(s,Ue(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=Y(s,Ue(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let u=0;u<a[3];++u)s=Y(s,Ue(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},LV={kernelName:oa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Hx(a);return{x:()=>De(e,s)}}},zV={kernelName:wu,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Rt(e,a)}}},PV={kernelName:id,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>BV(e,n)}}};function BV(e,t){let n=Zr(t,Ge(t)),r=Cu(e,n),a=ga(t,we(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Kt(a,o+1);a=mr(a,Tn(r.shape,"bool"));let i=Ge(r);return Zt(a,r,i)}var WV={kernelName:vu,gradFunc:e=>({x:()=>Ge(e)})},VV=[KN,PW,BW,WW,VW,UW,GW,HW,jW,qW,KW,XW,YW,t4,n4,r4,a4,s4,i4,o4,l4,u4,d4,p4,m4,f4,g4,y4,b4,x4,uV,w4,v4,k4,I4,S4,T4,N4,C4,_4,E4,$4,A4,F4,R4,D4,M4,O4,L4,B4,Y1,Y1,W4,G4,q4,K4,X4,Z4,J4,Y4,Q4,eV,tV,nV,rV,Q1,Q1,aV,sV,lV,pV,dV,hV,cV,mV,fV,gV,yV,bV,xV,wV,vV,kV,IV,SV,NV,TV,CV,ek,ek,tk,tk,_V,$V,EV,AV,FV,RV,DV,MV,OV,LV,zV,PV,WV];for(let e of VV)LI(e);Q().prototype.abs=function(){return this.throwIfDisposed(),$t(this)};Q().prototype.acos=function(){return this.throwIfDisposed(),yx(this)};Q().prototype.acosh=function(){return this.throwIfDisposed(),bx(this)};Q().prototype.add=function(e){return this.throwIfDisposed(),Y(this,e)};Q().prototype.all=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)};Q().prototype.any=function(e,t){return this.throwIfDisposed(),Ip(this,e,t)};Q().prototype.argMax=function(e){return this.throwIfDisposed(),Hs(this,e)};Q().prototype.argMin=function(e){return this.throwIfDisposed(),xx(this,e)};Q().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),P(this,[])};Q().prototype.asType=function(e){return this.throwIfDisposed(),oe(this,e)};Q().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};Q().prototype.as2D=function(e,t){return this.throwIfDisposed(),P(this,[e,t])};Q().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),P(this,[e,t,n])};Q().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),P(this,[e,t,n,r])};Q().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),P(this,[e,t,n,r,a])};Q().prototype.asin=function(){return this.throwIfDisposed(),wx(this)};Q().prototype.asinh=function(){return this.throwIfDisposed(),vx(this)};Q().prototype.atan=function(){return this.throwIfDisposed(),kx(this)};Q().prototype.atan2=function(e){return this.throwIfDisposed(),Ix(this,e)};Q().prototype.atanh=function(){return this.throwIfDisposed(),Sx(this)};Q().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),fa(this,e,t,n,r)};Q().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),cd(this,e,t)};Q().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),No(this,e,t,n,r,a)};Q().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Rs(this,e)};Q().prototype.cast=function(e){return this.throwIfDisposed(),oe(this,e)};Q().prototype.ceil=function(){return this.throwIfDisposed(),Ax(this)};Q().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),on(this,e,t)};Q().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Le&&(e=[e]),ot([this,...e],t)};Q().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Vc(this,e,t,n,r,a,s)};Q().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Uc(this,e,t,n,r,a)};Q().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),mn(this,e,t,n,r,a,s)};Q().prototype.cos=function(){return this.throwIfDisposed(),md(this)};Q().prototype.cosh=function(){return this.throwIfDisposed(),Gc(this)};Q().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Tp(this,e,t,n)};Q().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Hc(this,e,t,n)};Q().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Px(this,e,t)};Q().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),To(this,e,t,n,r,a,s)};Q().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Bx(this,e,t,n,r,a)};Q().prototype.divNoNan=function(e){return this.throwIfDisposed(),Wx(this,e)};Q().prototype.div=function(e){return this.throwIfDisposed(),me(this,e)};Q().prototype.dot=function(e){return this.throwIfDisposed(),Vx(this,e)};Q().prototype.elu=function(){return this.throwIfDisposed(),Su(this)};Q().prototype.equal=function(e){return this.throwIfDisposed(),Un(this,e)};Q().prototype.erf=function(){return this.throwIfDisposed(),Ux(this)};Q().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),jx(this,e,t)};Q().prototype.exp=function(){return this.throwIfDisposed(),ln(this)};Q().prototype.expandDims=function(e){return this.throwIfDisposed(),Kt(this,e)};Q().prototype.expm1=function(){return this.throwIfDisposed(),qx(this)};Q().prototype.fft=function(){return this.throwIfDisposed(),Sd(this)};Q().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};Q().prototype.floor=function(){return this.throwIfDisposed(),Tu(this)};Q().prototype.floorDiv=function(e){return this.throwIfDisposed(),Bc(this,e)};Q().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Cu(this,e,t,n)};Q().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ga(this,e)};Q().prototype.greater=function(e){return this.throwIfDisposed(),xn(this,e)};Q().prototype.ifft=function(){return this.throwIfDisposed(),dl(this)};Q().prototype.irfft=function(){return this.throwIfDisposed(),sm(this)};Q().prototype.isFinite=function(){return this.throwIfDisposed(),Kx(this)};Q().prototype.isInf=function(){return this.throwIfDisposed(),Xx(this)};Q().prototype.isNaN=function(){return this.throwIfDisposed(),Zx(this)};Q().prototype.leakyRelu=function(e){return this.throwIfDisposed(),gd(this,e)};Q().prototype.lessEqual=function(e){return this.throwIfDisposed(),is(this,e)};Q().prototype.less=function(e){return this.throwIfDisposed(),ol(this,e)};Q().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Jx(this,e,t,n,r)};Q().prototype.logSigmoid=function(){return this.throwIfDisposed(),Yx(this)};Q().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Kc(this,e)};Q().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),bd(this,e,t)};Q().prototype.log=function(){return this.throwIfDisposed(),Gn(this)};Q().prototype.log1p=function(){return this.throwIfDisposed(),yd(this)};Q().prototype.logicalAnd=function(e){return this.throwIfDisposed(),mr(this,e)};Q().prototype.logicalNot=function(){return this.throwIfDisposed(),xd(this)};Q().prototype.logicalOr=function(e){return this.throwIfDisposed(),Xc(this,e)};Q().prototype.logicalXor=function(e){return this.throwIfDisposed(),Qx(this,e)};Q().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Re(this,e,t,n)};Q().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Ht(this,e,t,n,r)};Q().prototype.max=function(e,t){return this.throwIfDisposed(),rr(this,e,t)};Q().prototype.maximum=function(e){return this.throwIfDisposed(),Zr(this,e)};Q().prototype.mean=function(e,t){return this.throwIfDisposed(),vt(this,e,t)};Q().prototype.min=function(e,t){return this.throwIfDisposed(),il(this,e,t)};Q().prototype.minimum=function(e){return this.throwIfDisposed(),Ha(this,e)};Q().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),tw(this,e,t)};Q().prototype.mod=function(e){return this.throwIfDisposed(),nw(this,e)};Q().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};Q().prototype.neg=function(){return this.throwIfDisposed(),mt(this)};Q().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Nu(this,e,t,n)};Q().prototype.notEqual=function(e){return this.throwIfDisposed(),Xs(this,e)};Q().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ll(this,e,t,n)};Q().prototype.onesLike=function(){return this.throwIfDisposed(),Hn(this)};Q().prototype.pad=function(e,t){return this.throwIfDisposed(),$r(this,e,t)};Q().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),rw(this,e,t,n,r,a,s)};Q().prototype.pow=function(e){return this.throwIfDisposed(),da(this,e)};Q().prototype.prelu=function(e){return this.throwIfDisposed(),kd(this,e)};Q().prototype.prod=function(e,t){return this.throwIfDisposed(),aw(this,e,t)};Q().prototype.reciprocal=function(){return this.throwIfDisposed(),uw(this)};Q().prototype.relu=function(){return this.throwIfDisposed(),tt(this)};Q().prototype.relu6=function(){return this.throwIfDisposed(),Yc(this)};Q().prototype.reshapeAs=function(e){return this.throwIfDisposed(),P(this,e.shape)};Q().prototype.reshape=function(e){return this.throwIfDisposed(),P(this,e)};Q().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),gN(this,e,t,n)};Q().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),yN(this,e,t,n)};Q().prototype.reverse=function(e){return this.throwIfDisposed(),ir(this,e)};Q().prototype.rfft=function(){return this.throwIfDisposed(),Nd(this)};Q().prototype.round=function(){return this.throwIfDisposed(),Qc(this)};Q().prototype.rsqrt=function(){return this.throwIfDisposed(),em(this)};Q().prototype.selu=function(){return this.throwIfDisposed(),tm(this)};Q().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),_u(this,e,t,n,r,a,s)};Q().prototype.sigmoid=function(){return this.throwIfDisposed(),cr(this)};Q().prototype.sign=function(){return this.throwIfDisposed(),pw(this)};Q().prototype.sin=function(){return this.throwIfDisposed(),nm(this)};Q().prototype.sinh=function(){return this.throwIfDisposed(),rm(this)};Q().prototype.slice=function(e,t){return this.throwIfDisposed(),Ue(this,e,t)};Q().prototype.softmax=function(e){return this.throwIfDisposed(),ls(this,e)};Q().prototype.softplus=function(){return this.throwIfDisposed(),Co(this)};Q().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),vd(this,e,t)};Q().prototype.split=function(e,t){return this.throwIfDisposed(),Cn(this,e,t)};Q().prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)};Q().prototype.square=function(){return this.throwIfDisposed(),it(this)};Q().prototype.squaredDifference=function(e){return this.throwIfDisposed(),im(this,e)};Q().prototype.squeeze=function(e){return this.throwIfDisposed(),us(this,e)};Q().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Le?[this,e]:[this,...e];return Rt(n,t)};Q().prototype.step=function(e){return this.throwIfDisposed(),_o(this,e)};Q().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),dw(this,e,t,n,r,a,s,i,o)};Q().prototype.sub=function(e){return this.throwIfDisposed(),he(this,e)};Q().prototype.sum=function(e,t){return this.throwIfDisposed(),fe(this,e,t)};Q().prototype.tan=function(){return this.throwIfDisposed(),hw(this)};Q().prototype.tanh=function(){return this.throwIfDisposed(),qs(this)};Q().prototype.tile=function(e){return this.throwIfDisposed(),Wn(this,e)};Q().prototype.toBool=function(){return this.throwIfDisposed(),oe(this,"bool")};Q().prototype.toFloat=function(){return this.throwIfDisposed(),oe(this,"float32")};Q().prototype.toInt=function(){return this.throwIfDisposed(),oe(this,"int32")};Q().prototype.topk=function(e,t){return this.throwIfDisposed(),mw(this,e,t)};Q().prototype.transpose=function(e){return this.throwIfDisposed(),De(this,e)};Q().prototype.unique=function(e){return this.throwIfDisposed(),fw(this,e)};Q().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),dm(this,e,t)};Q().prototype.unstack=function(e){return this.throwIfDisposed(),Nt(this,e)};Q().prototype.where=function(e,t){return this.throwIfDisposed(),Zt(e,this,t)};Q().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var $a=class ZN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ZN.prototype)}},Br=class JN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,JN.prototype)}},V=class YN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,YN.prototype)}},ze=class QN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,QN.prototype)}},UV=class e2 extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e2.prototype)}},t2=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Js(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function zr(e,t){if(!e)throw new UV(t)}function nk(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Nn(e){return e.length===1?e[0]:e}function et(e){return Array.isArray(e)?e:[e]}function ra(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function _s(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var ur={};function Dw(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cb(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>cb(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:cb(r))}}}function Cd(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in ur)i=ur[s];else if(i=t[s],i==null)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in ur?[o,l]=ur.className:i in t&&([o,l]=t[i]),o==null)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let c of Object.keys(ur))u[c]=ur[c];for(let c of Object.keys(n))u[c]=n[c];let p=s.config;p.customObjects=u;let h=Object.assign({},ur);for(let c of Object.keys(n))ur[c]=n[c];cb(s.config);let d=l(o,s.config,n,a);return ur=Object.assign({},h),d}else{let u=Object.assign({},ur);for(let h of Object.keys(n))ur[h]=n[h];let p=new o(s.config);return ur=Object.assign({},u),p}}}function GV(e,t){return e<t?-1:e>t?1:0}function xh(e,t){return-1*GV(e,t)}function za(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function HV(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Eo(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Mw(e,t,n=0,r=1/0){return zr(n>=0),zr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function Xt(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Xt(n,`element ${r+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${n2(e)}.`)}function n2(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>n2(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function jV(e,t,n){let r=n!=null?n():v.now(),a;return(...s)=>{let i=n!=null?n():v.now();return i-r<t||(r=i,a=e(...s)),a}}function r2(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var qV=0;function a2(){return qV++}var wh={};function bm(e=""){return e in wh||(wh[e]=0),wh[e]+=1,e+wh[e].toString()}var KV=["channelsFirst","channelsLast"],XV=["nearest","bilinear"],ZV=["valid","same","causal"],JV=["max","avg"],YV=["sum","mul","concat","ave"],Ho=new Map;function Tt(e){Eo(KV,"DataFormat",e)}function QV(e){Eo(XV,"InterpolationFormat",e)}function or(e){Eo(ZV,"PaddingMode",e)}function s2(e){Eo(JV,"PoolMode",e)}var mp=[],rk="/";function Ds(e,t){mp.push(e);try{let n=t();return mp.pop(),n}catch(n){throw mp.pop(),n}}function eU(){return mp.length===0?"":mp.join(rk)+rk}function i2(e){if(!l2(e))throw new Error("Not a valid tensor name: '"+e+"'");return eU()+e}function o2(e){if(!l2(e))throw new Error("Not a valid tensor name: '"+e+"'");Ho.has(e)||Ho.set(e,0);let t=Ho.get(e);if(Ho.set(e,Ho.get(e)+1),t>0){let n=`${e}_${t}`;return Ho.set(n,1),n}else return e}var tU=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function l2(e){return!!e.match(tU)}function nU(e){return e===parseInt(e.toString(),10)}function Pa(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function cl(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function qa(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Tr(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var My;function zt(){return My==null&&(My=cx().epsilon()),My}function Cr(){return"channelsLast"}function ha(e,t){return oe(e,t)}function _d(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),P(e,n)}function rU(e,t){return W(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=_d(e,1);return mb(n,[1,t,1])})}function aU(e){let t=[Pa(e.shape)];return P(e,t)}function sU(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Pa(e.shape,1)];return P(e,t)}function Ms(e,t,n){return W(()=>{switch(e.rank){case 1:return Id(e,t,n);case 2:return am(e,[t,0],[n,e.shape[1]]);case 3:return Eu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return pl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ue(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ue(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Oy(e,t,n){return W(()=>{switch(e.rank){case 1:return Id(e,t,n);case 2:return am(e,[0,t],[e.shape[0],n]);case 3:return Eu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return pl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function vh(e,t,n,r){return W(()=>{switch(e.rank){case 1:return Id(e,t,n);case 2:switch(r){case 1:return Ms(e,t,n);case 2:return Oy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ms(e,t,n);case 2:return Eu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Oy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ms(e,t,n);case 2:return pl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return pl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Oy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ow(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),ot(e,t)}function ak(e,t){switch(e.rank){case 1:return Fx([e,t]);case 2:return Rx([e,t],0);case 3:return Dx([e,t],0);case 4:return Mx([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Wn(e,t)}function xm(e,t=0,n=1,r,a){return Jc(e,t,n,r,a)}function Gr(e,t,n,r){if(e.rank<2||t.rank<2)throw new ze(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new ze(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return hl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?fb(e.rank,r,Cr()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=P(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},(d,c)=>c===0?t.rank-2:c<=t.rank-2?c-1:c);t=P(De(t,p),[l,-1]);let h=[...a,...u];return P(hl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?fb(e.rank,r,Cr()):null,activation:n}),h)}}function u2(e,t,n){return W(()=>(Array.isArray(t)?t=Qe(t,"int32"):t=oe(t,"int32"),Cu(e,t,n)))}function Ed(e){return z(e,e)}function fb(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1,1]):P(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1]):P(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1]):P(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,r[0]]):P(t,[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ar(e,t,n){return W(()=>(n==null&&(n=Cr()),Tt(n),Y(e,fb(e.rank,t,n))))}function iU(e,t=1){if(t!==1)throw new ze(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Su(e)}function oU(e){return W(()=>me(e,Y($t(e),1)))}function p2(e,t,n,r){return W(()=>bw(e,t,n,r))}function lU(e){return W(()=>{let t=Y(.5,z(.2,e));return on(t,0,1)})}function $d(e,t,n=!1){return n?e():t()}var uU=["fanIn","fanOut","fanAvg"],pU=["normal","uniform","truncatedNormal"];function dU(e){Eo(uU,"FanMode",e)}function hU(e){Eo(pU,"Distribution",e)}var yr=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Lw=class extends yr{apply(e,t){return kt(e,t)}};Lw.className="Zeros";ne.registerClass(Lw);var wm=class extends yr{apply(e,t){return Tn(e,t)}};wm.className="Ones";ne.registerClass(wm);var zw=class extends yr{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>z(we(this.value),Tn(e,t)))}getConfig(){return{value:this.value}}};zw.className="Constant";ne.registerClass(zw);var Pw=class extends yr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return os(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Pw.className="RandomUniform";ne.registerClass(Pw);var Bw=class extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`randomNormal does not support dType ${t}.`);return xm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Bw.className="RandomNormal";ne.registerClass(Bw);var Ww=class extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`truncatedNormal does not support dType ${t}.`);return pm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ww.className="TruncatedNormal";ne.registerClass(Ww);var Vw=class extends yr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,jc(e[0]))})}getConfig(){return{gain:this.gain}}};Vw.className="Identity";ne.registerClass(Vw);function cU(e,t="channelsLast"){let n,r;if(Tt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Pa(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Pa(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Pa(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var $n=class extends yr{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,dU(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,hU(this.distribution),this.seed=e.seed}apply(e,t){let n=cU(e),r=n[0],a=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`${this.getClassName()} does not support dType ${t}.`);return pm(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return os(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};$n.className="VarianceScaling";ne.registerClass($n);var vm=class extends $n{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}};vm.className="GlorotUniform";ne.registerClass(vm);var km=class extends $n{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}};km.className="GlorotNormal";ne.registerClass(km);var Im=class extends $n{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}};Im.className="HeNormal";ne.registerClass(Im);var Sm=class extends $n{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}};Sm.className="HeUniform";ne.registerClass(Sm);var Nm=class extends $n{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}};Nm.className="LeCunNormal";ne.registerClass(Nm);var Tm=class extends $n{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}};Tm.className="LeCunUniform";ne.registerClass(Tm);var Uw=class extends yr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return W(()=>{if(e.length<2)throw new ze("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;let n=v.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(r,n),Math.min(r,n)],i=xm(s,0,1,t,this.seed),o=kw.qr(i,!1),l=o[0],u=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=z(l,u.sign()),n<r&&(l=l.transpose()),z(we(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};Uw.className="Orthogonal";ne.registerClass(Uw);var sk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ik(e,t={}){return Cd(e,ne.SerializationMap.getMap().classNameMap,t,"initializer")}function It(e){return Dw(e)}function bt(e){if(typeof e=="string"){let t=e in sk?sk[e]:e;if(t==="GlorotNormal")return new km;if(t==="GlorotUniform")return new vm;if(t==="HeNormal")return new Im;if(t==="HeUniform")return new Sm;if(t==="LeCunNormal")return new Nm;if(t==="LeCunUniform")return new Tm;{let n={};return n.className=t,n.config={},ik(n)}}else return e instanceof yr?e:ik(e)}function gb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Yh(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Te(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ke(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Qh(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var ok="Variable",d2=class{constructor(e,t="float32",n=ok,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=a2(),n=n??ok,this.originalName=i2(n),this.name=o2(this.originalName),this.trainable_=r,this.constraint=a,this.val=gw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),mU(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function mU(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function yb(e){return e.map(t=>t.read())}function Gw(e){e.forEach(t=>{t[0].write(t[1])})}var At=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},_r=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=a2(),s!=null&&(this.originalName=i2(s),this.name=o2(this.originalName)),this.rank=t.length}},fU=0,Cm=class{constructor(e,t){this.callArgs=t,this.id=fU++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},gU=0,Pe=class extends ne.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=gU++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ra(n)+"_"+bm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Br(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Nn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Nn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new $a(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new $a(`Layer ${this.name} is not connected, no input to return.`);return Nn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new $a(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new $a(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Nn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=et(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=et(this.inputSpec);if(t.length!==n.length)throw new V(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let a=t[r],s=n[r];if(s==null)continue;let i=a.rank;if(s.ndim!=null&&i!==s.ndim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&a.dtype!==s.dtype)throw new V(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){let o=a.shape;for(let l in s.axes){let u=Number(l),p=s.axes[l],h=u>=0?o[u]:o[o.length+u];if(p!=null&&[p,null].indexOf(h)===-1)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${p} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let l=s.shape[o],u=a.shape[o];if(l!=null&&u!=null&&l!==u)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=et(e),r=xU(e),a=wU(e);if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ds(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of et(e))s.push(i.shape);this.build(Nn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);let i=et(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=Nn(o),this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=yU(e),i=this.computeOutputShape(s),o,l=bU(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,p)=>new _r(l,u,this,et(e),t,this.name,p)):o=new _r(l,i,this,et(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new $a(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new $a(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Qh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return yb(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=yb(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!v.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Gw(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():bt("zeros"));let l=r.apply(t,n),u=new d2(l,n,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),s==null&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=et(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=et(t),s=et(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s,i=null){let o=et(e);t=et(t),n=et(n),r=et(r),a=Yh(a),s=Yh(s);let l=[],u=[],p=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),p.push(h.tensorIndex);new Cm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function yU(e){e=et(e);let t=[];for(let n of e)t.push(n.shape);return Nn(t)}function bU(e){return"float32"}function h2(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],u=h2(i,o,l);for(let p of u)a.indexOf(p)===-1&&a.push(p)}return a}}}function xU(e){let t=!0;for(let n of et(e))if(!(n instanceof _r)){t=!1;break}return t}function wU(e){let t=!0;for(let n of et(e))if(n instanceof _r){t=!1;break}return t}var Au=class extends Pe{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:bm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new _r(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Au.className="InputLayer";ne.registerClass(Au);function c2(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Au({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function vU(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return oe(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Jo=class m2{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof m2)for(let n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(let n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=vU(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new V(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof _r){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof _r){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}},ec=new t2,tc=new t2;function kU(e){ec?.setMaxEntries(e),tc?.setMaxEntries(e)}function sp(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],u=t.names();for(let m of o)u.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p=o.join(",")+"|"+t.names().sort().join(","),h=ec.get(p),d;if(h==null){let m=IU(i,t);h=m.sorted,d=m.recipientCounts,ec.put(p,h),tc.put(p,d)}d={},a||Object.assign(d,tc.get(p));let c=new Jo(t);for(let m=0;m<h.length;++m){if(r!=null){let A=Xh().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let f=h[m],g=f.sourceLayer;if(g instanceof Au)continue;let y=[],b=[],x=[],w=!1;for(let A of f.inputs){let R=c.getValue(A),F=c.getMask(A);y.push(R),b.push(F),F!=null&&(w=!0),a||(d[A.name]--,d[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}w&&(n=n||{},n.mask=b[0]);let I=et(g.apply(y,n)),N=null;g.supportsMasking&&(N=g.computeMask(y,b));let C=NU(f),E=Array.isArray(C)?C:[C];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(N)?N[0]:N);let R=o.indexOf(E[A].name);R!==-1&&(l[R]=I[A])}a||Ce(x)}return c.disposeMasks(),s?l:l[0]}function IU(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=lk(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=lk(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:n,recipientCounts:SU(r)}}function SU(e){let t={};for(let n in e)t[n]=e[n].size;return t}function lk(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&s.push(u)}}return{sorted:r,recipientMap:a}}function NU(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var TU=G();TU.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,kU);var f2={};_e(f2,{maxNorm:()=>CU,minMaxNorm:()=>$U,nonNeg:()=>EU,unitNorm:()=>_U});function Hw(e,t){return W(()=>rn(fe(z(e,e),t,!0)))}var Ad=class extends ne.Serializable{getConfig(){return{}}},jw=class extends Ad{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Hw(e,this.axis),n=on(t,0,this.maxValue);return z(e,me(n,Y(zt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};jw.className="MaxNorm";ne.registerClass(jw);var qw=class extends Ad{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>me(e,Y(zt(),Hw(e,this.axis))))}getConfig(){return{axis:this.axis}}};qw.className="UnitNorm";ne.registerClass(qw);var Kw=class extends Ad{apply(e){return tt(e)}};Kw.className="NonNeg";ne.registerClass(Kw);var Xw=class extends Ad{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Hw(e,this.axis),n=Y(z(this.rate,on(t,this.minValue,this.maxValue)),z(1-this.rate,t));return z(e,me(n,Y(zt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Xw.className="MinMaxNorm";ne.registerClass(Xw);var uk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Bt(e){return Dw(e)}function pk(e,t={}){return Cd(e,ne.SerializationMap.getMap().classNameMap,t,"constraint")}function Wt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in uk?uk[e]:e,config:{}};return pk(t)}else return e instanceof Ad?e:pk(e)}function CU(e){return new jw(e)}function _U(e){return new qw(e)}function EU(){return new Kw}function $U(e){return new Xw(e)}var g2={};_e(g2,{constant:()=>RU,glorotNormal:()=>BU,glorotUniform:()=>PU,heNormal:()=>WU,heUniform:()=>VU,identity:()=>LU,leCunNormal:()=>UU,leCunUniform:()=>GU,ones:()=>FU,orthogonal:()=>HU,randomNormal:()=>MU,randomUniform:()=>DU,truncatedNormal:()=>OU,varianceScaling:()=>zU,zeros:()=>AU});function AU(){return new Lw}function FU(){return new wm}function RU(e){return new zw(e)}function DU(e){return new Pw(e)}function MU(e){return new Bw(e)}function OU(e){return new Ww(e)}function LU(e){return new Vw(e)}function zU(e){return new $n(e)}function PU(e){return new vm(e)}function BU(e){return new km(e)}function WU(e){return new Im(e)}function VU(e){return new Sm(e)}function UU(e){return new Nm(e)}function GU(e){return new Tm(e)}function HU(e){return new Uw(e)}var y2={};_e(y2,{Layer:()=>Pe,RNN:()=>xa,RNNCell:()=>Rd,activation:()=>vH,add:()=>$H,alphaDropout:()=>cj,average:()=>AH,averagePooling1d:()=>o0,averagePooling2d:()=>l0,averagePooling3d:()=>u0,avgPool1d:()=>BH,avgPool2d:()=>VH,avgPool3d:()=>GH,avgPooling1d:()=>WH,avgPooling2d:()=>UH,avgPooling3d:()=>HH,batchNormalization:()=>LH,bidirectional:()=>sj,categoryEncoding:()=>bj,centerCrop:()=>gj,concatenate:()=>FH,conv1d:()=>hH,conv2d:()=>cH,conv2dTranspose:()=>mH,conv3d:()=>fH,conv3dTranspose:()=>gH,convLstm2d:()=>tj,convLstm2dCell:()=>nj,cropping2D:()=>bH,dense:()=>kH,depthwiseConv2d:()=>wH,dot:()=>OH,dropout:()=>IH,elu:()=>iH,embedding:()=>EH,flatten:()=>NH,gaussianDropout:()=>hj,gaussianNoise:()=>dj,globalAveragePooling1d:()=>jH,globalAveragePooling2d:()=>qH,globalMaxPool1d:()=>oj,globalMaxPool2d:()=>lj,globalMaxPooling1d:()=>yT,globalMaxPooling2d:()=>bT,gru:()=>XH,gruCell:()=>ZH,input:()=>M2,inputLayer:()=>sH,layerNormalization:()=>zH,leakyReLU:()=>lH,lstm:()=>JH,lstmCell:()=>YH,masking:()=>mj,maxPool1d:()=>uj,maxPool2d:()=>pj,maxPooling1d:()=>xT,maxPooling2d:()=>wT,maxPooling3d:()=>KH,maximum:()=>RH,minimum:()=>DH,multiply:()=>MH,permute:()=>_H,prelu:()=>uH,randomWidth:()=>xj,reLU:()=>oH,repeatVector:()=>TH,rescaling:()=>fj,reshape:()=>CH,resizing:()=>yj,rnn:()=>rj,separableConv2d:()=>yH,simpleRNN:()=>QH,simpleRNNCell:()=>ej,softmax:()=>pH,spatialDropout1d:()=>SH,stackedRNNCells:()=>aj,thresholdedReLU:()=>dH,timeDistributed:()=>ij,upSampling2d:()=>xH,zeroPadding2d:()=>PH});async function _a(e){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];Ce(r)}}function b2(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var dk;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(dk||(dk={}));var jU=125,ml=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},x2=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},qU=class extends ml{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=W(()=>Y(this.totals[r],z(a,n)));this.totals[r]=i,s?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:W(()=>{let r=z(me(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Lt(t[n])}))}},w2=class extends ml{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},v2=class extends ml{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Fw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=jU),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=jV(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await _a(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await _a(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await _a(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await _a(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await _a(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await _a(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await _a(e),await this.trainEnd(e))}};function k2(e,t){return e==null&&(e={}),e instanceof ml?[e]:Array.isArray(e)&&e[0]instanceof ml?e:et(e).map(n=>new v2(n,t))}var Zw=class Dr{constructor(){}static registerCallbackConstructor(t,n){v.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Dr.checkForDuplicate(n),Dr.constructors[t]==null&&(Dr.constructors[t]=[]),Dr.constructors[t].push(n)}static checkForDuplicate(t){for(let n in Dr.constructors)Dr.constructors[+n].forEach(r=>{if(r===t)throw new V("Duplicate callback constructor.")})}static clear(){Dr.constructors={}}static createCallbacks(t){let n=[];for(let r in Dr.constructors){let a=+r;t>=a&&n.push(...Dr.constructors[a])}return n.map(r=>new r)}};Zw.constructors={};function I2(e,t,n,r,a,s,i,o,l){let u=new w2,p=[new qU,...Zw.createCallbacks(t)];e!=null&&p.push(...e),p.push(u);let h=new x2(p);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Sr(e,t={},n=!1){return Cd(e,ne.SerializationMap.getMap().classNameMap,t,"layer",n)}function nc(e,t){return W(()=>{e.dtype!=="float32"&&(e=oe(e,"float32"));let n=fe(Ed(e),t,!0),r=Vn(n.shape,zt()),a=rn(Zr(n,r));return me(e,a)})}function $o(e,t){return W(()=>vt(Ed(he(t,e)),-1))}function _m(e,t){return W(()=>vt($t(he(t,e)),-1))}function Fu(e,t){return W(()=>{let n=he(e,t),r=on($t(e),zt(),Number.MAX_VALUE),a=$t(me(n,r));return z(100,vt(a,-1))})}function KU(e,t){return W(()=>{let n=on(t,zt(),Number.MAX_VALUE),r=Gn(Y(1,n)),a=on(e,zt(),Number.MAX_VALUE),s=Gn(Y(1,a));return vt(Ed(he(r,s)),-1)})}function XU(e,t){return W(()=>{let n=Zr(0,he(1,z(e,t)));return vt(Ed(n),-1)})}function ZU(e,t){return W(()=>{let n=Zr(0,he(1,z(e,t)));return vt(n,-1)})}function JU(e,t){return W(()=>{let n=fe(z(e,t),-1),r=rr(z(he(1,e),t),-1);return Zr(0,Y(1,he(r,n)))})}function YU(e,t){return W(()=>{let n=Math.log(2),r=he(t,e),a=he(Y(r,Co(z(-2,r))),n);return vt(a,-1)})}function Cp(e,t,n=!1){return W(()=>{if(n)t=ls(t);else{let r=fe(t,t.shape.length-1,!0);t=me(t,r)}return t=on(t,zt(),1-zt()),mt(fe(z(oe(e,"float32"),Gn(t)),t.shape.length-1))})}function rc(e,t,n=!1){return W(()=>{let r=oe(Tu(aU(e)),"int32");t=on(t,zt(),1-zt());let a=t.shape,s=P(ll(r,a[a.length-1]),a);return Cp(s,t,n)})}function QU(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let n=tt(t),r=mt($t(t));return Y(he(n,z(t,e)),yd(ln(r)))})}function Em(e,t){return W(()=>{let n;return n=on(t,zt(),1-zt()),n=Gn(me(n,he(1,n))),vt(QU(e,n),-1)})}function eG(e,t){return W(()=>{let n=on(e,zt(),1),r=on(t,zt(),1);return fe(z(e,Gn(me(n,r))),-1)})}function tG(e,t){return W(()=>{let n=Gn(Y(zt(),t));return vt(he(t,z(e,n)),-1)})}function Jw(e,t){return W(()=>{let n=nc(e,-1),r=nc(t,-1),a=z(n,r);return mt(fe(a,-1))})}var ac={meanSquaredError:$o,meanAbsoluteError:_m,meanAbsolutePercentageError:Fu,meanSquaredLogarithmicError:KU,squaredHinge:XU,hinge:ZU,categoricalHinge:JU,logcosh:YU,categoricalCrossentropy:Cp,sparseCategoricalCrossentropy:rc,binaryCrossentropy:Em,kullbackLeiblerDivergence:eG,poisson:tG,cosineProximity:Jw};function Ly(e){if(typeof e=="string"){if(e in ac)return ac[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function Yw(e,t){return W(()=>{let n=z(.5,Hn(t)),r=ha(xn(t,n),e.dtype);return vt(Un(e,r),-1)})}function Qw(e,t){return W(()=>ha(Un(Hs(e,-1),Hs(t,-1)),"float32"))}function S2(e,t){return W(()=>oe(fe(mr(Un(e,1),Un(t,1))),"float32"))}function nG(e,t){return W(()=>oe(fe(mr(Un(e,1),Un(t,0))),"float32"))}function rG(e,t){return W(()=>oe(fe(mr(Un(e,0),Un(t,1))),"float32"))}function N2(e,t){return W(()=>{let n=S2(e,t),r=rG(e,t),a=Y(n,r);return oe(Zt(xn(a,0),me(n,a),0),"float32")})}function aG(e,t){return W(()=>{let n=S2(e,t),r=nG(e,t),a=Y(n,r);return oe(Zt(xn(a,0),me(n,a),0),"float32")})}function T2(e,t){return Em(e,t)}function C2(e,t){return e.rank===t.rank&&(e=us(e,[e.rank-1])),t=Hs(t,-1),t.dtype!==e.dtype&&(t=oe(t,e.dtype)),oe(Un(e,t),"float32")}var sG=$o,iG=$o,oG=_m,lG=_m,uG=Fu,pG=Fu,ev=Cp,dG=Jw,_2=rc,sc={binaryAccuracy:Yw,categoricalAccuracy:Qw,precision:N2,categoricalCrossentropy:ev,sparseCategoricalCrossentropy:_2,mse:sG,MSE:iG,mae:oG,MAE:lG,mape:uG,MAPE:pG,cosine:dG};function hG(e){if(typeof e=="string"&&e in sc)return sc[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function kh(e){if(zr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(ac))if(ac[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(sc))if(sc[n]===e){t=n;break}return t!==void 0?t:e.name}}function cG(e){let t={Adagrad:()=>Ss.adagrad(.01),Adadelta:()=>Ss.adadelta(1,.95,zt()),Adam:()=>Ss.adam(.001,.9,.999,zt()),Adamax:()=>Ss.adamax(.002,.9,.999,zt(),0),RMSProp:()=>Ss.rmsprop(.001,.9,0,zt()),SGD:()=>Ss.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function hk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!bb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bb(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!bb(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!bb(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function mG(e,t,n,r=console.log){let a=gG(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(p=>Math.floor(t*p)));let i;if(!a){s.push("Receives inputs"),i=[];for(let p in e.nodesByDepth)i.push(...e.nodesByDepth[p])}r("_".repeat(t)),ic(s,n,r),r("=".repeat(t));let o=e.layers;for(let p=0;p<o.length;++p)a?yG(o[p],n,r):bG(o[p],n,i,r),r((p===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=fG(e),u=Qh(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function fG(e){let t;return e.collectedTrainableWeights!=null?t=Qh(e.collectedTrainableWeights):t=Qh(e.trainableWeights),t}function gG(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function ic(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function yG(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];ic(o,t,n)}function bG(e,t,n,r){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){let c=h.inboundLayers[d].name,m=h.nodeIndices[d],f=h.tensorIndices[d];i.push(`${c}[${m}][${f}]`)}let o=e.name,l=e.getClassName(),u=i.length===0?"":i[0],p=[`${o} (${l})`,s,a,e.countParams().toString(),u];ic(p,t,r);for(let h=1;h<i.length;++h)ic(["","","","",i[h]],t,r)}function E2(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function _p(e,t){if(e===null)return null;if(typeof e=="string")return _s(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];E2(t,a,s)?n.push(s):n.push(_p(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=_s(r);n[s]=_p(a,s)}}return n}}function xb(e,t){if(e==null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];E2(t,a,s)?n.push(s):n.push(xb(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=ra(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=xb(a,r)}return n}}var tv="4.16.0",xG=e=>{let t=Object.keys(e);if(t.length===0)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},wG=class Mr extends Pe{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=bm(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],za(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);za(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let x=b.sourceLayer,w=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(let b of this.inputs){let x=b.sourceLayer,w=b.nodeIndex,I=b.tensorIndex;zr(w===0,"input layer has >1 nodes"),zr(I===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let x=this.inputLayers[b];if(!(x instanceof Au))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let n={},r={},a={},s={},i={},o=[],l=(b,x,w,I,N,C)=>{(I==null||N==null||C==null)&&(I=b.sourceLayer,N=b.nodeIndex,C=b.tensorIndex);let E=I.inboundNodes[N];if(w.indexOf(E)!==-1)throw new Br(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(x.indexOf(E)!==-1)return;this.containerNodes.add(Mr.nodeKey(I,N)),I.id in i||(i[I.id]=Object.keys(i).length),w.indexOf(E)===-1&&w.push(E);let A=E.inboundLayers.length;for(let R=0;R<A;R++){let F=E.inputTensors[R],S=E.inboundLayers[R],M=E.nodeIndices[R],B=E.tensorIndices[R];l(F,x,w,S,M,B)}for(x.push(E);w.indexOf(E)>=0;)w.splice(w.indexOf(E),1);o.push(E)},u=[],p=[];for(let b of this.outputs)l(b,u,p);let h=o.slice().reverse();for(let b of h){r[b.id]=b,b.id in n||(n[b.id]=0);let x=n[b.id],w=a[b.outboundLayer.id]==null?0:a[b.outboundLayer.id];x=Math.max(x,w),a[b.outboundLayer.id]=x,s[b.outboundLayer.id]=b.outboundLayer,n[b.id]=x;for(let I=0;I<b.inboundLayers.length;I++){let N=b.inboundLayers[I],C=b.nodeIndices[I],E=N.inboundNodes[C],A=n[E.id]==null?0:n[E.id];n[E.id]=Math.max(x+1,A),r[E.id]=E}}let d={};for(let b in n){let x=n[b];x in d||(d[x]=[]),d[x].push(r[b])}let c={};for(let b in a){let x=a[b];x in c||(c[x]=[]),c[x].push(s[b])}let m=Object.keys(c).map(b=>parseInt(b,10)).sort(xh);this.layers=[];for(let b of m){let x=c[b];x.sort((w,I)=>{let N=i[w.id],C=i[I.id];return N<C?-1:N>C?1:0});for(let w of x)w instanceof Mr&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=c,m=Object.keys(d).map(b=>parseInt(b,10)).sort(xh);let f=this.inputs.slice(),g=[];for(let b of m)for(let x of d[b]){let w=x.outboundLayer;if(w!=null){for(let I of x.inputTensors)if(f.indexOf(I)===-1)throw new Br(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(let I of x.outputTensors)f.push(I);g.push(w.name)}}this.nodesByDepth=d;let y=this.layers.map(b=>b.name);for(let b of y){let x=y.filter(w=>w===b).length;if(x!==1)throw new Br(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){let r={},a=0,s=xG(t);s&&this.parseWeights(t);for(let o of this.layers)for(let[l,u]of o.weights.entries()){let p=s?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(r[p]!=null)throw new V(`Duplicate weight name: ${p}`);r[p]=u,a++}let i=[];for(let o in t){let l=o;if(r[o]==null){let u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(r[l]!=null)i.push([r[l],t[o]]);else if(n)throw new V(`Provided weight data has no target variable: ${o}`);delete r[l]}if(n){let o=[];for(let l in r)o.push(l);if(o.length>0)throw new V(`${o.length} of ${a} weights are not set: ${o}`)}Gw(i)}parseWeights(t){for(let n in Object.keys(t)){let r=n.split("/"),a=["vars","layer_checkpoint_dependencies"],s=r.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");s!==n&&(t[s]=t[n],delete t[n])}}updatedConfig(){let t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${tv}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){let r=xb(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return W(()=>{t=et(t);let r=new Jo;for(let a=0;a<this.inputs.length;++a)r.add(this.inputs[a],t[a]);return sp(this.outputs,r,n)})}computeMask(t,n){return W(()=>{t=et(t);let r;return n==null?r=Js(null,t.length):r=et(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let n=Yh(t);if(n.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let o=0;o<n.length;o++){let l=this.inputLayers[o],u=n[o],p=l.name+"_0_0";r[p]=u}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(xh);if(a.length>1)for(let o of a){let l=this.nodesByDepth[o];for(let u of l){let p=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(p.id)!==-1)continue;let h=[];for(let f=0;f<u.inboundLayers.length;f++){let g=u.inboundLayers[f],y=u.nodeIndices[f],b=u.tensorIndices[f],x=`${g.name}_${y}_${b}`,w=r[x];h.push(w)}let d=p.computeOutputShape(Nn(h)),c=Yh(d),m=p.inboundNodes.indexOf(u);for(let f=0;f<c.length;f++){let g=`${p.name}_${m}_${f}`;r[g]=c[f]}}}let s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){let l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],p=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${p}`;i.push(h)}for(let o=0;o<i.length;o++){let l=i[o];zr(l in r),s.push(r[l])}return Nn(s)}runInternalGraph(t,n){n==null&&(n=Js(null,t.length));let r={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],p=t[l],h=n[l];r[u.id]=[p,h]}let a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(xh);for(let l of a){let u=this.nodesByDepth[l];for(let p of u){let h=p.outboundLayer,d=p.inputTensors,c=p.outputTensors,m=new Array;for(let f of d)f.id in r&&m.push(r[f.id]);if(m.length===d.length){let f={},g,y,b,x;if(p.callArgs!=null&&(f=p.callArgs),m.length===1){let[w,I]=m[0];f.mask==null&&(f.mask=I),b=et(h.call(w,f)),x=et(h.computeMask(w,I)),g=[w],y=[I]}else g=m.map(w=>w[0]),y=m.map(w=>w[1]),f.mask==null&&(f.mask=y),b=et(h.call(g,f)),x=et(h.computeMask(g,y));if(h.activityRegularizer)throw new ze("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<c.length;++w){let I=c[w],N=b[w],C=x[w];r[I.id]=[N,C]}}}}let s=[],i=[],o=[];for(let l of this.outputs){zr(l.id in r,`Could not compute output ${l.name} : ${l.id}`);let[u,p]=r[l.id];o.push(u.shape),s.push(u),i.push(p)}return[s,i,o]}buildNodeConversionMap(t){let n={},r;for(let a of this.layers){r=a instanceof Mr?1:0;for(let s=0;s<a.inboundNodes.length;s++){let i=Mr.nodeKey(a,s);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null)return this.findLayer(n);if(t==null)throw new V("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let r of this.layers)if(r.name===t)return r;throw new V(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return W(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=Mr.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let i of this.layers){let o=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){let d=i.inboundNodes[h],c=Mr.nodeKey(i,h),m={};if(this.containerNodes.has(c)){if(d.callArgs)try{JSON.stringify(d.callArgs),m=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(d.inboundLayers.length>0){let f=[];for(let g=0;g<d.inboundLayers.length;g++){let y=d.inboundLayers[g],b=d.nodeIndices[g],x=d.tensorIndices[g],w=Mr.nodeKey(y,b),I=n[w];I==null&&(I=0),f.push([y.name,I,x,m])}u.push(f)}}}let p={};p.name=i.name,p.className=o,p.config=l,p.inboundNodes=u,r.push(p)}t.layers=r;let a=[];for(let i=0;i<this.inputLayers.length;i++){let o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Mr.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let p=n[u];p==null&&(p=0);let h=this.inputLayersTensorIndices[i];a.push([o.name,p,h])}t.inputLayers=a;let s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Mr.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let p=n[u];p==null&&(p=0);let h=this.outputLayersTensorIndices[i];s.push([o.name,p,h])}return t.outputLayers=s,t}static fromConfig(t,n,r={},a=!1){let s={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){let b=[],x;for(let w of y){let I=w[0],N=w[1],C=w[2];if(x=w[3]==null?{}:w[3],!(I in s)){o(g,y);return}let E=s[I];if(E.inboundNodes.length<=N){o(g,y);return}let A=E.inboundNodes[N];b.push(A.outputTensors[C])}b.length>0&&g.apply(Nn(b),x)}function u(g){let y=g.name,b=Sr(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(a),s[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}let p=n.name,h=n.layers;for(let g of h)u(g);for(;!HV(i);)for(let g of h){let y=s[g.name];if(y.name in i){let b=i[y.name];delete i[y.name];for(let x of b)l(y,x)}}let d=[],c=[],m=n.inputLayers;for(let g of m){let y=g[0],b=g[1],x=g[2];zr(y in s);let w=s[y].inboundNodes[b].outputTensors;d.push(w[x])}let f=n.outputLayers;for(let g of f){let y=g[0],b=g[1],x=g[2];zr(y in s);let w=s[y].inboundNodes[b].outputTensors;c.push(w[x])}return new t({inputs:d,outputs:c,name:p})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function vG(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function $2(e,t){return vG(e,t,"classWeight")}async function A2(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=W(()=>{if(e.shape.length===1)return Vr(e);if(e.shape.length===2){if(e.shape[1]>1)return Hs(e,1);if(e.shape[1]===1)return P(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());Ce(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Qe(i,"float32")}else return null}function kG(e,t){return z(e,t)}var IG=32;function F2(e,t){let n,r,a=t;n=a.xs,r=a.ys,v.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=ck("input",e.inputNames,n),i=ck("output",e.outputNames,r),o=s[0].shape[0];v.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)v.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)v.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function ck(e,t,n){if(n instanceof Le)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function SG(e){if(e.length===3)throw new ze("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function NG(e,t,n){let r=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(mk(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=SG(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;a?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let p=k2(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:c}=I2(p,h,n.epochs,null,null,TG(t,n),null,a,u);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await d.onEpochBegin(m);let y=0,b=0;for(r||(f=await t.iterator());!r||y<n.batchesPerEpoch;){let x=await f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:w,ys:I}=F2(e,x.value),N={};N.batch=b,N.size=w[0].shape[0],await d.onBatchBegin(b,N);let C=[];if(n.classWeight!=null){let R=$2(n.classWeight,e.outputNames);for(let F=0;F<R.length;++F)C.push(await A2(I[F],null,R[F]))}let E=w.concat(I).concat(C),A=o(E);Ce(E);for(let R=0;R<l.length;++R){let F=l[R],S=A[R];N[F]=S,Lt(S)}await d.onBatchEnd(b,N),b2(N),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let w;mk(n.validationData)?w=et(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=et(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?IG:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=w[I]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,g),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function TG(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function mk(e){return typeof e.iterator=="function"}function CG(e){return typeof e.next=="function"}async function _G(e,t,n){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new ze("Verbose mode is not implemented yet.");v.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=CG(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let u=await i.next();if(s=W(()=>{if(u.value){let{xs:p,ys:h}=F2(e,u.value),d=p.concat(h),c=W(()=>a(d));if(Ce(d),l===0)for(let f=0;f<c.length;++f)s.push(we(0));let m=d[0].shape[0];for(let f=0;f<c.length;++f){let g=c[f],y=s[f];s[f]=W(()=>Y(s[f],z(m,g))),l>0&&Ce(y)}Ce(c),o+=m,++l}return s}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let p=s[u];s[u]=me(s[u],o),Ce(p)}return Nn(s)}function zy(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Qu(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Ms(r,t,n-t)):Ms(e,t,n-t)}function wb(e,t){return W(()=>e==null?null:Array.isArray(e)?e.map(n=>wb(n,t)):u2(e,t.dtype==="int32"?t:oe(t,"int32")))}function Py(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function R2(e){let t=[];e instanceof Le&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(_d(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function xr(e,t){if(e==null)return;let n=[];if(t instanceof Le)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof Le)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function EG(e){return e instanceof Le}function vb(e){return Array.isArray(e)}function fk(e){return!EG(e)&&!vb(e)}function gk(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(vb(e)&&e.length>0)i=!0;else if(fk(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(fk(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(vb(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=R2(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],p=n[i][l];if(p!=null&&p>=0&&u!==p)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function $G(e,t,n){let r=za(e.map(s=>s.shape[0]));r.sort();let a=za(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!v.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function AG(e,t,n){let r=[$o,Em,Cp];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===Cp&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let p=0;p<l.length;++p){let h=l[p],d=u[p];if(d!=null&&h!==d)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function yk(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],p=n[i][l];if(p!=null&&p!==u)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function FG(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var RG="layers-model",la=class extends wG{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");mG(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=cG(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ba))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Ly(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Ly(s))}else{let s=Ly(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ds("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=FG(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Ds("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",u,p,h;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===Em?["accuracy","acc"].indexOf(d)!==-1?p=Yw:["crossentropy","ce"].indexOf(d)!==-1&&(p=T2):this.lossFunctions[s]===rc?["accuracy","acc"].indexOf(d)!==-1?p=C2:["crossentropy","ce"].indexOf(d)!==-1&&(p=_2):["accuracy","acc"].indexOf(d)!==-1?p=Qw:["crossentropy","ce"].indexOf(d)!==-1&&(p=ev);let f;["accuracy","acc"].indexOf(d)!==-1?f="acc":["crossentropy","ce"].indexOf(d)!==-1&&(f="ce"),h=p,u=l+f}else h=hG(d),u=l+kh(d);let c;Ds(u,()=>{c=h}),a(s,u,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;zy(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return Nn(o)}finally{xr(a[0],e),xr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),_G(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Jo;if(e instanceof Le&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=sp(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Js(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let r=this.checkNumSamples(e);if(n)throw new ze("Verbose predictLoop() is not implemented yet.");let a=Py(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let o=a[i][0],l=a[i][1],u=Qu(e,o,l),p=[];if(Array.isArray(u))for(let d=0;d<u.length;++d)p.push({key:this.inputs[d],value:u[d]});else p.push({key:this.inputs[0],value:u});let h=new Jo(p);return sp(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return Nn(s.map(i=>ot(i,0)))})}predict(e,t={}){let n=R2(e);yk(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return zy(r),this.predictLoop(n,r)}finally{xr(n,e)}}predictOnBatch(e){yk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new Br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===rc?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=gk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=gk(t,this.feedOutputNames,a,!1,"target"),$G(e,t,null),AG(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let u=$2(r,this.outputNames);l=[];for(let p=0;p<u.length;++p)l.push(await A2(o[p],null,u[p]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return W(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ze("Verbose mode is not implemented yet.");if(a!=null)throw new ze("steps mode in testLoop() is not implemented yet");{let o=Py(s,n),l=Qe(Tr(0,s));for(let u=0;u<o.length;++u){let p=o[u][0],h=o[u][1],d=Ms(l,p,h-p),c=wb(t,d),m=e(c);if(u===0)for(let f=0;f<m.length;++f)i.push(we(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=Y(i[f],z(h-p,g))}}for(let u=0;u<i.length;++u)i[u]=me(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(nk(e,r)>1){let s=nk(e.slice(0,n),r);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let l=[];for(let d=0;d<this.inputs.length;++d)l.push({key:this.inputs[d],value:n[d]});let u=new Jo(l),p=sp(this.outputs,u,{training:!0}),h;for(let d=0;d<this.lossFunctions.length;++d){let c=this.lossFunctions[d],m=c(r[d],p[d]);a[d]!=null&&(m=kG(m,a[d]));let f=vt(m);t.push(f),d===0?h=m:h=Y(h,m)}for(let d=0;d<this.metricsTensors.length;++d){let c;if(this.outputs.length>1&&d<this.outputs.length)c=t[d];else{let m=this.metricsTensors[d][0],f=this.metricsTensors[d][1];c=vt(m(r[f],p[f]))}Lt(c),s.push(c)}return h=vt(h),this.calculateLosses().forEach(d=>{h=Y(h,d)}),h},o=this.collectedTrainableWeights.map(l=>l.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new Jo(s),o=sp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],p=vt(u(a[l],o[l]));l===0?n=p:n=Y(n,p),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],p=this.metricsTensors[l][1],h=vt(u(a[p],o[p]));t.push(h)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,a,s,i,o,l,u,p,h;try{let d=n.batchSize==null?32:n.batchSize;zy(d);let c=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,d);r=c[0],a=c[1],h=c[2];let m=!1,f;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)o=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new ze("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let N=await this.standardizeUserData(o,l,null,null,!0,d);u=N[0],p=N[1],f=u.concat(p)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;let N=Math.floor(r[0].shape[0]*(1-n.validationSplit)),C=r[0].shape[0];u=Qu(r,N,C),s=r,r=Qu(r,0,N),p=Qu(a,N,C),i=a,a=Qu(a,0,N),f=u.concat(p)}else n.validationSteps!=null&&(m=!0);let g=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();let y=this.makeTrainFunction(),b=this.getDedupedMetricsNames(),x,w;m?(this.makeTestFunction(),x=this.testFunction,w=b.slice().concat(b.map(N=>"val_"+N))):(x=null,f=[],w=b.slice());let I=k2(n.callbacks,n.yieldEvery);return await this.fitLoop(y,g,b,d,n.epochs,n.verbose,I,x,f,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,xr(r,e),xr(a,t),xr(s,e),xr(i,t),xr(u,o),xr(p,l),h!=null&&Ce(h)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,p,h,d,c){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(o!=null&&l!=null&&(m=!0),c!=null&&(m=!0,d==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,d,"steps_per_epoch"),g;f!=null&&(g=Tr(0,f)),s==null&&(s=1);let{callbackList:y,history:b}=I2(i,s,a,h,f,d,r,m,p);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<a;++x){await y.onEpochBegin(x);let w={};if(d!=null)throw new ze("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new ze("batch shuffling is not implemneted yet");u&&v.shuffle(g);let I=Qe(g),N=Py(f,r);for(let C=0;C<N.length;++C){let E={};if(await y.onBatchBegin(C,E),W(()=>{let A=N[C][0],R=N[C][1],F=Ms(I,A,R-A);E.batch=C,E.size=R-A;let S=wb(t,F),M=e(S);for(let B=0;B<n.length;++B){let U=n[B],H=M[B];E[U]=H,Lt(H)}if(C===N.length-1&&m){let B=this.testLoop(o,l,r);for(let U=0;U<n.length;++U){let H=n[U],q=B[U];Lt(q),w["val_"+H]=q}}}),await y.onBatchEnd(C,E),b2(E),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,w),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return NG(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Ce(s),xr(n[0],e),xr(n[1],t),Nn(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Xh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ra(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ra(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=ra(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ra(kh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ra(kh(e)));{let e={};for(let t in this.metrics)e[t]=ra(kh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=_p(e.optimizer_config),n=Sr(t),r;if(typeof e.loss=="string")r=_s(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>_s(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=_s(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>_s(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=_s(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if(typeof e=="string"){let a=nn.getSaveHandlers(e);if(a.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new V(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await nn.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:RG,generatedBy:`TensorFlow.js tfjs-layers v${tv}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){r.trainingConfig=this.getTrainingConfig();let a="optimizer",{data:s,specs:i}=await nn.encodeWeights(await this.optimizer.getWeights(),a);n.specs.push(...i),n.data=nn.concatenateArrayBuffers([n.data,s])}return this.userDefinedMetadata!=null&&(hk(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){hk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};la.className="Model";ne.registerClass(la);var D2=class extends la{};D2.className="Functional";ne.registerClass(D2);async function DG(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=_p(n),a=Sr(r,t);if(e.weightsManifest!=null){let s=await nn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),Ce(s)}return a}async function MG(e,t){if(t==null&&(t={}),typeof e=="string"){let n=nn.getLoadHandlers(e,t);if(n.length===0)n.push(nn.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return OG(e,void 0,t)}async function OG(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Sr(_p(a),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:p}=LG(r.weightData,r.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&p.length>0&&await o.optimizer.setWeights(p),Ce(u),Ce(p.map(h=>h.tensor))}return o}function LG(e,t){let n=nn.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var $m=class kb extends la{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:bm("sequential_"),t.layers!=null)for(let n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new V(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n=t instanceof kb||t instanceof la,r;if(n){if(r=t,r.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let a=c2({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=h2(this.outputs[0])}this.inboundNodes=[],new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Js(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{let a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Ke(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new la({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,r=console.log){this.built||this.build(),super.summary(t,n,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,r={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluate(t,n,r)}async evaluateDataset(t,n){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,r={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fit(t,n,r)}async fitDataset(t,n){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,r={},a=!1){let s,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");s=n}else v.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=n.layers,delete n.layers,i=n;let o=new t(i);if(!(o instanceof kb))throw new ze(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let l of s){let u=Sr(l,void 0,a);a&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(t){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let n of this.layers){let r={};r.className=n.getClassName(),r.config=n.getConfig(),t.push(r)}return{name:this.name,layers:t}}};$m.className="Sequential";ne.registerClass($m);function zG(e){return new la(e)}function PG(e){return new $m(e)}function M2(e){return c2(e)}function BG(e,t){Zw.registerCallbackConstructor(e,t)}var Rn=class extends ne.Serializable{getConfig(){return{}}},O2=class extends Rn{apply(e,t=1){return iU(e,t)}};O2.className="elu";ne.registerClass(O2);var L2=class extends Rn{apply(e){return tm(e)}};L2.className="selu";ne.registerClass(L2);var z2=class extends Rn{apply(e){return tt(e)}};z2.className="relu";ne.registerClass(z2);var P2=class extends Rn{apply(e){return W(()=>Ha(6,tt(e)))}};P2.className="relu6";ne.registerClass(P2);var B2=class extends Rn{apply(e){return e}};B2.className="linear";ne.registerClass(B2);var W2=class extends Rn{apply(e){return cr(e)}};W2.className="sigmoid";ne.registerClass(W2);var V2=class extends Rn{apply(e){return lU(e)}};V2.className="hardSigmoid";ne.registerClass(V2);var U2=class extends Rn{apply(e){return Co(e)}};U2.className="softplus";ne.registerClass(U2);var G2=class extends Rn{apply(e){return oU(e)}};G2.className="softsign";ne.registerClass(G2);var H2=class extends Rn{apply(e){return qs(e)}};H2.className="tanh";ne.registerClass(H2);var nv=class extends Rn{apply(e,t=-1){return ls(e,t)}};nv.className="softmax";ne.registerClass(nv);var j2=class extends Rn{apply(e,t=-1){return Kc(e,t)}};j2.className="logSoftmax";ne.registerClass(j2);var q2=class extends Rn{apply(e,t=1){return W(()=>z(cr(z(e,t)),e))}};q2.className="swish";ne.registerClass(q2);var K2=class extends Rn{apply(e){return W(()=>z(e,qs(Co(e))))}};K2.className="mish";ne.registerClass(K2);function Ka(e){return e.getClassName()}function By(e,t={}){return Cd(e,ne.SerializationMap.getMap().classNameMap,t,"activation")}function Xa(e){if(e==null){let t={};return t.className="linear",t.config={},By(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},By(t)}else return e instanceof Rn?e:By(e)}function rv(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var X2=class extends ne.Serializable{},Fd=class extends X2{constructor(e){super(),rv(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=kt([1]);return this.hasL1&&(t=Y(t,fe(z(this.l1,$t(e))))),this.hasL2&&(t=Y(t,fe(z(this.l2,Ed(e))))),P(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Fd.className="L1L2";ne.registerClass(Fd);function WG(e){return rv(e),new Fd({l1:e!=null?e.l1:null,l2:0})}function VG(e){return rv(e),new Fd({l2:e!=null?e.l2:null,l1:0})}var bk={l1l2:"L1L2"};function dt(e){return Dw(e)}function xk(e,t={}){return Cd(e,ne.SerializationMap.getMap().classNameMap,t,"regularizer")}function xt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in bk?bk[e]:e,config:{}};return xk(t)}else return e instanceof X2?e:xk(e)}var av=class extends Pe{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Te(e);let n=tt(e);return this.maxValue!=null&&(n=on(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};av.className="ReLU";ne.registerClass(av);var sv=class extends Pe{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Te(e);return gd(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};sv.className="LeakyReLU";ne.registerClass(sv);var iv=class extends Pe{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=bt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=xt(e.alphaRegularizer),this.alphaConstraint=Wt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ke(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new At({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Te(e),kd(e,this.alpha.read())}getConfig(){let e={alphaInitializer:It(this.alphaInitializer),alphaRegularizer:dt(this.alphaRegularizer),alphaConstraint:Bt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};iv.className="PReLU";ne.registerClass(iv);var ov=class extends Pe{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ze(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Te(e);return Su(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ov.className="ELU";ne.registerClass(ov);var lv=class extends Pe{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Te(e);return z(n,oe(xn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};lv.className="ThresholdedReLU";ne.registerClass(lv);var uv=class extends Pe{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new nv().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return W(()=>{let n=Te(e),r=t.mask;if(r!=null){let a=z(he(Tn(n.shape),oe(r,n.dtype)),we(-1e9));n=Y(n,a)}return this.axis instanceof Array?this.axis.length>1?ln(he(n,bd(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};uv.className="Softmax";ne.registerClass(uv);function tl(e,t,n){if(typeof e=="number")return Js(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!nU(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Nr(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function Pr(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+qa([n-t,0]);else if(r==="same")e=e*t;else throw new V(`Unsupport padding mode: ${r}.`);return e}function pv(e,t){return W(()=>(Tt(t),t==="channelsFirst"?De(e,[0,2,3,1]):e))}function Z2(e,t){return W(()=>(Tt(t),t==="channelsFirst"?De(e,[0,2,3,4,1]):e))}function UG(e,t,n,r=1,a="valid",s,i=1){return W(()=>{if(s==null&&(s=Cr()),Tt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=De(e,[0,2,1])),a==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Vc(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Ar(o,n)),o})}function wk(e,t,n,r=[1,1],a="valid",s,i,o=null){return W(()=>{if(s==null&&(s=Cr()),Tt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=pv(e,s);if(a==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=hl.conv2d({x:l,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=De(l,[0,3,1,2])),l})}function GG(e,t,n,r=[1,1,1],a="valid",s,i){return W(()=>{if(s==null&&(s=Cr()),Tt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Z2(e,s);if(a==="causal")throw new ze("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Lx(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Ar(o,n)),s==="channelsFirst"&&(o=De(o,[0,4,1,2,3])),o})}var J2=class Y2 extends Pe{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Y2.verifyArgs(n),this.rank=t,Xt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ze(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tl(n.kernelSize,t,"kernelSize"),this.strides=tl(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,or(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Tt(this.dataFormat),this.activation=Xa(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=bt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Wt(n.biasConstraint),this.biasRegularizer=xt(n.biasRegularizer),this.activityRegularizer=xt(n.activityRegularizer),this.dilationRate=tl(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(zr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Mw(t.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ka(this.activation),useBias:this.useBias,biasInitializer:It(this.biasInitializer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),biasConstraint:Bt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}},Am=class Q2 extends J2{constructor(t,n){super(t,n),this.kernel=null,Q2.verifyArgs(n),this.filters=n.filters,Xt(this.filters,"filters"),this.kernelInitializer=bt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Wt(n.kernelConstraint),this.kernelRegularizer=xt(n.kernelRegularizer)}build(t){t=Ke(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[n]}`);let r=t[n],a=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return W(()=>{t=Te(t);let r,a=this.bias==null?null:this.bias.read(),s=r2(this.activation.getClassName());if(s!=null&&this.rank===2)r=wk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)r=UG(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=wk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=GG(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ze("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Ke(t);let n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<r.length;++s){let i=Nr(r[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);n.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){let t={filters:this.filters,kernelInitializer:It(this.kernelInitializer),kernelRegularizer:dt(this.kernelRegularizer),kernelConstraint:Bt(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Fm=class eT extends Am{constructor(t){super(2,t),eT.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Mw(t.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Fm.className="Conv2D";ne.registerClass(Fm);var Rm=class tT extends Am{constructor(t){super(3,t),tT.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};Rm.className="Conv3D";ne.registerClass(Rm);var dv=class extends Fm{constructor(e){if(super(e),this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ke(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Te(e);if(n.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],l=r[i],u=this.kernelSize[0],p=this.kernelSize[1],h=this.strides[0],d=this.strides[1],c=Pr(o,h,u,this.padding),m=Pr(l,d,p,this.padding),f=[a,c,m,this.filters];this.dataFormat!=="channelsLast"&&(n=De(n,[0,2,3,1]));let g=Uc(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=De(g,[0,3,1,2])),this.bias!=null&&(g=Ar(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Ke(e);let t=e.slice(),n,r,a;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Pr(t[r],o,s,this.padding),t[a]=Pr(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};dv.className="Conv2DTranspose";ne.registerClass(dv);var hv=class extends Rm{constructor(e){if(super(e),this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ke(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Te(e);if(n.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=r[o],u=r[s],p=r[i],h=this.kernelSize[0],d=this.kernelSize[1],c=this.kernelSize[2],m=this.strides[0],f=this.strides[1],g=this.strides[2],y=Pr(l,m,h,this.padding),b=Pr(u,f,d,this.padding),x=Pr(p,g,c,this.padding),w=[a,y,b,x,this.filters];this.dataFormat!=="channelsLast"&&(n=De(n,[0,2,3,4,1]));let I=zx(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=De(I,[0,4,1,2,3])),this.bias!==null&&(I=Ar(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Ke(e);let t=e.slice(),n,r,a,s;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Pr(t[r],u,i,this.padding),t[a]=Pr(t[a],p,o,this.padding),t[s]=Pr(t[s],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};hv.className="Conv3DTranspose";ne.registerClass(hv);var nT=class extends Am{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=bt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=xt(t.depthwiseRegularizer),this.depthwiseConstraint=Wt(t.depthwiseConstraint),this.pointwiseInitializer=bt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=xt(t.pointwiseRegularizer),this.pointwiseConstraint=Wt(t.pointwiseConstraint)}build(e){if(e=Ke(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{e=Te(e);let n;if(this.rank===1)throw new ze("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=De(e,[0,2,3,1])),n=_u(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=De(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=It(this.depthwiseInitializer),e.pointwiseInitializer=It(this.pointwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.pointwiseRegularizer=dt(this.pointwiseRegularizer),e.depthwiseConstraint=Bt(this.depthwiseConstraint),e.pointwiseConstraint=Bt(this.pointwiseConstraint),e}};nT.className="SeparableConv";var cv=class extends nT{constructor(e){super(2,e)}};cv.className="SeparableConv2D";ne.registerClass(cv);var mv=class rT extends Am{constructor(t){super(1,t),rT.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Mw(t.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};mv.className="Conv1D";ne.registerClass(mv);var fv=class extends Pe{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Te(e),this.dataFormat==="channelsLast"){let n=vh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vh(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=vh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vh(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};fv.className="Cropping2D";ne.registerClass(fv);var gv=class extends Pe{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,QV(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return W(()=>{let n=Te(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=De(n,[0,2,3,1]);let a=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?Qn.resizeNearestNeighbor(n,[a,s]):Qn.resizeBilinear(n,[a,s]);return De(i,[0,3,1,2])}else{let a=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?Qn.resizeNearestNeighbor(n,[a,s]):Qn.resizeBilinear(n,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};gv.className="UpSampling2D";ne.registerClass(gv);function HG(e,t,n=[1,1],r="valid",a,s){return W(()=>{a==null&&(a=Cr()),Tt(a);let i=pv(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=To(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=De(i,[0,3,1,2])),i})}var yv=class extends J2{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=bt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Wt(e.depthwiseConstraint),this.depthwiseRegularizer=xt(e.depthwiseRegularizer)}build(e){if(e=Ke(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{e=Te(e);let n=HG(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Nr(t,this.kernelSize[0],this.padding,this.strides[0]),s=Nr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=It(this.depthwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.depthwiseConstraint=Bt(this.depthwiseRegularizer),e}};yv.className="DepthwiseConv2D";ne.registerClass(yv);function aT(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function sT(e,t,n,r=!1,a,s,i=!1,o=!1){return W(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Tr(2,l));if(t=De(t,u),s!=null)throw new ze("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=oe(oe(a,"bool"),"float32"),a.rank===l-1&&(a=Kt(a,-1)),a=De(a,u)),r&&(t=ir(t,0),a!=null&&(a=ir(a,0)));let p=[],h,d=n,c=t.shape[0],m=Nt(t),f;a!=null&&(f=Nt(a));for(let y=0;y<c;++y){let b=m[y],x=W(()=>e(b,d));if(a==null)h=x[0],d=x[1];else{let w=W(()=>{let I=f[y],N=he(Hn(I),I),C=Y(z(x[0],I),z(d[0],N)),E=d.map((A,R)=>Y(z(x[1][R],I),z(A,N)));return{output:C,newStates:E}});h=w.output,d=w.newStates}o&&p.push(h)}let g;return o&&(g=Rt(p,1)),[h,g,d]})}var xa=class iT extends Pe{constructor(t){super(t);let n;if(t.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new Om({cells:t.cell}):n=t.cell,n.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Tr(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){gb(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let r=n[0],a;if(this.returnSequences?a=[t[0],t[1],r]:a=[t[0],r],this.returnState){let s=[];for(let i of n)s.push([t[0],i]);return[a].concat(s)}else return a}computeMask(t,n){return W(()=>{Array.isArray(n)&&(n=n[0]);let r=this.returnSequences?n:null;if(this.returnState){let a=this.states.map(s=>null);return[r].concat(a)}else return r})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let r=0;r<t;++r)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new ze("Constants support is not implemented in RNN yet.");gb(t)&&(t=t[0]),t=t;let n=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new At({shape:[n,null,...r]});let a=[t[0]].concat(t.slice(2));this.cell.build(a);let s;if(Array.isArray(this.cell.stateSize)?s=this.cell.stateSize:s=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),s))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(i=>new At({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){W(()=>{if(!this.stateful)throw new $a("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>kt([r,a])):this.states_=[kt([r,this.cell.stateSize])];else if(t==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>kt([r,a])):this.states_[0]=kt([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let a=0;a<this.states_.length;++a){let s=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,o=[r,i];if(!v.arraysEqual(s.shape,o))throw new V(`State ${a} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[a]=s}}this.states_=this.states_.map(a=>Lt(a.clone()))})}apply(t,n){let r=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});let s=aT(t,r,a,this.numConstants);t=s.inputs,r=s.initialState,a=s.constants;let i=[],o=[];if(r!=null){n.initialState=r,i=i.concat(r),this.stateSpec=[];for(let l of r)this.stateSpec.push(new At({shape:l.shape}));o=o.concat(this.stateSpec)}if(a!=null&&(n.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof _r){let l=[t].concat(i),u=this.inputSpec.concat(o),p=this.inputSpec;this.inputSpec=u;let h=super.apply(l,n);return this.inputSpec=p,h}else return super.apply(t,n)}call(t,n){return W(()=>{let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;t=Te(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new V(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:a},l=sT((c,m)=>{let f=this.cell.call([c].concat(m),o);return[f[0],f.slice(1)]},t,s,this.goBackwards,r,null,this.unroll,this.returnSequences),u=l[0],p=l[1],h=l[2];this.stateful&&this.resetStates(h,a);let d=this.returnSequences?p:u;return this.returnState?[d].concat(h):d})}getInitialState(t){return W(()=>{let n=kt(t.shape);return n=fe(n,[1,2]),n=_d(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?mb(n,[1,r]):n):this.cell.stateSize>1?[mb(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===iT.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),n)}static fromConfig(t,n,r={}){let a=n.cell,s=Sr(a,r);return new t(Object.assign(n,{cell:s}))}};xa.className="RNN";ne.registerClass(xa);var Rd=class extends Pe{},Dm=class extends Rd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xt(this.units,"units"),this.activation=Xa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=xt(e.kernelRegularizer),this.recurrentRegularizer=xt(e.recurrentRegularizer),this.biasRegularizer=xt(e.biasRegularizer),this.kernelConstraint=Wt(e.kernelConstraint),this.recurrentConstraint=Wt(e.recurrentConstraint),this.biasConstraint=Wt(e.biasConstraint),this.dropout=cl([1,qa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,qa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Za({ones:()=>Hn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Za({ones:()=>Hn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Gr(z(e,s),this.kernel.read()):a=Gr(e,this.kernel.read()),this.bias!=null&&(a=Ar(a,this.bias.read())),i!=null&&(n=z(n,i));let o=Y(a,Gr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ka(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Dm.className="SimpleRNNCell";ne.registerClass(Dm);var bv=class extends xa{constructor(e){e.cell=new Dm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};bv.className="SimpleRNN";ne.registerClass(bv);var Mm=class extends Rd{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Xt(this.units,"units"),this.activation=Xa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=xt(e.kernelRegularizer),this.recurrentRegularizer=xt(e.recurrentRegularizer),this.biasRegularizer=xt(e.biasRegularizer),this.kernelConstraint=Wt(e.kernelConstraint),this.recurrentConstraint=Wt(e.recurrentConstraint),this.biasConstraint=Wt(e.biasConstraint),this.dropout=cl([1,qa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,qa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Za({ones:()=>Hn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Za({ones:()=>Hn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=z(e,a[0]));let u=Gr(e,this.kernel.read());this.useBias&&(u=Ar(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,s[0]));let p=this.recurrentKernel.read(),[h,d]=Cn(p,[2*this.units,this.units],p.rank-1),c=Gr(r,h),[m,f,g]=Cn(u,3,u.rank-1),[y,b]=Cn(c,2,c.rank-1);i=this.recurrentActivation.apply(Y(m,y)),o=this.recurrentActivation.apply(Y(f,b));let x=Gr(z(o,r),d);l=this.activation.apply(Y(g,x));let w=Y(z(i,r),z(Y(1,mt(i)),l));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ka(this.activation),recurrentActivation:Ka(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Mm.className="GRUCell";ne.registerClass(Mm);var xv=class extends xa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Mm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};xv.className="GRU";ne.registerClass(xv);var Dd=class extends Rd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xt(this.units,"units"),this.activation=Xa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=xt(e.kernelRegularizer),this.recurrentRegularizer=xt(e.recurrentRegularizer),this.biasRegularizer=xt(e.biasRegularizer),this.kernelConstraint=Wt(e.kernelConstraint),this.recurrentConstraint=Wt(e.recurrentConstraint),this.biasConstraint=Wt(e.biasConstraint),this.dropout=cl([1,qa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=cl([1,qa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ke(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;r=new(t=class extends yr{apply(i,o){let l=a.apply([s]),u=new wm().apply([s]),p=a.apply([s*2]);return ak(ak(l,u),p)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Za({ones:()=>Hn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Za({ones:()=>Hn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u,p;0<this.dropout&&this.dropout<1&&(e=z(e,s[0]));let h=Gr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,i[0])),h=Y(h,Gr(r,this.recurrentKernel.read())),this.useBias&&(h=Ar(h,this.bias.read()));let[d,c,m,f]=Cn(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(c),u=Y(z(l,a),z(o,this.activation.apply(m))),p=this.recurrentActivation.apply(f);let g=z(p,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ka(this.activation),recurrentActivation:Ka(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};Dd.className="LSTMCell";ne.registerClass(Dd);var wv=class extends xa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Dd(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};wv.className="LSTM";ne.registerClass(wv);var Om=class extends Rd{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{e=e;let n=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(n.splice(0,i.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(let i of a.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){gb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{Ds(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(Sr(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return yb(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],a[s]])}Gw(t)}};Om.className="StackedRNNCells";ne.registerClass(Om);function Za(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):p2(t(),n),o=()=>$d(i,t,r);return!a||a<=1?Lt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Lt(l.clone()))}var jG=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},oT=class extends xa{constructor(e){if(e.unroll)throw new ze("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ze("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new At({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=kt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new $a("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(a)):this.states_=[kt(a)];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(a)):this.states_[0]=kt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!v.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Lt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],p=Nr(l,r[0],a,s[0],i[0]),h=Nr(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,h]:[p,h,n]]}};oT.className="ConvRNN2D";var Lm=class extends Dd{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Xt(this.filters,"filters"),this.kernelSize=tl(n,2,"kernelSize"),this.kernelSize.forEach(o=>Xt(o,"kernelSize")),this.strides=tl(r||1,2,"strides"),this.strides.forEach(o=>Xt(o,"strides")),this.padding=a||"valid",or(this.padding),this.dataFormat=s||"channelsLast",Tt(this.dataFormat),this.dilationRate=tl(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Xt(o,"dilationRate"))}build(e){var t;e=Ke(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;o=new(t=class extends yr{apply(p,h){let d=l.apply([u]),c=Tn([u]),m=l.apply([u*2]);return Ow([d,c,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Za({ones:()=>Hn(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(Z,J,ee)=>!J||!J[ee]?Z:z(J[ee],Z),u=l(r,o,0),p=l(r,o,1),h=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Za({ones:()=>Hn(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,m=l(a,c,0),f=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,w,I,N]=Cn(this.kernel.read(),i,b),[C,E,A,R]=this.useBias?Cn(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,C,this.padding),p=this.inputConv(p,w,E,this.padding),h=this.inputConv(h,I,A,this.padding),d=this.inputConv(d,N,R,this.padding);let[F,S,M,B]=Cn(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,F),f=this.recurrentConv(f,S),g=this.recurrentConv(g,M),y=this.recurrentConv(y,B);let U=this.recurrentActivation.apply(Y(u,m)),H=this.recurrentActivation.apply(Y(p,f)),q=Y(z(H,s),z(U,this.activation.apply(Y(h,g)))),K=z(this.recurrentActivation.apply(Y(d,y)),this.activation.apply(q));return[K,K,q]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=jG(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=mn(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Ar(a,n,this.dataFormat):a}recurrentConv(e,t){return mn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Lm.className="ConvLSTM2DCell";ne.registerClass(Lm);var vv=class extends oT{constructor(e){let t=new Lm(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};vv.className="ConvLSTM2D";ne.registerClass(vv);var zm=class extends Pe{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,a=this.getNoiseShape(n);return $d(()=>p2(n,this.rate,a,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};zm.className="Dropout";ne.registerClass(zm);var kv=class extends zm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};kv.className="SpatialDropout1D";ne.registerClass(kv);var Iv=class extends Pe{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Xt(this.units,"units"),this.activation=Xa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Wt(e.kernelConstraint),this.biasConstraint=Wt(e.biasConstraint),this.kernelRegularizer=xt(e.kernelRegularizer),this.biasRegularizer=xt(e.biasRegularizer),this.activityRegularizer=xt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ke(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ke(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e),r=r2(this.activation.getClassName()),a;return r!=null?a=Gr(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Gr(n,this.kernel.read()),this.bias!=null&&(a=Ar(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Ka(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),biasConstraint:Bt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Iv.className="Dense";ne.registerClass(Iv);var Sv=class extends Pe{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ke(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Pa(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let a=2;a<n.rank;++a)r.push(a);r.push(1),n=De(n,r)}return sU(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Sv.className="Flatten";ne.registerClass(Sv);var Nv=class extends Pe{constructor(e){super(e),this.supportsMasking=!0,this.activation=Xa(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ka(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Nv.className="Activation";ne.registerClass(Nv);var Tv=class extends Pe{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>(e=Te(e),rU(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Tv.className="RepeatVector";ne.registerClass(Tv);var Cv=class extends Pe{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else a*=l}let i=Pa(e);if(s!==null){if(a===0||i%a!==0)throw new V(n);r[s]=i/a}else if(i!==a)throw new V(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return P(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Cv.className="Reshape";ne.registerClass(Cv);var _v=class extends Pe{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Tr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ke(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return De(Te(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};_v.className="Permute";ne.registerClass(_v);var Ev=class extends Pe{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Te(e);return Ip(Xs(n,this.maskValue),-1)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e),r=Ip(Xs(n,this.maskValue),-1,!0);return z(n,oe(r,n.dtype))})}};Ev.className="Masking";ne.registerClass(Ev);var $v=class extends Pe{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(et(e.inputLength))}this.inputDim=e.inputDim,Xt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Xt(this.outputDim,"outputDim"),this.embeddingsInitializer=bt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=xt(e.embeddingsRegularizer),this.activityRegularizer=xt(e.activityRegularizer),this.embeddingsConstraint=Wt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Te(e),Xs(e,Ge(e))):null)}computeOutputShape(e){if(e=Ke(e),this.inputLength==null)return[...e,this.outputDim];let t=et(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(a!=null&&s!=null&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);n.dtype!=="int32"&&(n=ha(n,"int32"));let r=u2(this.embeddings.read(),P(n,[n.size]));return P(r,Ke(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:It(this.embeddingsInitializer),embeddingsRegularizer:dt(this.embeddingsRegularizer),activityRegularizer:dt(this.activityRegularizer),embeddingsConstraint:Bt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};$v.className="Embedding";ne.registerClass($v);var Ao=class extends Pe{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ze}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ke(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=za(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&za(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=qa(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=_d(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,p=u[0],h=u.slice(1).concat([p]),d=P(o,[p].concat(Pa(u.slice(1))));d=De(d,[1,0]),d=P(d,h),n.push(d),a=!0}else if(l>1){let u=Tr(1,l).concat([0]);n.push(De(o,u)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,u=o[l-1],p=[u].concat(o.slice(0,o.length-1));s=P(De(P(s,[-1,u]),[1,0]),p)}else if(i>1){let o=[i-1].concat(Tr(0,i-1));s=De(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=za(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Kt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=mr(n,t[r]);return n})}},Av=class extends Ao{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return t})}};Av.className="Add";ne.registerClass(Av);var Fv=class extends Ao{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=z(t,e[n]);return t})}};Fv.className="Multiply";ne.registerClass(Fv);var Rv=class extends Ao{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return z(1/e.length,t)})}};Rv.className="Average";ne.registerClass(Rv);var Dv=class extends Ao{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zr(t,e[n]);return t})}};Dv.className="Maximum";ne.registerClass(Dv);var Mv=class extends Ao{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ha(t,e[n]);return t})}};Mv.className="Minimum";ne.registerClass(Mv);var Ov=class extends Ao{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let a=e[r].slice();a.splice(this.axis,1);let s=!1;for(let i of n)if(v.arraysEqual(i,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Ow(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(n[r]==null||a[r]==null){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(oe(Hn(e[s]),"bool")):t[s].rank<e[s].rank?r.push(Kt(t[s],-1)):r.push(t[s]);let a=ot(r,this.axis);return Wc(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Ov.className="Concatenate";ne.registerClass(Ov);function ep(e,t){for(;e<0;)e+=t;return e}function qG(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ze("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new ze("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return W(()=>{let i;if(r>a){i=r-a;let l=[];for(let u=0;u<i;++u)l.push(1);t=P(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let u=0;u<i;++u)l.push(1);e=P(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=fe(z(e,t),s[0]):o=fe(z(De(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=Re(e,t,l,u)}if(i>0){let l;r>a?l=r+a-3:l=r-1;let u=[];for(let p=l;p<l+i;++p)u.push(p);o=us(o,u)}return o.shape.length===1&&(o=Kt(o,1)),o})}var Lv=class extends Ao{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((a,s)=>ep(a,e[s].shape.length)):r=[ep(this.axes,t.shape.length),ep(this.axes,n.shape.length)],this.normalize&&(t=nc(t,r[0]),n=nc(n,r[1])),qG(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ep(this.axes,e.length),ep(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Lv.className="Dot";ne.registerClass(Lv);var zv=class extends Pe{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);return $d(()=>Y(xm(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};zv.className="GaussianNoise";ne.registerClass(zv);var Pv=class extends Pe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Te(e);return this.rate>0&&this.rate<1?$d(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return z(n,xm(n.shape,1,r))},()=>n,t.training||!1):n})}};Pv.className="GaussianDropout";ne.registerClass(Pv);var Bv=class extends Pe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Te(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return $d(()=>{let r=Te(e),a=-1.6732632423543772*1.0507009873554805,s=ga(os(n),this.rate);s=ha(s,"float32");let i=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-i*a*this.rate,l=Y(z(r,s),z(Y(s,-1),a));return Y(z(l,i),o)},()=>Te(e),t.training||!1)}return e})}};Bv.className="AlphaDropout";ne.registerClass(Bv);function Ep(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=Cx(e,t,n,r,a,s);else if(e.rank===3)i=_x(e,t,n,r,a,s);else if(e.rank===4)i=Ex(e,t,n,r,a,s);else throw new ze(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function KG(e,t,n,r,a=.001){return W(()=>{let s=wd(e,r),i=s.mean,o=s.variance;return[Ep(e,i,o,n,t,a),i,o]})}function XG(e,t,n,r,a=.001){return W(()=>{let s=wd(e,r),i=s.mean,o=s.variance,l=[];for(let c of Tr(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let u=P(i,l),p=P(o,l),h=t==null?null:P(t,l),d=n==null?null:P(n,l);return[Ep(e,u,p,d,h,a),i,o]})}function ZG(e,t,n,r,a=.001){return v.arraysEqual(r.slice().sort(),Tr(0,e.rank-1))?KG(e,t,n,r,a):XG(e,t,n,r,a)}var Wv=class extends Pe{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.movingMeanInitializer=bt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=bt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Wt(e.betaConstraint),this.gammaConstraint=Wt(e.gammaConstraint),this.betaRegularizer=xt(e.betaRegularizer),this.gammaRegularizer=xt(e.gammaRegularizer)}build(e){e=Ke(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training,r=Te(e),a=r.shape,s=a.length,i=Tr(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Js(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!v.arraysEqual(u,Tr(0,s).slice(0,s-1)),h=()=>{if(p){let g=P(this.movingMean.read(),l),y=P(this.movingVariance.read(),l),b=this.center?P(this.beta.read(),l):null,x=this.scale?P(this.gamma.read(),l):null;return Ep(r,g,y,b,x,this.epsilon)}else return Ep(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return h();let[d,c,m]=ZG(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{W(()=>{let x=1-b,w=g.read(),I=z(he(w,y),x);g.write(he(w,I))})};return f(this.movingMean,c,this.momentum),f(this.movingVariance,m,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),movingMeanInitializer:It(this.movingMeanInitializer),movingVarianceInitializer:It(this.movingVarianceInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer),betaConstraint:Bt(this.betaConstraint),gammaConstraint:Bt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Wv.className="BatchNormalization";ne.registerClass(Wv);var Vv=class extends Pe{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.betaRegularizer=xt(e.betaRegularizer),this.gammaRegularizer=xt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ke(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==za(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(a=>e[a]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Te(e),r=n.shape,a=r.length;return W(()=>{let{mean:s,variance:i}=wd(n,this.axis,!0),o=Js(1,a);for(let c of this.axis)o[c]=r[c];let l=c=>c!=null&&c.shape.length!==a?P(c,o):c,u=this.scale?l(this.gamma.read()):null,p=this.center?l(this.beta.read()):null,h=[],d=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(h.push(r[c]),d.push(1)):(h.push(1),d.push(r[c]));return s=Wn(s,h),i=Wn(i,h),u!=null&&(u=Wn(u,d)),p!=null&&(p=Wn(p,d)),Ep(n,s,i,p,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Vv.className="LayerNormalization";ne.registerClass(Vv);function JG(e,t,n){return W(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Cr()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],$r(e,r)})}var Uv=class extends Pe{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Cr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=Ke(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return W(()=>JG(Te(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Uv.className="ZeroPadding2D";ne.registerClass(Uv);function Pm(e,t,n,r,a,s){return W(()=>{Tt(a),s2(s),or(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=Cr()),s==null&&(s="max"),e=pv(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=Ht(e,t,n,o):i=fa(e,t,n,o),a==="channelsFirst"&&(i=De(i,[0,3,1,2])),i})}function lT(e,t,n,r,a,s){return W(()=>{Tt(a),s2(s),or(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=Cr()),s==null&&(s="max"),e=Z2(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=ew(e,t,n,o):i=Tx(e,t,n,o),a==="channelsFirst"&&(i=De(i,[0,4,1,2,3])),i})}var uT=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Xt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,or(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=Ke(e);let t=Nr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=_d(Te(e),2);let n=this.poolingFunction(Te(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return us(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Gv=class extends uT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),Pm(e,t,n,r,a,"max")}};Gv.className="MaxPooling1D";ne.registerClass(Gv);var Hv=class extends uT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),Pm(e,t,n,r,a,"avg")}};Hv.className="AveragePooling1D";ne.registerClass(Hv);var pT=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),or(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},jv=class extends pT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),Pm(e,t,n,r,a,"max")}};jv.className="MaxPooling2D";ne.registerClass(jv);var qv=class extends pT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),Pm(e,t,n,r,a,"avg")}};qv.className="AveragePooling2D";ne.registerClass(qv);var dT=class extends Pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),or(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),r=Nr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Kv=class extends dT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),lT(e,t,n,r,a,"max")}};Kv.className="MaxPooling3D";ne.registerClass(Kv);var Xv=class extends dT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),or(r),lT(e,t,n,r,a,"avg")}};Xv.className="AveragePooling3D";ne.registerClass(Xv);var hT=class extends Pe{constructor(e){super(e),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ze}},Zv=class extends hT{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Te(e);return vt(n,1)})}};Zv.className="GlobalAveragePooling1D";ne.registerClass(Zv);var Jv=class extends hT{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Te(e);return rr(n,1)})}};Jv.className="GlobalMaxPooling1D";ne.registerClass(Jv);var cT=class extends Pe{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ze}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Yv=class extends cT{call(e,t){return W(()=>{let n=Te(e);return this.dataFormat==="channelsLast"?vt(n,[1,2]):vt(n,[2,3])})}};Yv.className="GlobalAveragePooling2D";ne.registerClass(Yv);var Qv=class extends cT{call(e,t){return W(()=>{let n=Te(e);return this.dataFormat==="channelsLast"?rr(n,[1,2]):rr(n,[2,3])})}};Qv.className="GlobalMaxPooling2D";ne.registerClass(Qv);var mT=class extends Pe{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=Sr(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},e0=class extends mT{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ke(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ke(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return W(()=>(e=Te(e),sT((n,r)=>[Te(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};e0.className="TimeDistributed";ne.registerClass(e0);function YG(e){Eo(YV,"BidirectionalMergeMode",e)}var QG="concat",t0=class extends mT{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Sr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Sr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?QG:e.mergeMode,YG(this.mergeMode),e.weights)throw new ze("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):Nn(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=aT(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let u=n.map(p=>new At({shape:p.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(r!=null)throw new ze("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof _r;for(let l of s)if(l instanceof _r!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=p,h}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ir(a,1));let i;return this.mergeMode==="concat"?i=Ow([r,a]):this.mergeMode==="sum"?i=Y(r,a):this.mergeMode==="ave"?i=z(.5,Y(r,a)):this.mergeMode==="mul"?i=z(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ds(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ds(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Sr(t.layer);if(delete t.layer,t.numConstants!=null)throw new ze("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};t0.className="Bidirectional";ne.registerClass(t0);var n0=class extends Pe{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>(e=Te(e),e.dtype!=="float32"&&(e=ha(e,"float32")),Y(z(e,this.scale),this.offset)))}};n0.className="Rescaling";ne.registerClass(n0);var{resizeBilinear:eH,cropAndResize:tH}=Qn,r0=class extends Pe{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return W(()=>{let l,u=!1,p=t/s,h=n/i,d=(r+t)/s,c=(a+n)/i,m=[p,h,d,c],f=[];e.rank===3?(u=!0,l=Rt([e])):l=e;for(let x=0;x<l.shape[0];x++)f.push(m);let g=cn(f,[f.length,4]),y=Zs(0,f.length,1,"int32"),b=tH(l,g,y,[r,a],"nearest");return ha(u?Te(Nt(b)):b,o)})}upsize(e,t,n,r){return W(()=>{let a=eH(e,[t,n]);return ha(a,r)})}call(e,t){return W(()=>{let n=Te(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return i!==this.width&&(l=Math.floor((i-this.width)/2),l===0&&(l=1)),o>=0&&l>=0?this.centerCrop(n,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ke(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};r0.className="CenterCrop";ne.registerClass(r0);function nH(e,t,n,r){let a=Te(e);if(a.dtype!=="int32"&&(a=ha(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Kt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Kt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(typeof r<"u"&&t==="count"?l=Zh(o,r,n,i):l=Zh(o,[],n,i),t!=="tfIdf")return l;if(r)return z(l,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var a0=class extends Pe{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ke(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return W(()=>{e=Te(e),e.dtype!=="int32"&&(e=ha(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=Te(t.countWeights)}let r=rr(e),a=il(e),s=xn(this.numTokens,r).bufferSync().get(0),i=ga(a,0).bufferSync().get(0);if(!(s&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return nH(e,this.outputMode,this.numTokens,n)})}};a0.className="CategoryEncoding";ne.registerClass(a0);var rH=["bilinear","nearest"],vk=new Set(rH),s0=class extends Pe{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(vk.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ke(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return Qn.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Qn.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vk]} are supported`)})}};s0.className="Resizing";ne.registerClass(s0);var fT=class{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}};fT.className="RandomSeed";var gT=class extends Pe{constructor(e){super(e),this.randomGenerator=new fT(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};gT.className="BaseRandomLayer";var aH=["bilinear","nearest"],kk=new Set(aH),i0=class extends gT{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(kk.has(n))this.interpolation=n;else throw new V(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ke(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return W(()=>{let n=Te(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=os([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Qn.resizeBilinear(e,s);case"nearest":return Qn.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...kk]} are supported`)}})}};i0.className="RandomWidth";ne.registerClass(i0);function sH(e){return new Au(e)}function iH(e){return new ov(e)}function oH(e){return new av(e)}function lH(e){return new sv(e)}function uH(e){return new iv(e)}function pH(e){return new uv(e)}function dH(e){return new lv(e)}function hH(e){return new mv(e)}function cH(e){return new Fm(e)}function mH(e){return new dv(e)}function fH(e){return new Rm(e)}function gH(e){return new hv(e)}function yH(e){return new cv(e)}function bH(e){return new fv(e)}function xH(e){return new gv(e)}function wH(e){return new yv(e)}function vH(e){return new Nv(e)}function kH(e){return new Iv(e)}function IH(e){return new zm(e)}function SH(e){return new kv(e)}function NH(e){return new Sv(e)}function TH(e){return new Tv(e)}function CH(e){return new Cv(e)}function _H(e){return new _v(e)}function EH(e){return new $v(e)}function $H(e){return new Av(e)}function AH(e){return new Rv(e)}function FH(e){return new Ov(e)}function RH(e){return new Dv(e)}function DH(e){return new Mv(e)}function MH(e){return new Fv(e)}function OH(e){return new Lv(e)}function LH(e){return new Wv(e)}function zH(e){return new Vv(e)}function PH(e){return new Uv(e)}function o0(e){return new Hv(e)}function BH(e){return o0(e)}function WH(e){return o0(e)}function l0(e){return new qv(e)}function VH(e){return l0(e)}function UH(e){return l0(e)}function u0(e){return new Xv(e)}function GH(e){return u0(e)}function HH(e){return u0(e)}function jH(e){return new Zv(e)}function qH(e){return new Yv(e)}function yT(e){return new Jv(e)}function bT(e){return new Qv(e)}function xT(e){return new Gv(e)}function wT(e){return new jv(e)}function KH(e){return new Kv(e)}function XH(e){return new xv(e)}function ZH(e){return new Mm(e)}function JH(e){return new wv(e)}function YH(e){return new Dd(e)}function QH(e){return new bv(e)}function ej(e){return new Dm(e)}function tj(e){return new vv(e)}function nj(e){return new Lm(e)}function rj(e){return new xa(e)}function aj(e){return new Om(e)}function sj(e){return new t0(e)}function ij(e){return new e0(e)}var oj=yT,lj=bT,uj=xT,pj=wT;function dj(e){return new zv(e)}function hj(e){return new Pv(e)}function cj(e){return new Bv(e)}function mj(e){return new Ev(e)}function fj(e){return new n0(e)}function gj(e){return new r0(e)}function yj(e){return new s0(e)}function bj(e){return new a0(e)}function xj(e){return new i0(e)}var vT={};_e(vT,{MAPE:()=>$j,MSE:()=>Rj,binaryAccuracy:()=>wj,binaryCrossentropy:()=>vj,categoricalAccuracy:()=>Ij,categoricalCrossentropy:()=>Sj,cosineProximity:()=>Cj,mape:()=>Aj,meanAbsoluteError:()=>_j,meanAbsolutePercentageError:()=>Ej,meanSquaredError:()=>Fj,mse:()=>Dj,precision:()=>Nj,recall:()=>Tj,sparseCategoricalAccuracy:()=>kj});function wj(e,t){return Yw(e,t)}function vj(e,t){return T2(e,t)}function kj(e,t){return C2(e,t)}function Ij(e,t){return Qw(e,t)}function Sj(e,t){return ev(e,t)}function Nj(e,t){return N2(e,t)}function Tj(e,t){return aG(e,t)}function Cj(e,t){return Jw(e,t)}function _j(e,t){return _m(e,t)}function Ej(e,t){return Fu(e,t)}function $j(e,t){return Fu(e,t)}function Aj(e,t){return Fu(e,t)}function Fj(e,t){return $o(e,t)}function Rj(e,t){return $o(e,t)}function Dj(e,t){return $o(e,t)}var kT={};_e(kT,{modelFromJSON:()=>DG});var IT={};_e(IT,{l1:()=>Oj,l1l2:()=>Mj,l2:()=>Lj});function Mj(e){return new Fd(e)}function Oj(e){return WG(e)}function Lj(e){return VG(e)}var ST=class extends ml{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof la))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Ih(e,t){return e<t}function Ik(e,t){return e>t}var NT=class extends ST{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new ze("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Ih:this.mode==="max"?this.monitorFunc=Ik:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Ik:this.monitorFunc=Ih,this.monitorFunc===Ih&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Ih?1/0:-1/0}async onEpochEnd(e,t){await _a(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function zj(e){return new NT(e)}var Pj={earlyStopping:zj},Bj=G();Bj.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Ln;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ln||(Ln={}));var Sk;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Sk||(Sk={}));var p0={};function Wj(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};p0[e]=n}function TT(e){return p0[e]}function Vj(e){delete p0[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,u=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return en(t.inputNames[u],n,r,a);if(s.type==="tensors"){let d=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((c,m)=>{var f;return((f=d[m])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(c=>en(c,n,r,a))}let p=en(t.inputNames[u],n,r,a),h=p.dataSync();return s.type==="number"?h[0]:v.toNestedArray(p.shape,h)}let i=t.attrParams[e];return i&&i.value}function en(e,t,n,r){let[a,s]=Pn(e,n);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[oc(a,o)]);return i!==void 0?t[oc(a,i)][s]:void 0}function Nk(e,t,n){return t[oc(e,n.currentContextId)]}function aa(e,t){let[n,r,a]=Pn(e,t);return[oc(n,t&&t.currentContextId),r,a]}function oc(e,t){return t?`${e}-${t}`:e}function Pn(e,t){if(e==="")return["",0,void 0];let n=t!=null&&t.parseNodeNameCache!=null;if(n){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let r=e.split(":"),a;if(r.length===1)a=[e,0,void 0];else{let s=r[0],i=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);a=[s,o,i]}return n&&t.parseNodeNameCache.set(e,a),a}function Oh(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function sa(e){return e.kept?e:Vr(e)}var CT={};_e(CT,{json:()=>Uj});var Uj=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_T={};_e(_T,{json:()=>Gj});var Gj=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ET={};_e(ET,{json:()=>Hj});var Hj=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],$T={};_e($T,{json:()=>jj});var jj=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AT={};_e(AT,{json:()=>qj});var qj=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],FT={};_e(FT,{json:()=>Kj});var Kj=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RT={};_e(RT,{json:()=>Xj});var Xj=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],DT={};_e(DT,{json:()=>Zj});var Zj=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],MT={};_e(MT,{json:()=>Jj});var Jj=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],OT={};_e(OT,{json:()=>Yj});var Yj=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],LT={};_e(LT,{json:()=>Qj});var Qj=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],zT={};_e(zT,{json:()=>e6});var e6=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],PT={};_e(PT,{json:()=>t6});var t6=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],BT={};_e(BT,{json:()=>n6});var n6=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],WT={};_e(WT,{json:()=>r6});var r6=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],VT={};_e(VT,{json:()=>a6});var a6=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],UT={};_e(UT,{json:()=>s6});var s6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],GT={};_e(GT,{json:()=>i6});var i6=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],HT={};_e(HT,{json:()=>o6});var o6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Tk=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[CT,_T,ET,$T,AT,FT,RT,DT,MT,OT,LT,zT,PT,BT,WT,VT,UT,GT,HT],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?r.push(m[f.name]):f.op==="Const"?a.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],u={},p={};t!=null&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(m=>{let f=i[m];f.inputNames.forEach((g,y)=>{let[b,,x]=aa(g),w=i[b];if(w.outputs!=null){let I=w.outputs.indexOf(x);if(I!==-1){let N=`${b}:${I}`;f.inputNames[y]=N}}f.inputs.push(w),w.children.push(f)})}),Object.keys(p).length===0?h.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(p).forEach(m=>{let[f]=aa(m),g=i[f];g!=null&&(g.signatureKey=p[m],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{let[f]=aa(m),g=i[f];g&&(g.signatureKey=u[m],o.push(g))}):o=r;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=TT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=Ib(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ib(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=$b(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=$b(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Nb(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=Nb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Eb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Eb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Sb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Sb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Fb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Fb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=_b(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=_b(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Ab(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ab(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Tb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Tb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Cb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Cb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Ck(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ck(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((u,p)=>(u[p.name]=this.mapNode(p),p.op==="Const"&&r.push(u[p.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[p]=aa(u.name),h={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:d0(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,s.push(h),a[p]=h}),Object.keys(a).forEach(u=>{let p=a[u];p.inputNames.forEach((h,d)=>{let[c,,m]=aa(h),f=a[c];if(f.outputs!=null){let g=f.outputs.indexOf(m);if(g!==-1){let y=`${c}:${g}`;p.inputNames[d]=y}}p.inputs.push(f),f.children.push(p)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[p,h]=aa(o[u.name]),d=a[p];d!=null&&(d.defaultOutput=h,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function l6(e){let t=G().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function jT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):l6(e);return t?n:n.toLowerCase()}function Ib(e,t,n,r=!1){let a=e[t];return a!=null?jT(a.s,r):n}function Sb(e,t,n){let r=e[t];return r?r.b:n}function Nb(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function d0(e){switch(typeof e=="string"&&(e=Ln[e]),e){case Ln.DT_FLOAT:case Ln.DT_HALF:return"float32";case Ln.DT_INT32:case Ln.DT_INT64:case Ln.DT_INT8:case Ln.DT_UINT8:return"int32";case Ln.DT_BOOL:return"bool";case Ln.DT_DOUBLE:return"float32";case Ln.DT_STRING:return"string";case Ln.DT_COMPLEX64:case Ln.DT_COMPLEX128:return"complex64";default:return null}}function Ck(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Tb(e,t,n){let r=e[t];return r&&r.type?d0(r.type):n}function Cb(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>d0(a)):n}function qT(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function _b(e,t,n){let r=e[t];return r&&r.shape?qT(r.shape):n}function Eb(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function $b(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>jT(s,r)):n}function Ab(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>qT(a)):n}function Fb(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var u6=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return en(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return en(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Nb(this.node.rawAttrs,e,t);if(n.s!=null)return Ib(this.node.rawAttrs,e,t);if(n.b!=null)return Sb(this.node.rawAttrs,e,t);if(n.shape!=null)return _b(this.node.rawAttrs,e,t);if(n.type!=null)return Tb(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Eb(this.node.rawAttrs,e,t);if(n.list.s!=null)return $b(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Ab(this.node.rawAttrs,e,t);if(n.list.b!=null)return Fb(this.node.rawAttrs,e,t);if(n.list.type!=null)return Cb(this.node.rawAttrs,e,t)}return t}},Yt={};_e(Yt,{OP_SCOPE_SUFFIX:()=>dx,abs:()=>$t,acos:()=>yx,acosh:()=>bx,add:()=>Y,addN:()=>uS,all:()=>Wc,any:()=>Ip,argMax:()=>Hs,argMin:()=>xx,asin:()=>wx,asinh:()=>vx,atan:()=>kx,atan2:()=>Ix,atanh:()=>Sx,avgPool:()=>fa,avgPool3d:()=>Tx,basicLSTMCell:()=>cS,batchNorm:()=>No,batchNorm2d:()=>Cx,batchNorm3d:()=>_x,batchNorm4d:()=>Ex,batchToSpaceND:()=>cd,bincount:()=>$x,bitwiseAnd:()=>mS,booleanMaskAsync:()=>rN,broadcastArgs:()=>fS,broadcastTo:()=>Rs,buffer:()=>Me,cast:()=>oe,ceil:()=>Ax,clipByValue:()=>on,clone:()=>Vr,complex:()=>pa,concat:()=>ot,concat1d:()=>Fx,concat2d:()=>Rx,concat3d:()=>Dx,concat4d:()=>Mx,conv1d:()=>Vc,conv2d:()=>mn,conv2dTranspose:()=>Uc,conv3d:()=>Lx,conv3dTranspose:()=>zx,cos:()=>md,cosh:()=>Gc,cosineWindow:()=>hm,cumprod:()=>Tp,cumsum:()=>Hc,denseBincount:()=>Zh,depthToSpace:()=>Px,depthwiseConv2d:()=>To,diag:()=>yS,dilation2d:()=>Bx,div:()=>me,divNoNan:()=>Wx,dot:()=>Vx,dropout:()=>bw,einsum:()=>Cs,elu:()=>Su,enclosingPowerOfTwo:()=>xw,ensureShape:()=>xS,equal:()=>Un,erf:()=>Ux,euclideanNorm:()=>jx,exp:()=>ln,expandDims:()=>Kt,expm1:()=>qx,eye:()=>jc,fft:()=>Sd,fill:()=>Vn,floor:()=>Tu,floorDiv:()=>Bc,fused:()=>hl,gather:()=>Cu,gatherND:()=>oN,greater:()=>xn,greaterEqual:()=>ga,ifft:()=>dl,imag:()=>fd,image:()=>Qn,inTopKAsync:()=>lN,irfft:()=>sm,isFinite:()=>Kx,isInf:()=>Xx,isNaN:()=>Zx,leakyRelu:()=>gd,less:()=>ol,lessEqual:()=>is,linalg:()=>kw,linspace:()=>SS,localResponseNormalization:()=>Jx,log:()=>Gn,log1p:()=>yd,logSigmoid:()=>Yx,logSoftmax:()=>Kc,logSumExp:()=>bd,logicalAnd:()=>mr,logicalNot:()=>xd,logicalOr:()=>Xc,logicalXor:()=>Qx,losses:()=>wN,lowerBound:()=>TS,matMul:()=>Re,max:()=>rr,maxPool:()=>Ht,maxPool3d:()=>ew,maxPoolWithArgmax:()=>CS,maximum:()=>Zr,mean:()=>vt,meshgrid:()=>_S,min:()=>il,minimum:()=>Ha,mirrorPad:()=>tw,mod:()=>nw,moments:()=>wd,movingAverage:()=>aN,mul:()=>z,multiRNNCell:()=>ES,multinomial:()=>$S,neg:()=>mt,norm:()=>Nu,notEqual:()=>Xs,oneHot:()=>ll,ones:()=>Tn,onesLike:()=>Hn,op:()=>L,outerProduct:()=>AS,pad:()=>$r,pad1d:()=>FS,pad2d:()=>RS,pad3d:()=>DS,pad4d:()=>MS,pool:()=>rw,pow:()=>da,prelu:()=>kd,print:()=>gx,prod:()=>aw,raggedGather:()=>OS,raggedRange:()=>LS,raggedTensorToTensor:()=>zS,rand:()=>PS,randomGamma:()=>US,randomNormal:()=>Jc,randomStandardNormal:()=>GS,randomUniform:()=>os,randomUniformInt:()=>HS,range:()=>Zs,real:()=>ul,reciprocal:()=>uw,relu:()=>tt,relu6:()=>Yc,reshape:()=>P,reverse:()=>ir,reverse1d:()=>jS,reverse2d:()=>qS,reverse3d:()=>KS,reverse4d:()=>XS,rfft:()=>Nd,round:()=>Qc,rsqrt:()=>em,scalar:()=>we,scatterND:()=>sN,searchSorted:()=>Zc,selu:()=>tm,separableConv2d:()=>_u,setdiff1dAsync:()=>ZS,sigmoid:()=>cr,sign:()=>pw,signal:()=>xN,sin:()=>nm,sinh:()=>rm,slice:()=>Ue,slice1d:()=>Id,slice2d:()=>am,slice3d:()=>Eu,slice4d:()=>pl,softmax:()=>ls,softplus:()=>Co,spaceToBatchND:()=>vd,sparse:()=>vN,sparseToDense:()=>iN,spectral:()=>bN,split:()=>Cn,sqrt:()=>rn,square:()=>it,squaredDifference:()=>im,squeeze:()=>us,stack:()=>Rt,step:()=>_o,stridedSlice:()=>dw,string:()=>kN,sub:()=>he,sum:()=>fe,tan:()=>hw,tanh:()=>qs,tensor:()=>cn,tensor1d:()=>Qe,tensor2d:()=>Ur,tensor3d:()=>om,tensor4d:()=>ja,tensor5d:()=>JS,tensor6d:()=>YS,tensorScatterUpdate:()=>eN,tile:()=>Wn,topk:()=>mw,transpose:()=>De,truncatedNormal:()=>pm,unique:()=>fw,unsortedSegmentSum:()=>dm,unstack:()=>Nt,upperBound:()=>tN,variable:()=>gw,where:()=>Zt,whereAsync:()=>yw,zeros:()=>kt,zerosLike:()=>Ge});var p6=(e,t,n,r=Yt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},d6=(e,t,n,r=Yt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(en(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(en(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(en(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(en(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function hr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];v.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function _k(e){return!(typeof e=="number"||e.some(t=>t<0))}function tp(e,t,n){let r=Rb(e,n),a=!_k(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Rb(s.shape,r)}),!_k(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Rb(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var h6=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),Lt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),hr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Lt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return cn([],[0].concat(this.elementShape));let n=this.readMany(e);return hr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Rt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return cn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return hr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ot(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Nt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];W(()=>{t=P(t,[1,n,a]);for(let o=0;o<e.length;++o){let l=[0,o===0?0:r[o-1],0],u=[1,e[o],a];s[o]=P(Ue(t,l,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Bm=class Db{get id(){return this.idTensor.id}constructor(t,n,r,a=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t?.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);hr(n,s.shape,"TensorList shape mismatch: "),Lt(s)}),this.idTensor=we(0),this.maxNumElements=a,Lt(this.idTensor)}copy(){return new Db([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);hr(t,this.elementShape,"TensorList shape mismatch: ");let a=tp(this.elementShape,this.tensors,t);return W(()=>{let s=this.tensors.map(i=>P(i,a));return Rt(s,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=tp(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,hr(a.shape,t,"TensorList shape mismatch: "),P(a,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(hr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Lt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new Db([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)n.tensors[r]=this.tensors[r];return n}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);hr(this.tensors[t].shape,n,"TensorList shape mismatch: ");let a=tp(this.elementShape,this.tensors,n);return P(this.tensors[t],a)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);hr(this.elementShape,n.shape,"TensorList shape mismatch: "),Lt(n),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);hr(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());let a=tp(this.elementShape,this.tensors,r);return t.length===0?cn([],[0].concat(a)):W(()=>{let s=t.map(i=>P(this.tensors[i],a));return Rt(s,0)})}concat(t,n){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);hr(this.elementShape,n,"TensorList shape mismatch: ");let r=tp(this.elementShape,this.tensors,n);return this.size()===0?cn([],[0].concat(r)):W(()=>{let a=this.tensors.map(s=>P(s,r));return ot(a,0)})}};function c6(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);hr(a,t,"TensorList shape mismatch: ");let s=Nt(e);return new Bm(s,t,r)}function m6(e,t,n,r){return new Bm([],e,t,r)}function f6(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new Bm([],n,e.dtype,r),i=Nt(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function g6(e,t,n){let r=0,a=t.map(p=>(r+=p,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Rb(s,n),o=r===0?0:e.size/r,l=W(()=>{let p=[];e=P(e,[1,r,o]);for(let h=0;h<t.length;++h){let d=[0,h===0?0:a[h-1],0],c=[1,t[h],o];p[h]=P(Ue(e,d,c),i)}return e.dispose(),p}),u=new Bm([],n,e.dtype,t.length);for(let p=0;p<l.length;p++)u.setItem(p,l[p]);return u}var y6=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(p=>p.id),l=await i[0].data();i.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&p.dispose()});let u=s;for(;l[0];){let p=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let h=u.map(c=>c.id);p.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let d=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return u}case"LoopCond":{let r=k("pred",e,t,n);return[sa(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=sa(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>en(a,t,n)!==void 0);if(r){let a=en(r,t,n);return[sa(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[sa(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[sa(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[sa(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),u=k("name",e,t,n),p=new h6(u,a,r,s,l,i,o);return n.addTensorArray(p),[p.idTensor,we(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[we(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=f6(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,l=m6(r,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=c6(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=g6(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[we(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ek(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",l=r==="fusedbatchnorm",u=k("numArgs",e,t,n);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=k("strides",e,t,n),h=Oh(e,t,n),d=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[m,f]=k("args",e,t,n);i&&(f=m,m=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}var b6=(e,t,n,r=Yt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=Oh(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=Ek(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=Ek(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=Oh(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=Oh(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},x6=(e,t,n,r=Yt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Wy(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var w6=async(e,t,n,r,a=Yt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:p}=Wy(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,u,p);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Wy(e,t,n),p=k("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,l,u,p);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Wy(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,i,o,l,u)]}case"Where":{let s=a.cast(k("condition",e,t,n),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},v6=(e,t,n,r=Yt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},k6=(e,t,n,r=Yt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[en(e.name,t,n)||a];case"Placeholder":return[en(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=k("x",e,t,n);return[sa(p)]}case"IdentityN":return k("x",e,t,n).map(p=>sa(p));case"Snapshot":let s=k("x",e,t,n);return[sa(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(p=>r.tensor1d(p.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),u=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let p=0;p<o.length;p++)console.log(Array.prototype.slice.call(o[p].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},I6=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,Lt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),W(()=>{let r=Nt(t),a=n.length,s=r.length;v.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],l=r[i];Lt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return W(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Rt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},S6=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new I6(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},N6=(e,t,n,r=Yt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),u=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),u=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},T6=(e,t,n,r=Yt)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},C6=(e,t,n,r=Yt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,n),u=k("leakyreluAlpha",e,t,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_6=(e,t,n,r=Yt)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},E6=(e,t,n,r=Yt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},$6=(e,t,n,r=Yt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,u)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),u=k("size",e,t,n),p=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,u,p)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},A6=(e,t,n,r=Yt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),u=k("ellipsisMask",e,t,n),p=k("newAxisMask",e,t,n),h=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,p,h)]}case"Pack":return W(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(u=>{let p=v.arraysEqual(u.shape,i);if(!p&&!v.arraysEqual(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return p?u:r.reshape(u,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},F6=(e,t,n,r=Yt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},R6=(e,t,n,r=Yt)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},D6=(e,t,n,r=Yt)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},M6=(e,t,n,r=Yt)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function $k(e,t,n,r,a=W){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>p6(i,o,l));case"basic_math":return a(()=>d6(i,o,l));case"control":return y6(i,o,l);case"convolution":return a(()=>b6(i,o,l));case"creation":return a(()=>x6(i,o,l));case"dynamic":return w6(i,o,l);case"evaluation":return a(()=>v6(i,o,l));case"image":return a(()=>N6(i,o,l));case"graph":return a(()=>k6(i,o,l));case"logical":return a(()=>T6(i,o,l));case"matrices":return a(()=>C6(i,o,l));case"normalization":return a(()=>_6(i,o,l));case"ragged":return a(()=>E6(i,o,l));case"reduction":return a(()=>$6(i,o,l));case"slice_join":return a(()=>A6(i,o,l));case"sparse":return a(()=>F6(i,o,l));case"spectral":return a(()=>R6(i,o,l));case"string":return a(()=>D6(i,o,l));case"transformation":return a(()=>M6(i,o,l));case"hash_table":return S6(i,o,l,r);case"custom":let u=TT(i.op);if(u&&u.customExecutor)return u.customExecutor(new u6(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var Ak=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Fk(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(d=>Pn(d)[0]));r=r||[];let p=new Set(r.map(d=>Pn(d.name)[0])),h=[...t];for(;h.length>0;){let d=h.pop();if((Es(d)||U6(d)||G6(d))&&i==null&&(i=d,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(d.name),n[d.name]==null&&!u.has(d.name)&&!p.has(d.name)){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function O6(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(g=>Pn(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),p=new Map(u.map(g=>[g.name,g])),h={};for(let g of u){h[g.name]=h[g.name]||0;for(let y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}let d=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),c=[...d];for(;d.length>0;){let g=d.pop(),y=p.get(g);for(let b of y.children.filter(i))--h[b.name]===0&&(c.push(b.name),d.push(b.name))}let m=c.map(g=>p.get(g)),f=L6(m,l);return z6(f,l),f}function L6(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}var Sh=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function z6(e,t){let n=new Map(e.map((o,l)=>[o.name,l])),r=new Set(t.map(o=>o.name)),a=o=>r.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let l of o.children.filter(i)){if(!n.has(l.name))throw new Sh(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new Sh(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(let l of o.inputs){if(!n.has(l.name))throw new Sh(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new Sh(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function P6(e){let t=new Map(e.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,l)=>Es(o)?n:l),a=o=>{let l=r[t.get(o.name)];return l??-1},s=e.map((o,l)=>o.children.map(a).reduce((u,p)=>Math.max(u,p),r[l])),i=new Map;for(let o=0;o<e.length;++o){let l=s[o];if(l===n)continue;let u=e[o],p=e[l];i.has(p.name)||i.set(p.name,[]),i.get(p.name).push(u)}return i}var B6=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),W6=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),V6=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Es(e){return B6.has(e.op)}function U6(e){return W6.has(e.op)}function G6(e){return V6.has(e.op)}var Rk=class KT{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let n=Object.keys(t).map(r=>t[r].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new KT(t.functions[r],this)})}getCompilationKey(t,n){let r=t.map(s=>s.name).sort(),a=n.map(s=>s.name).sort();return r.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,n){let r=Fk(t,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:s,syncInputs:i}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let u=n.map(h=>h.name),p=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${p}]. Missing the following inputs: [${a}]`)}let o=O6(this.graph,r),l=P6(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let n=t.clone();return Lt(n),n}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(t,n){this.disposeIntermediateTensors(),t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);let a=r.map(d=>this.graph.nodes[Pn(d)[0]]),s=n.map(d=>Pn(d)[0]),i=new Set(s),o=s.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);let l=this.getCompilationKey(a,o),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let p={},h={};return W(()=>{let d=new Ak(this.weightMap,p,h,this.functionExecutorMap,this.parseNodeNameCache),c=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,x]=Pn(y,d),w=[];w[x]=t[y],c[b]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(w))});let m=this.getFrozenTensorIds(c),{orderedNodes:f,nodeLiveUntilMap:g}=u;for(let y of f){if(c[y.name])continue;let b=$k(y,c,d,this._resourceManager);if(v.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);c[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,c,d,m,i,g.get(y.name))}return this.parent==null&&d.dispose(m),n.map(y=>en(y,c,d))})}getFrozenTensorIds(t){let n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(t,n,r,a,s,i,o){if(!(Es(n)||i.has(t))){for(let l of r[t])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(let l of n.inputs){if(Es(l))continue;let u=Nk(l.name,r,a);if(u!=null)for(let p of u){if(!p||p.kept||s.has(p.id))continue;let h=o[p.id];h===1?(p.dispose(),delete o[p.id]):h!=null&&o[p.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,n,r,a,s,i){function o(l){return Es(l)||s.has(l.name)}if(!(Es(t)||i==null))for(let l of i){if(o(l))continue;let u=Nk(l.name,n,r);for(let p of u)!p||p.kept||a.has(p.id)||p.dispose()}}async executeAsync(t,n){return this._executeAsync(t,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let n of t)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,n,r=!1,a={},s={}){this.disposeIntermediateTensors(),r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let i=new Ak(this.weightMap,a,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let o=await this.executeWithControlFlow(t,i,n,r),l=n.map(d=>en(d,o,i)),u=l.map(d=>d.id),p=Object.keys(t).map(d=>t[d].id),h=new Set([...u,...p,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(c=>{c&&!c.isDisposed&&!h.has(c.id)&&c.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(t,n,r){let a=t.reduce((s,i,o)=>(s[this.inputs[o].name]=i,s),{});return this._executeAsync(a,this.outputNodes,!0,n,r)}async executeWithControlFlow(t,n,r,a){let s=Object.keys(t),i=s.map(w=>this.graph.nodes[Pn(w)[0]]),o=r.map(w=>Pn(w)[0]),l=new Set(o),u=o.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);let{usedNodes:p,missingInputs:h,dynamicNode:d,syncInputs:c}=Fk(t,u,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:n.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{let[I,N]=Pn(w),C=[];C[N]=t[w],f[I]=C});let g={},y=this.getFrozenTensorIds(f),b={};for(;m.length>0;){let w=this.processStack(i,m,n,f,b,y,l,g,p);await Promise.all(w)}d==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(w=>!Es(w)&&!en(w.name,f,n)).map(w=>w.name);if(x.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${h}]. ${w}`)}return f}processStack(t,n,r,a,s,i,o,l,u){let p=[];for(;n.length>0;){let h=n.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&k("isConstant",h.node,a,r)&&([d]=aa(h.node.name,r)),a[h.node.name]==null){let c=$k(h.node,a,r,this._resourceManager);d||([d]=aa(h.node.name,r));let m=r.currentContext;v.isPromise(c)?p.push(c.then(f=>(a[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),r.currentContext=m,this.checkTensorForDisposal(d,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u),f))):(a[d]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(c)),this.checkTensorForDisposal(d,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u))}else this.processChildNodes(h.node,n,r,a,s,u)}return p}processChildNodes(t,n,r,a,s,i){t.children.forEach(o=>{let[l]=aa(o.name,r);s[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!en(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!en(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{let r=t[n],[a]=Pn(n),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,o=i.length===r.shape.length&&r.shape.every((l,u)=>i[u]===-1||i[u]===l);v.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&v.assert(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){var n,r;let a={};for(let s in t){let i=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[s];i!=null?a[i.name]=t[s]:a[s]=t[s]}return a}checkInputs(t){let n=Object.keys(t).filter(r=>{let[a]=Pn(r);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>{var r,a;let s=(a=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||a===void 0?void 0:a[n];return s!=null?s.name:n},{})}checkOutputs(t){t.forEach(n=>{let[r]=Pn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}},H6=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},j6="?tfjs-format=file",q6="model.json",h0=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=nn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new H6}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=await QI(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Rk(Tk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Tk.Instance.transformGraph(e.modelInitializer);this.initializer=new Rk(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Le?[e]:e,n={};return t.forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Le)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,l;let u=(l=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||l===void 0?void 0:l.resourceId;return u!=null?a[s]=this.resourceIdToCapturedInput[u]:a[s]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ce(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function K6(e,t={},n=nn){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=Z6(e));let r=new h0(e,t,n);return await r.load(),r}function X6(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=nn.getWeightSpecs(r.weightsManifest),i=nn.getModelArtifactsForJSONSync(r,s,a);t=nn.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=nn.fromMemorySync(e);else throw new Error("Unknown model format");let n=new h0(t);return n.load(),n}function Z6(e){return e.endsWith("/")||(e=e+"/"),`${e}${q6}${j6}`}var J6="4.16.0",XT={};_e(XT,{CSVDataset:()=>iC,Dataset:()=>Ru,FileDataSource:()=>cC,TextLineDataset:()=>sC,URLDataSource:()=>mC,array:()=>wq,csv:()=>Rq,func:()=>Dq,generator:()=>Mq,microphone:()=>Lq,version_data:()=>zq,webcam:()=>Oq,zip:()=>vq});var Y6=es(wc()),Q6=es(wc());function eq(e,t){return lc(e,t)}function lc(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(fl(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=lc(o,t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function tq(e,t=JT){return ZT(e,t)}function ZT(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(fl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(u=>u[i]),l=ZT(o,t,n);s[i]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function JT(e){return e===null?null:fl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function YT(e,t){let n=new Map;lc(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let s=await a;n.set(r,s)}}return lc(e,t,n)}function fl(e){let t=!1;if(G().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=wI();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Le)&&!(e instanceof Promise)&&!t)}function nq(e){return e==null||rq(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Le||v.isTypedArray(e)}function rq(e){return e===null||typeof e!="object"&&typeof e!="function"}function aq(e){return eq(e,sq)}function sq(e){return e instanceof Le?{value:e.clone(),recurse:!1}:fl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var QT=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},eC=class tC extends QT{constructor(){super(tC.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,n=new Array(t),r=this.length();for(let a=0;a<r;a++)n[a]=this.get(this.wrap(this.begin+a));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}};eC.INITIAL_CAPACITY=32;function nC(e){return new lq(e)}function c0(e){return new uq(e)}function iq(e,t){return new rC(e,t)}function oq(e,t=Ma.FAIL){return new bq(e,t)}var Jt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new gq(this,e)}filter(e){return new mq(this,e)}map(e){return new fq(this,e)}mapAsync(e){return new Dk(this,e)}serialMapAsync(e){return new Dk(this,e).serial()}flatmap(e){return new yq(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new cq(this,e,t)}columnMajorBatch(e,t=!0,n=JT){return this.rowMajorBatch(e,t).map(r=>tq(r,n))}concatenate(e,t){return new rC(nC([this,e]),t)}take(e){return e<0||e==null?this:new hq(this,e)}skip(e){return e<0||e==null?this:new dq(this,e)}prefetch(e){return new aC(this,e)}shuffle(e,t){return new xq(this,e,t)}serial(){return new pq(this)}},lq=class extends Jt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:aq(e),done:!1}}},uq=class extends Jt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},pq=class extends Jt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},dq=class extends Jt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ce(e.value)}return this.upstream.next()}},hq=class extends Jt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},cq=class extends Jt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},mq=class extends Jt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ce(e.value)}}},fq=class extends Jt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ir.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ir.getTensorsInContainer(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},gq=class extends Jt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Dk=class extends Jt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ir.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Ir.getTensorsInContainer(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},m0=class extends Jt{constructor(){super(),this.outputQueue=new eC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},yq=class extends m0{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ir.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ir.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return!0}},rC=class extends Jt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Ma;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Ma||(Ma={}));var bq=class extends Jt{constructor(e,t=Ma.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(s){return s instanceof Jt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await YT(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Ma.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ma.SHORTEST:return{value:null,done:!0};case Ma.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},aC=class extends Jt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new QT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},xq=class extends aC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Q6.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Ru=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),zn(async()=>(await n.iterator()).columnMajorBatch(e,t,kq),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,zn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,zn(async()=>(await t.iterator()).filter(r=>W(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return zn(async()=>(await t.iterator()).map(n=>W(()=>e(n))),this.size)}mapAsync(e){let t=this;return zn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return zn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,zn(async()=>{let r=c0(async()=>({value:await t.iterator(),done:!1}));return iq(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,zn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=Y6.alea(t||v.now().toString());return zn(async()=>{let s=a.int32();return n&&(s+=a.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,zn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ru.MAX_BUFFER_SIZE=1e4;function zn(e,t=null){return new class extends Ru{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function wq(e){return zn(async()=>nC(e),e.length)}function vq(e){if(!fl(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return zn(async()=>{let n=await YT(e,r=>{if(r instanceof Ru)return{value:r.iterator(),recurse:!1};if(fl(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return oq(n,Ma.SHORTEST)},t)}function kq(e){if(e===null)return null;let t=e[0];return nq(t)?{value:Iq(e),recurse:!1}:{value:null,recurse:!0}}function Iq(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Le?Rt(e):cn(e)}var sC=class extends Ru{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Nh='"',np=Symbol("out"),Mk=Symbol("field"),Th=Symbol("quote"),Vy=Symbol("quoteafterquote"),Ok=Symbol("quoteinquote"),iC=class extends Ru{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new sC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?r[s]=l:n[s]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=np;for(let i=0;i<a;i++)switch(s){case np:switch(e.charAt(i)){case Nh:r=i+1,s=Th;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=np;break;default:s=Mk,r=i;break}break;case Mk:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=np,r=i+1;break;default:}break;case Th:switch(e.charAt(i)){case Nh:s=Vy;break;default:}break;case Vy:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=np,r=i+1;break;case Nh:s=Th;break;default:s=Ok;break}break;case Ok:switch(e.charAt(i)){case Nh:s=Th;break;default:}break;default:}if(s===Vy?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},Sq=class oC extends Jt{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!G().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new oC(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n,r=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],n=[],r=0;return new Promise(a=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(s),a({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((a,s)=>r.set(a,s*n)),r}getTensorFromAudioDataArray(t,n){let r=new Float32Array(v.sizeFromShape(n));return r.set(t,r.length-t.length),cn(r,n)}},Nq=class lC extends Jt{constructor(t,n){if(super(),this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qe([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-r)/2,i=(1-a)/2,o=s+r,l=a+i;this.cropBox=Ur([i,s,l,o],[1,4])}else this.cropBox=Ur([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(!G().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new lC(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=Td.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return W(()=>{let n=Kt(oe(t,"float32"),0),r;r=Qn.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=r.shape;return P(r,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},uC=class{},pC=class extends Jt{split(e){return new Tq(this,e)}},Tq=class extends pC{constructor(e,t){super(),this.upstream=e,this.impl=new Cq(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Cq=class extends m0{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},_q=class extends Jt{decodeUTF8(){return new Eq(this)}},Eq=class extends pC{constructor(e){super(),this.upstream=e,this.impl=new $q(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},$q=class extends m0{constructor(e){if(super(),this.upstream=e,G().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=wI();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return G().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},dC=class extends _q{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(G().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function Aq(e,t={},n){let r,a;typeof e=="string"?r=e:(r=e.url,a=Fq(e));let s=await(n||v.fetch)(r,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new dC(i,t)}else throw new Error(s.statusText)}var Fq=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function hC(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var cC=class extends uC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(hC(this.input)&&G().get("IS_NODE")){let e=rx();this.input=e.readFileSync(this.input.slice(7))}return new dC(this.input,this.options)}},mC=class extends uC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return hC(this.url)?new cC(this.url,this.fileOptions).iterator():Aq(this.url,this.fileOptions)}};function Rq(e,t={}){return new iC(new mC(e),t)}function Dq(e){let t=c0(e);return zn(async()=>t)}function Mq(e){return zn(async()=>{let t=await e();return c0(()=>t.next())})}async function Oq(e,t){return Nq.create(e,t)}async function Lq(e){return Sq.create(e)}var zq="4.16.0";function ge(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Pq=Jr.whereImpl,f0=class fC extends zp{nextDataId(){return fC.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new vc(this,dr())}write(t,n,r){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:r,refCount:1}),a}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&v.isString(r[0])){let s=r.map(i=>v.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return{dataId:a,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){let n=this.data.get(t);n.refCount--}}move(t,n,r,a,s){this.data.set(t,{values:n,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){let a=this.readSync(r.real.dataId),s=this.readSync(r.imag.dataId);return T.mergeRealAndImagArrays(a,s)}return v.convertBackendValuesAndArrayBuffer(this.data.get(t).values,n)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>v.decodeString(a));return Me(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(t.shape,t.dtype,n)}makeOutput(t,n,r){return dr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let n=v.now();return t(),{kernelMs:v.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ge([t],"where");let n=this.readSync(t.dataId);return Pq(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};f0.nextDataId=0;var g0={};_e(g0,{addImpl:()=>bC,bincountImpl:()=>b0,bincountReduceImpl:()=>xC,bitwiseAndImpl:()=>wC,castImpl:()=>yC,ceilImpl:()=>vC,concatImpl:()=>x0,equalImpl:()=>kC,expImpl:()=>SC,expm1Impl:()=>TC,floorDivImpl:()=>_C,floorImpl:()=>CC,gatherNdImpl:()=>EC,gatherV2Impl:()=>$C,greaterEqualImpl:()=>FC,greaterImpl:()=>AC,lessEqualImpl:()=>DC,lessImpl:()=>RC,linSpaceImpl:()=>MC,logImpl:()=>OC,maxImpl:()=>LC,maximumImpl:()=>zC,minimumImpl:()=>PC,multiplyImpl:()=>w0,negImpl:()=>BC,notEqualImpl:()=>WC,prodImpl:()=>VC,raggedGatherImpl:()=>UC,raggedRangeImpl:()=>GC,raggedTensorToTensorImpl:()=>HC,rangeImpl:()=>k0,rsqrtImpl:()=>jC,scatterImpl:()=>Fs,sigmoidImpl:()=>z5,simpleAbsImpl:()=>gC,sliceImpl:()=>pc,sparseFillEmptyRowsImpl:()=>KC,sparseReshapeImpl:()=>XC,sparseSegmentReductionImpl:()=>I0,sqrtImpl:()=>W5,squaredDifferenceImpl:()=>ZC,staticRegexReplaceImpl:()=>JC,stridedSliceImpl:()=>YC,stringNGramsImpl:()=>S0,stringSplitImpl:()=>N0,stringToHashBucketFastImpl:()=>T0,subImpl:()=>QC,tileImpl:()=>e_,topKImpl:()=>n_,transposeImpl:()=>v0,uniqueImpl:()=>_0});function gC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var Bq=e=>{let{x:t}=e.inputs,n=e.backend;ge(t,"abs");let r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=gC(a),n.makeOutput(r,t.shape,t.dtype)},Wq={kernelName:vl,backendName:"cpu",kernelFunc:Bq};function Ct(e){return(t,n,r,a,s)=>{let i=T.assertAndGetBroadcastShape(t,n),o=i.length,l=v.computeStrides(i),u=v.sizeFromShape(i),p=v.getTypedArrayFromDType(s,u),h=t.length,d=n.length,c=v.computeStrides(t),m=v.computeStrides(n),f=T.getBroadcastDims(t,i),g=T.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<p.length;++y){let b=v.indexToLoc(y,o,l),x=b.slice(-h);f.forEach(C=>x[C]=0);let w=v.locToIndex(x,h,c),I=b.slice(-d);g.forEach(C=>I[C]=0);let N=v.locToIndex(I,d,m);p[y]=e(r[w],a[N])}return[p,i]}}function Bn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var Vq={kernelName:Sc,backendName:"cpu",kernelFunc:Bn};function uc(e,t,n="float32"){if(n==="complex64"){let a=uc(e,t,"float32"),s=uc(e,t,"float32");return Bn({inputs:{real:a,imag:s},backend:e})}let r=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Kr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var Uq={kernelName:Mi,backendName:"cpu",kernelFunc:Kr};function Ys(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var Gq={kernelName:Oc,backendName:"cpu",kernelFunc:Ys};function yC(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=v.toTypedArray([0],n),[s,i]=Ct((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Ja(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Kr({inputs:{x:a},backend:n});let p=uc(n,a.shape,a.dtype),h=Ja({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),d=Bn({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),d}if(a.dtype==="complex64"){let p=Ys({inputs:{input:a},backend:n}),h=Ja({inputs:{x:p},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(p),h}if(!v.hasEncodingLoss(a.dtype,s)){let p=Kr({inputs:{x:a},backend:n});return{dataId:p.dataId,shape:p.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=yC(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var Hq={kernelName:gi,backendName:"cpu",kernelFunc:Ja};function Vt(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;ge([i,o],e);let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(u):u,d=i.dtype==="string"?T.fromUint8ToStringArray(p):p,c=r||i.dtype,[m,f]=t(i.shape,o.shape,h,d,c);return l.makeTensorInfo(f,c,m)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=Ja({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(u.dataId),h=p.complexTensorInfos.real,d=p.complexTensorInfos.imag,c=l.data.get(h.dataId).values,m=l.data.get(d.dataId).values,f=Ja({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,w=l.data.get(b.dataId).values,[I,N,C]=n(i.shape,o.shape,c,m,x,w),E=l.makeTensorInfo(C,"float32",I),A=l.makeTensorInfo(C,"float32",N),R=Bn({inputs:{real:E,imag:A},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(A),R}else{let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h=r||i.dtype,[d,c]=t(i.shape,o.shape,u,p,h);return l.makeTensorInfo(c,h,d)}}}function y0(e){return(t,n,r,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(o),u=o.length,p=v.computeStrides(o),h=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),m=T.getBroadcastDims(n,o),f=T.mergeRealAndImagArrays(r,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,b=v.computeStrides(t),x=n.length,w=v.computeStrides(n);if(c.length+m.length===0)for(let I=0;I<h.length;I++){let N=I%f.length,C=I%g.length,E=e(f[N*2],f[N*2+1],g[C*2],g[C*2+1]);h[I]=E.real,d[I]=E.imag}else for(let I=0;I<h.length;I++){let N=v.indexToLoc(I,u,p),C=N.slice(-y);c.forEach(S=>C[S]=0);let E=v.locToIndex(C,y,b),A=N.slice(-x);m.forEach(S=>A[S]=0);let R=v.locToIndex(A,x,w),F=e(f[E*2],f[E*2+1],g[R*2],g[R*2+1]);h[I]=F.real,d[I]=F.imag}return[h,d,o]}}var bC=Ct((e,t)=>e+t),jq=y0((e,t,n,r)=>({real:e+n,imag:t+r})),gl=Vt(ts,bC,jq),qq={kernelName:ts,backendName:"cpu",kernelFunc:gl};function b0(e,t,n,r,a){let s=v.sizeFromShape(r),i=v.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function xC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Me([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}var wC=Ct((e,t)=>e&t),Kq=Vt(El,wC),Xq={kernelName:El,backendName:"cpu",kernelFunc:Kq};function Yr(e){return(t,n,r)=>{let a=v.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function rt(e,t,n){let r=Yr(t);return ps(e,r,n)}function ps(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ge(i,e);let o=s,l=o.data.get(i.dataId).values,u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=T.fromUint8ToStringArray(l)}else u=l;let p=n||i.dtype,h=t(u,p,a);return o.makeTensorInfo(i.shape,p,h)}}var vC=Yr(e=>Math.ceil(e)),Zq=ps(yi,vC),Jq={kernelName:yi,backendName:"cpu",kernelFunc:Zq};function x0(e,t,n,r){let a=v.getArrayFromDType(n,v.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let p=u*t[1]+s;for(let h=0;h<i.shape[1];++h)a[p+h]=o[l++]}s+=i.shape[1]})}return a}var kC=Ct((e,t)=>e===t?1:0),IC=Vt(Ll,kC,null,"bool"),Yq={kernelName:Ll,backendName:"cpu",kernelFunc:IC},SC=Yr(e=>Math.exp(e)),NC=ps(Ei,SC,"float32"),Qq={kernelName:Ei,backendName:"cpu",kernelFunc:NC},TC=Yr(e=>Math.expm1(e)),e5=ps($i,TC),t5={kernelName:$i,backendName:"cpu",kernelFunc:e5},CC=Yr(e=>Math.floor(e)),n5=ps(Ai,CC),r5={kernelName:Ai,backendName:"cpu",kernelFunc:n5},_C=Ct((e,t)=>Math.floor(e/t)),a5=Vt(Fi,_C,null,"int32"),s5={kernelName:Fi,backendName:"cpu",kernelFunc:a5};function EC(e,t,n,r,a,s,i,o,l){let u=Me([r,s],n);for(let p=0;p<r;p++){let h=[],d=0;for(let c=0;c<a;c++){let m=e[p*a+c];d+=m*i[c],h.push(m)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)u.values[p*s+c]=t.get(...t.indexToLoc(d*s+c))}return u}function $C(e,t,n){let r=Me(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[a]=e.values[u])}return r}var AC=Ct((e,t)=>e>t?1:0),i5=Vt(Vl,AC,null,"bool"),o5={kernelName:Vl,backendName:"cpu",kernelFunc:i5},FC=Ct((e,t)=>e>=t?1:0),l5=Vt(Di,FC,null,"bool"),u5={kernelName:Di,backendName:"cpu",kernelFunc:l5},RC=Ct((e,t)=>e<t?1:0),p5=Vt(Ul,RC,null,"bool"),d5={kernelName:Ul,backendName:"cpu",kernelFunc:p5},DC=Ct((e,t)=>e<=t?1:0),h5=Vt(Gl,DC,null,"bool"),c5={kernelName:Gl,backendName:"cpu",kernelFunc:h5};function MC(e,t,n){let r=(t-e)/(n-1),a=v.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var OC=Yr(e=>Math.log(e)),m5=ps(Bi,OC),f5={kernelName:Bi,backendName:"cpu",kernelFunc:m5};function LC(e,t,n,r){let a=v.getTypedArrayFromDType(r,v.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[s]=o}return a}var zC=Ct((e,t)=>Math.max(e,t)),g5=Vt(Gi,zC),y5={kernelName:Gi,backendName:"cpu",kernelFunc:g5},PC=Ct((e,t)=>Math.min(e,t)),b5=Vt(Ki,PC),x5={kernelName:Ki,backendName:"cpu",kernelFunc:b5},w0=Ct((e,t)=>e*t),w5=y0((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),Wm=Vt(Ji,w0,w5),v5={kernelName:Ji,backendName:"cpu",kernelFunc:Wm};function BC(e,t,n){let r=v.createScalarValue(-1,n);return w0([],t,r,e,n)}function k5(e){let{inputs:t,backend:n}=e,{x:r}=t;ge(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=BC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var I5={kernelName:Yl,backendName:"cpu",kernelFunc:k5},WC=Ct((e,t)=>e!==t?1:0),S5=Vt(Ql,WC,null,"bool"),N5={kernelName:Ql,backendName:"cpu",kernelFunc:S5};function v0(e,t,n,r,a){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),l=v.computeStrides(a),u=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let p=0;p<i;++p){let h=v.indexToLoc(p,s,o),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[r[m]];let c=v.locToIndex(d,s,l);u[c]=e[p]}return u}function An(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ge(a,"transpose");let i=a.shape.length,o=new Array(i);for(let p=0;p<o.length;p++)o[p]=a.shape[s[p]];let l=r.data.get(a.dataId).values,u=v0(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var T5={kernelName:oa,backendName:"cpu",kernelFunc:An};function VC(e,t,n,r){let[a,s]=T.computeOutAndReduceShapes(e,r),i=ar(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(a),i),l=v.sizeFromShape(s);for(let u=0;u<o.length;++u){let p=u*l,h=1;for(let d=0;d<l;++d)h*=n[p+d];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function C5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"prod");let o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=T.getAxesPermutation(l,o),p=l,h=a,d=[];u!=null&&(h=An({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(h),p=T.getInnerMostAxes(p.length,o));let c=n.data.get(h.dataId).values,{outVals:m,outShape:f,outDtype:g}=VC(h.shape,h.dtype,c,p),y=f;return i&&(y=T.expandShapeToKeepDim(f,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var _5={kernelName:no,backendName:"cpu",kernelFunc:C5};function E5(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=v.indexToLoc(a,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function $5(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function A5(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);$5(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let p=t[u+1];for(let h=1;h<l+1;++h)o[u].push(h*p)}for(let u=0;u<e.length;++u){let p=e[u],h=e[u]+1;for(let d=0;d<n.length;++d){let c=n[d],m=d+t.length-1;if(m>=0){let f=o[m],g=f[f.length-1]-c[p];for(let y=p;y<h;++y)o[m].push(c[y+1]+g)}p=c[p],h=c[h]}h!==p&&(a.push([p,h]),s+=h-p)}return{outSplits:o,valueSlices:a,numValues:s}}function F5(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=v.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function Lk(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function R5(e,t,n,r,a,s){let i=Lk(t,2)[1],o=Lk(s,2)[1],l=0;for(let u of n)for(let p=u[0];p<u[1];++p){for(let h=0;h<r;++h)a[l*o+h]=e[p*i+h];++l}}function D5(e,t,n,r,a){let s=t.slice();s[0]=a;let i=v.getArrayFromDType(n,v.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return R5(e,t,r,l,i,s),[i,s]}function UC(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(E5(s,i,l),r.length===0)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:p,valueSlices:h,numValues:d}=A5(s,i,e,u),c=F5(p),m=D5(n,r,a,h,d);return[c,m[0],m[1]]}var zk=2147483647;function GC(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=a.length===0,u=i.length===0,p=[];o||p.push(t[0]),l||p.push(a[0]),u||p.push(i[0]);for(let g=1;g<p.length;++g)if(p[g]!==p[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=p.length===0?1:p[0],d=v.getArrayFromDType("int32",h+1);d[0]=0;for(let g=0;g<h;++g){let y=o?e[0]:e[g],b=l?r[0]:r[g],x=u?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<y||x<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/x)),w>zk)throw new Error(`Requires ((limit - start) / delta) <= ${zk}`);d[g+1]=d[g]+w}let c=d[h],m=v.getArrayFromDType(n,c),f=0;for(let g=0;g<h;++g){let y=d[g+1]-d[g],b=o?e[0]:e[g],x=u?s[0]:s[g];for(let w=0;w<y;++w)m[f++]=b,b+=x}return[d,m]}var pr=T.RowPartitionType,M5=class Mb{constructor(t,n,r,a,s,i,o,l,u,p){this.shape=t,this.shapeShape=n,this.values=r,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=T.getRowPartitionTypesHelper(p),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===pr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===pr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case pr.VALUE_ROWIDS:return Mb.getMaxWidthValueRowID(n);case pr.ROW_SPLITS:return Mb.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${pr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let n=t.length;if(n===0||n===1)return 0;let r=0;for(let a=0;a<n-1;++a){let s=t[a+1]-t[a];s>r&&(r=s)}return r}static getMaxWidthValueRowID(t){let n=t.length;if(n===0)return 0;let r=0,a=t[0],s=0;for(let i=1;i<n;++i){let o=t[i];o!==a&&(a=o,s=Math.max(i-r,s),r=i)}return Math.max(n-r,s)}tensorShapeFromTensor(t,n,r=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Bk(t,r)}calculateOutputSize(t){let n=this.valuesShape,r=this.defaultValueShape;T.validateDefaultValueShape(r,n);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=T.combineRaggedTensorToTensorShapes(this.raggedRank,a,n);s[0]<0&&(s[0]=t);for(let i=1;i<=this.raggedRank;++i)s[i]<0&&(s[i]=this.getMaxWidth(i));return s}calculateFirstParentOutputIndex(t,n,r){let a=Math.min(t,r),s=[],i=0;for(let o=0;o<a;++o,i+=n)s.push(i);for(let o=a;o<t;++o)s.push(-1);return v.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,n,r,a){let s=t.length,i=[];for(let o=0;o<s-1;++o){let l=t[o+1]-t[o],u=Math.min(a,l),p=n[o];p===-1&&(u=0);for(let h=0;h<u;++h)i.push(p),p+=r;for(let h=0;h<l-u;++h)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,n,r,a){let s=t.length,i=[];if(s===0)return[];let o=0,l=t[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let p=1;p<s;++p){let h=t[p];if(h===l)u>=0&&(++o,o<a?u+=r:u=-1);else{if(o=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,n,r,a){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case pr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,n,r,a);case pr.ROW_SPLITS:if(s.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(s,n,r,a);default:throw new Error(`Unsupported partition type: ${pr[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let n=this.rowPartitionTypes[0];switch(n){case pr.FIRST_DIM_SIZE:return t[0];case pr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case pr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${pr[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*n[i+1];let a=Bk(n,!1),s=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(a));if(r[0]*n[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],n[o]);this.setOutput(this.raggedRank,i,s,a)}return[a,s]}setOutput(t,n,r,a){if(r.length===0)return;let s=this.values,i=r,o=a.slice();o=o.slice(t+1);let l=v.sizeFromShape(o),u=n.length,p=this.defaultValue;if(p.length!==l&&p.length!==1){let m=this.defaultValueShape;W(()=>{let f=P(p,m);p=Rs(f,o).dataSync()})}let h=0,d=0,c=0;for(let m=0;m<=u;++m){let f=m<u?n[m]:-1;if(f===c){++c;continue}if(d<c){let g=s.subarray(h*l),y=i.subarray(d*l),b=(c-d)*l;Pk(y,g,b)}if(m>=u){let g=r.length;f=Math.floor(g/l)}if(f>c)if(this.defaultValue.length===1)i.subarray(c*l,f*l).fill(this.defaultValue[0]),c=f;else for(;f>c;){let g=i.slice(c*l);Pk(g,p,l),++c}f<0?(h=m+1,d=c):(h=m,d=c,c=d+1)}}};function Pk(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Bk(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function HC(e,t,n,r,a,s,i,o,l,u){return new M5(e,t,n,r,a,s,i,o,l,u).compute()}function k0(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return v.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var jC=Yr(e=>1/Math.sqrt(e)),O5=ps(po,jC),L5={kernelName:po,backendName:"cpu",kernelFunc:O5};function Fs(e,t,n,r,a,s,i,o,l,u){let p=[r/a,a],h=e.values,d=t.values;if(r===0)return Me(n,t.dtype);let c=l instanceof Ft?l:Me(p,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=h[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<a;y++)u?c.values[g*a+y]+=d[m*a+y]:c.values[g*a+y]=t.rank===0?d[0]:d[m*a+y]}return c}var z5=Yr(e=>1/(1+Math.exp(-e))),qC=rt(go,e=>1/(1+Math.exp(-e))),P5={kernelName:go,backendName:"cpu",kernelFunc:qC};function pc(e,t,n,r,a){let s=Pt.isSliceContinous(r,t,n),i=v.sizeFromShape(n),o=v.computeStrides(r);if(s){let h=Pt.computeFlatOffset(t,o);return a==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,u=Me(r,a,l),p=Me(n,a);for(let h=0;h<p.size;++h){let d=p.indexToLoc(h),c=d.map((m,f)=>m+t[f]);p.set(u.get(...c),...d)}return a==="string"?T.fromStringArrayToUint8(p.values):p.values}function Qs(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ge(a,"slice");let[o,l]=Pt.parseSliceParams(a,s,i);Pt.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,p=pc(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,p)}var B5={kernelName:hu,backendName:"cpu",kernelFunc:Qs};function KC(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(a,0);return[g,[0,h],y,u,p]}let d=!0,c=0,m=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++m[y],d=d&&y>=c,c=y}let f=!0;for(let g=0;g<l;++g){let y=m[g]===0;u[g]=y,f=f&&!y,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&d){let g=e,y=r;for(let b=0;b<o;++b)p[b]=b;return[g,[o,h],y,u,p]}else{let g=m[l-1],y=v.getArrayFromDType(n,g*h),b=v.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let w=0;w<o;++w){let I=e[w*h],N=x[I],C=(I===0?0:m[I-1])+N;x[I]++;for(let E=0;E<h;++E)y[C*h+E]=e[w*h+E];b[C]=r[w],p[w]=C}for(let w=0;w<l;++w)if(x[w]===0){let I=w===0?0:m[w-1];y[I*h+0]=w;for(let N=1;N<h;++N)y[I*h+N]=0;b[I]=i}return[y,[g,h],b,u,p]}}function XC(e,t,n,r,a){let s=v.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let f=0;f<o;++f){let g=a[f];if(g===-1){if(p!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,f));p=f,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(f,g));u*=g,l.push(g)}}if(p!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let f=Math.trunc(s/u);if(u*f!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=f}if(v.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,d=[];if(h>0){d[h-1]=1;for(let f=h-2;f>=0;--f)d[f]=d[f+1]*r[f+1]}let c=[];if(o>0){c[o-1]=1;for(let f=o-2;f>=0;--f)c[f]=c[f+1]*l[f+1]}let m=v.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let g=0;for(let y=0;y<h;++y)g+=e[f*h+y]*d[y];for(let y=0;y<o;++y)m[f*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[m,[i,o],l]}function I0(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce((b,x)=>b*x,1),c=v.getArrayFromDType(n,d);if(o===0)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[m];for(;;){let b=0;if(f<o){if(b=a[f],y===b){++f;continue}if(y>=b)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let x=m;x<f;++x){let w=r[x];if(w<0||w>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<u;I++)c[y*u+I]+=e[w*u+I]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=f-m;if(m=f,++f,g=y+1,y=b,f>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var W5=Yr(e=>Math.sqrt(e)),V5=rt(bo,e=>Math.sqrt(e)),U5={kernelName:bo,backendName:"cpu",kernelFunc:V5},ZC=Ct((e,t)=>{let n=e-t;return n*n}),G5=Vt(vo,ZC),H5={kernelName:vo,backendName:"cpu",kernelFunc:G5},JC=Yr((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),j5=ps(td,JC),q5={kernelName:td,backendName:"cpu",kernelFunc:j5};function YC(e,t,n,r){let a=Me(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var K5=class{constructor(e,t,n,r,a,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let y=0;y<p;++y)d+=e[h+y].length;d+=u*this.rightPad.length;let c=l+u+p-1;d+=c*this.separator.length,n[r+i]=new Uint8Array(d);let m=n[r+i],f=0,g=y=>y.forEach(b=>m[f++]=b);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<p-1;++y)g(e[h+y]),g(this.separator);if(p>0){g(e[h+p-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let u=t[l]>=o;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=v.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(p=>{u+=this.getNumNGrams(l,p)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(p=>{let h=t[o+1]-t[o],d=this.getNumNGrams(h,p);this.createNGrams(e,l,i,u,d,p),u+=d}),this.preserveShort&&u===s[o]){let p=t[o+1]-t[o];if(p===0)continue;let h=p+2*this.padWidth;this.createNGrams(e,l,i,u,1,h)}}return[i,s]}};function S0(e,t,n,r,a,s,i,o){return new K5(n,r,a,s,i,o).compute(e,t)}function X5(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function N0(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let c=a.length;X5(e[d],t,n,a);let m=a.length-c;o[d]=m,s+=m,i=Math.max(i,m)}let l=v.getArrayFromDType("int32",s*2),u=new Array(s),p=[r,i],h=0;for(let d=0;d<r;++d)for(let c=0;c<o[d];++c)l[h*2]=d,l[h*2+1]=c,u[h]=a[h],++h;return[l,u,p]}function T0(e,t){let n=v.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=v.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var QC=Ct((e,t)=>e-t),Z5=y0((e,t,n,r)=>({real:e-n,imag:t-r})),C0=Vt(ko,QC,Z5),J5={kernelName:ko,backendName:"cpu",kernelFunc:C0};function e_(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Me(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var ip=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function t_(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,u=Math.log(o),p=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*p*(o-p)/o)*Math.sign(l-o/2),d=Math.max(n,Math.floor(t-l*p/o+h)),c=Math.min(r,Math.floor(t+(o-l)*p/o+h));t_(e,t,d,c)}let a=e[t],s=n,i=r;for(v.swap(e,n,t),ip(e[r],a)>0&&v.swap(e,n,r);s<i;){for(v.swap(e,s,i),s++,i--;ip(e[s],a)<0;)s=s+1;for(;ip(e[i],a)>0;)i=i-1}ip(e[n],a)===0?v.swap(e,n,i):(i=i+1,v.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function n_(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=v.getTypedArrayFromDType(n,i*r),u=v.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let d=h*o,c=e.subarray(d,d+o),m=new Array(c.length);c.forEach((b,x)=>m[x]={value:b,index:x}),r<m.length&&(t_(m,r),m=m.slice(0,r)),a&&m.sort(ip);let f=h*r,g=l.subarray(f,f+r),y=u.subarray(f,f+r);for(let b=0;b<r;b++)g[b]=m[b].value,y[b]=m[b].index}let p=t.slice();return p[p.length-1]=r,[Me(p,n,l),Me(p,"int32",u)]}function _0(e,t,n,r){let a=v.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<a;m++)s[0]*=n[m];s[1]=n[a];for(let m=a+1;m<n.length;m++)s[2]*=n[m];let i=new Map,o=new Int32Array(n[a]),l=new Ft(s,r,e),u=[],p=s[0]===1&&s[2]===1;for(let m=0;m<n[a];m++){let f;if(p)f=e[m].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(l.get(b,m,x));f=y.join(",")}let g=i.get(f);if(g!=null)o[m]=g;else{let y=i.size;i.set(f,y),o[m]=y,u.push(m)}}let h=s.slice();h[1]=i.size;let d=new Ft(h,r);u.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,m,y),g,f,y)});let c=n.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}var Y5="4.16.0";Pc("cpu",()=>new f0,1);var r_=rt(Ci,e=>e>=0?e:Math.exp(e)-1),Q5={kernelName:Ci,backendName:"cpu",kernelFunc:r_};function a_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ge([a],"leakyRelu");let i=v.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=v.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var eK={kernelName:Pi,backendName:"cpu",kernelFunc:a_},tK=Ct((e,t)=>e<0?t*e:e);function s_(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ge([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=tK(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var nK={kernelName:to,backendName:"cpu",kernelFunc:s_},i_=rt(ao,e=>Math.max(0,e)),rK={kernelName:ao,backendName:"cpu",kernelFunc:i_},o_=rt(oo,e=>Math.min(Math.max(0,e),6)),aK={kernelName:oo,backendName:"cpu",kernelFunc:o_};function dc(e,t,n,r,a){if(n==="linear")return Kr({inputs:{x:t},backend:e});if(n==="relu")return i_({inputs:{x:t},backend:e});if(n==="elu")return r_({inputs:{x:t},backend:e});if(n==="relu6")return o_({inputs:{x:t},backend:e});if(n==="prelu")return s_({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return a_({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return qC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ft(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=v.sizeFromShape(a.shape),o=v.inferFromImplicitShape(s,i),l=v.sizeFromShape(o);v.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(u.complexTensorInfos!=null){let p=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;p.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var sK={kernelName:su,backendName:"cpu",kernelFunc:ft};function l_(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ge([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=v.sizeFromShape(m),y=v.sizeFromShape(f),b=Iu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],w=o?[y,c,h]:[y,h,c],I=ft({inputs:{x:a},backend:n,attrs:{shape:x}}),N=ft({inputs:{x:s},backend:n,attrs:{shape:w}}),C=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?N.shape[1]:N.shape[2],R=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(N.dataId).values,M=v.computeStrides(I.shape),B=v.computeStrides(N.shape),[U,H,q]=i?[M[0],1,M[1]]:[M[0],M[1],1],[K,Z,J]=o?[1,B[1],B[0]]:[B[1],1,B[0]],ee=E*A,re=Me([R,E,A],I.dtype),te=re.values,ae=n.blockSize;for(let se=0;se<R;se++){let xe=se%g,ue=se%y;for(let be=0;be<E;be+=ae){let ke=Math.min(be+ae,E);for(let Se=0;Se<A;Se+=ae){let Oe=Math.min(Se+ae,A);for(let We=0;We<C;We+=ae){let pt=Math.min(We+ae,C);for(let Ye=be;Ye<ke;Ye++)for(let Ze=Se;Ze<Oe;Ze++){let Je=0;for(let Ae=We;Ae<pt;Ae++){let ht=F[xe*U+Ye*H+Ae*q],Dn=S[Ae*K+Ze*Z+ue*J];Je+=ht*Dn}te[se*ee+(Ye*A+Ze)]+=Je}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,re.dtype,re.values)}var iK={kernelName:fi,backendName:"cpu",kernelFunc:l_};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,d,c,m,f=[];d=l_({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(c=gl({inputs:{a:d,b:i},backend:n}),f.push(d),d=c),p&&(m=dc(n,d,p,o,h),f.push(d),d=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return d}var lK={kernelName:zs,backendName:"cpu",kernelFunc:oK},uK=rt(ii,e=>Math.acos(e)),pK={kernelName:ii,backendName:"cpu",kernelFunc:uK},dK=rt(oi,e=>Math.acosh(e)),hK={kernelName:oi,backendName:"cpu",kernelFunc:dK};function cK(e){let{inputs:t,backend:n}=e,r=t;ge(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Me(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var mK={kernelName:li,backendName:"cpu",kernelFunc:cK};function fK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"all");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=An({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),m=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),f=n.data.get(p.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];x=x&&I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var gK={kernelName:kl,backendName:"cpu",kernelFunc:fK};function yK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"any");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=An({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),m=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),f=n.data.get(p.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];x=x||I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var bK={kernelName:Il,backendName:"cpu",kernelFunc:yK};function xK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ge(a,"argMax");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=An({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(p),c=v.makeZerosTypedArray(d,"int32"),m=v.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let w=0;w<m;++w){let I=f[y+w];I>b&&(b=I,x=w)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(p,"int32",c)}var wK={kernelName:Sl,backendName:"cpu",kernelFunc:xK};function vK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ge(a,"argMin");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=An({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(p),c=v.makeZerosTypedArray(d,"int32"),m=v.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let w=0;w<m;++w){let I=f[y+w];I<b&&(b=I,x=w)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(p,"int32",c)}var kK={kernelName:Nl,backendName:"cpu",kernelFunc:vK},IK=rt(ui,e=>Math.asin(e)),SK={kernelName:ui,backendName:"cpu",kernelFunc:IK},NK=rt(pi,e=>Math.asinh(e)),TK={kernelName:pi,backendName:"cpu",kernelFunc:NK},CK=rt(di,e=>Math.atan(e)),_K={kernelName:di,backendName:"cpu",kernelFunc:CK},EK=Ct((e,t)=>Math.atan2(e,t)),$K=Vt(ci,EK),AK={kernelName:ci,backendName:"cpu",kernelFunc:$K},FK=rt(hi,e=>Math.atanh(e)),RK={kernelName:hi,backendName:"cpu",kernelFunc:FK};function E0(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Me(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let I=w*y,N=w*r[0];for(let C=0;C<a.inChannels;++C)for(let E=0;E<a.outHeight;++E){let A=E*i-d,R=Math.max(0,A),F=Math.min(a.inHeight,p+A),S=I+E*b;for(let M=0;M<a.outWidth;++M){let B=M*o-c,U=Math.max(0,B),H=Math.min(a.inWidth,h+B),q=m,K=0,Z=0;for(let ee=R;ee<F;ee+=l){let re=N+ee*r[1];for(let te=U;te<H;te+=u){let ae=re+te*r[2],se=e[ae+C];s==="max"&&se>q?q=se:s==="avg"&&(K+=se,Z++)}if(isNaN(q))break}let J=S+M*x+C;g[J]=s==="avg"?K/Z:q}}}return f}function u_(e,t,n,r,a=!1,s=!1){let i=Me(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=Me(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,w=x;for(;w<0;)w+=u;let I=Math.min(r.inHeight,h+x);for(let N=0;N<r.outWidth;++N){let C=N*l-m,E=C;for(;E<0;)E+=p;let A=Math.min(r.inWidth,d+C),R=Number.NEGATIVE_INFINITY,F=-1;for(let S=w;S<I;S+=u){let M=S-x;for(let B=E;B<A;B+=p){let U=B-C,H=f.get(g,S,B,y);H>R&&(R=H,a?F=s?((g*r.inHeight+S)*r.inWidth+B)*r.inChannels+y:(S*r.inWidth+B)*r.inChannels+y:F=M*d+U)}}i.set(F,g,b,N,y)}}return i}function p_(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Me(a.outShape,n),w=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let R=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let M=0;M<a.outDepth;++M){let B=M*i-f,U=B;for(;U<0;)U+=u;let H=Math.min(a.inDepth,d+B),q=R+M*N;for(let K=0;K<a.outHeight;++K){let Z=K*o-g,J=Z;for(;J<0;)J+=p;let ee=Math.min(a.inHeight,c+Z),re=q+K*C;for(let te=0;te<a.outWidth;++te){let ae=te*l-y,se=ae;for(;se<0;)se+=h;let xe=Math.min(a.inWidth,m+ae),ue=re+te*E,be=b,ke=0,Se=0;for(let We=U;We<H;We+=u){let pt=F+We*r[1];for(let Ye=J;Ye<ee;Ye+=p){let Ze=pt+Ye*r[2];for(let Je=se;Je<xe;Je+=h){let Ae=Ze+Je*r[3],ht=e[Ae+S];if(s==="max"&&ht>be?be=ht:s==="avg"&&(ke+=ht,Se++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}let Oe=ue+S;w[Oe]=s==="avg"?ke/Math.max(Se,1):be}}}}return x}function DK(e,t){let n=Me(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let I=0;I<t.outHeight;++I){let N=I*a-c,C=N;for(;C<0;)C+=o;let E=Math.min(t.inHeight,p+N);for(let A=0;A<t.outWidth;++A){let R=A*s-m,F=R;for(;F<0;)F+=l;let S=Math.min(t.inWidth,h+R),M=Number.NEGATIVE_INFINITY,B=-1;for(let U=x;U<w;U+=i){let H=U-b;for(let q=C;q<E;q+=o){let K=q-N;for(let Z=F;Z<S;Z+=l){let J=Z-R,ee=e.get(f,U,q,Z,g);ee>=M&&(M=ee,B=H*p*h+K*p+J)}}}n.set(B,f,y,I,A,g)}}}return n}function MK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ge(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))h=Kr({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),m=E0(d,a.shape,a.dtype,c,p,"avg");h=n.makeTensorInfo(p.outShape,a.dtype,m.values)}return h}var OK={kernelName:mi,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ge(a,"avgPool3d");let p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,d=p_(h,a.shape,a.dtype,v.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var zK={kernelName:Tl,backendName:"cpu",kernelFunc:LK};function PK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ge([a,s],"avgPool3DGrad");let p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,m=p.filterDepth,f=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterDepth,I=p.effectiveFilterHeight,N=p.effectiveFilterWidth,C=w-1-p.padInfo.front,E=N-1-p.padInfo.left,A=I-1-p.padInfo.top,R=Me(s.shape,"float32"),F=1/(m*f*g),S=n.bufferSync(a);for(let M=0;M<p.batchSize;++M)for(let B=0;B<p.inChannels;++B)for(let U=0;U<p.inDepth;++U)for(let H=0;H<p.inHeight;++H)for(let q=0;q<p.inWidth;++q){let K=U-C,Z=H-A,J=q-E,ee=0;for(let re=0;re<w;re+=y){let te=(K+re)/h;if(!(te<0||te>=p.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let se=(Z+ae)/d;if(!(se<0||se>=p.outHeight||Math.floor(se)!==se))for(let xe=0;xe<N;xe+=x){let ue=(J+xe)/c;if(ue<0||ue>=p.outWidth||Math.floor(ue)!==ue)continue;let be=S.get(M,te,se,ue,B);ee+=be}}}R.set(ee*F,M,U,H,q,B)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var BK={kernelName:Wp,backendName:"cpu",kernelFunc:PK};function WK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ge([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=T.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,m=p.filterWidth,f=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,w=y-1-p.padInfo.top,I=Me(i.shape,"float32"),N=1/(c*m),C=n.data.get(a.dataId).values,E=Me(a.shape,"float32",C);for(let A=0;A<p.batchSize;++A)for(let R=0;R<p.inChannels;++R)for(let F=0;F<p.inHeight;++F)for(let S=0;S<p.inWidth;++S){let M=F-w,B=S-x,U=0;for(let H=0;H<y;H+=f){let q=(M+H)/h;if(!(q<0||q>=p.outHeight||Math.floor(q)!==q))for(let K=0;K<b;K+=g){let Z=(B+K)/d;if(Z<0||Z>=p.outWidth||Math.floor(Z)!==Z)continue;let J=E.get(A,q,Z,R);U+=J}}I.set(U*N,A,F,S,R)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var VK={kernelName:Bp,backendName:"cpu",kernelFunc:WK};function UK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;v.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ge([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);let p=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(p.length),g=m.length,y=c.length,b=d.length,x=h.length,w=0,I=0,N=0,C=0;for(let E=0;E<p.length;++E)f[E]=m[w++]+(p[E]-h[I++])*c[N++]/Math.sqrt(d[C++]+u),w>=g&&(w=0),I>=x&&(I=0),N>=y&&(N=0),C>=b&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,f)}var GK={kernelName:Ri,backendName:"cpu",kernelFunc:UK};function HK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ge([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=ft({inputs:{x:a},backend:n,attrs:{shape:l}}),m=An({inputs:{x:c},backend:n,attrs:{perm:u}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:p}}),g=Qs({inputs:{x:f},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var jK={kernelName:Cl,backendName:"cpu",kernelFunc:HK};function qK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=b0(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var KK={kernelName:_l,backendName:"cpu",kernelFunc:qK};function XK(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var ZK={kernelName:Vp,backendName:"cpu",kernelFunc:XK},JK=rt(ns,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),YK={kernelName:ns,backendName:"cpu",kernelFunc:JK},QK=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let p=o[u],h=l[u];r[u]=Math.hypot(p,h)}return n.makeOutput(r,t.shape,"float32")},e8={kernelName:Up,backendName:"cpu",kernelFunc:QK};function yl(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var t8={kernelName:Fc,backendName:"cpu",kernelFunc:yl};function bl(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(f=>f.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(f=>f.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(f=>v.sizeFromShape(f.shape)>0);if(l.length===1)return Kr({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){let f=l.map(w=>Ys({inputs:{input:w},backend:n})),g=l.map(w=>yl({inputs:{input:w},backend:n})),y=bl({inputs:f,backend:n,attrs:{axis:s}}),b=bl({inputs:g,backend:n,attrs:{axis:s}}),x=Bn({inputs:{real:y,imag:b},backend:n});return f.forEach(w=>n.disposeIntermediateTensorInfo(w)),g.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let u=l.map(f=>{let g=[-1,v.sizeFromShape(f.shape.slice(s))];return ft({inputs:{x:f},backend:n,attrs:{shape:g}})}),p=u.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));o=T.computeOutShape(u.map(f=>f.shape),1);let h=u[0].shape[0]===1,d=x0(p,o,t[0].dtype,h),c=T.computeOutShape(l.map(f=>f.shape),s),m=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var n8={kernelName:$l,backendName:"cpu",kernelFunc:bl};function d_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;ge([a,s],"conv2d");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",w=new Ft(d.outShape,a.dtype),I=v.computeStrides(a.shape),N=v.computeStrides(s.shape),C=I[0],E=x?I[1]:I[2],A=x?I[2]:1,R=x?1:I[1],F=w.strides[0],S=x?w.strides[1]:w.strides[2],M=x?w.strides[2]:1,B=x?1:w.strides[1],U=n.data.get(a.dataId).values,H=n.data.get(s.dataId).values,q=w.values;for(let K=0;K<d.batchSize;++K){let Z=K*C,J=K*F;for(let ee=0;ee<d.outHeight;++ee){let re=J+ee*S,te=ee*d.strideHeight-b;for(let ae=0;ae<c;++ae){let se=te+ae*f;if(se<0||se>=d.inHeight)continue;let xe=ae*N[0],ue=Z+se*E;for(let be=0;be<d.outWidth;++be){let ke=re+be*M,Se=be*d.strideWidth-y;for(let Oe=0;Oe<m;++Oe){let We=Se+Oe*g;if(We<0||We>=d.inWidth)continue;let pt=xe+Oe*N[1],Ye=ue+We*A,Ze=pt;for(let Je=0;Je<d.inChannels;++Je){let Ae=U[Ye+Je*R];for(let ht=0;ht<d.outChannels;++ht)q[ke+ht*B]+=Ae*H[Ze+ht];Ze+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,q)}var r8={kernelName:bi,backendName:"cpu",kernelFunc:d_};function a8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;ge([a,s],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Ft(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=new Ft(a.shape,a.dtype,I),E=new Ft(s.shape,s.dtype,N);for(let A=0;A<f;++A){let R=Math.max(0,Math.ceil((w-A)/c)),F=Math.min(d.outHeight,(d.inHeight+w-A)/c);for(let S=0;S<g;++S){let M=Math.max(0,Math.ceil((x-S)/m)),B=Math.min(d.outWidth,(d.inWidth+x-S)/m);for(let U=0;U<d.inChannels;++U)for(let H=0;H<d.outChannels;++H){let q=0;for(let K=0;K<d.batchSize;++K)for(let Z=R;Z<F;++Z){let J=A+Z*c-w;for(let ee=M;ee<B;++ee){let re=S+ee*m-x;y?q+=C.get(K,J,re,U)*E.get(K,Z,ee,H):q+=C.get(K,U,J,re)*E.get(K,H,Z,ee)}}b.set(q,A,S,U,H)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var s8={kernelName:Nc,backendName:"cpu",kernelFunc:a8};function i8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;ge([a,s],"conv2dBackpropInput");let h=v.computeStrides(s.shape),d=v.computeStrides(a.shape),c=T.convertConv2DDataFormat(u),m=T.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),f=new Ft(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,I]=h,{batchSize:N,filterHeight:C,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:S,outHeight:M,outWidth:B,strideHeight:U,strideWidth:H}=m;c=m.dataFormat;let q=C-1-m.padInfo.top,K=E-1-m.padInfo.left,Z=c==="channelsLast",J=f.strides[0],ee=Z?f.strides[1]:f.strides[2],re=Z?f.strides[2]:1,te=Z?1:f.strides[1],ae=d[0],se=Z?d[1]:d[2],xe=Z?d[2]:1,ue=Z?1:d[1];for(let be=0;be<N;++be)for(let ke=0;ke<A;++ke)for(let Se=0;Se<R;++Se){let Oe=Se-q,We=Math.max(0,Math.ceil(Oe/U)),pt=Math.min(M,(C+Oe)/U);for(let Ye=0;Ye<F;++Ye){let Ze=Ye-K,Je=Math.max(0,Math.ceil(Ze/H)),Ae=Math.min(B,(E+Ze)/H),ht=0;for(let _t=We;_t<pt;++_t){let Kn=_t*U-Oe;for(let Qt=Je;Qt<Ae;++Qt){let vn=Qt*H-Ze,Xn=ae*be+se*_t+xe*Qt,kn=x*(C-1-Kn)+w*(E-1-vn)+I*ke;for(let at=0;at<S;++at){let In=y[Xn+ue*at],Mn=b[kn+at];ht+=In*Mn}}}let Dn=J*be+ee*Se+re*Ye+te*ke;g[Dn]=ht}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var o8={kernelName:xi,backendName:"cpu",kernelFunc:i8};function l8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;ge([a,s],"conv3d");let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new Ft(u.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=w.values,E=v.computeStrides(a.shape),A=v.computeStrides(s.shape);for(let R=0;R<u.batchSize;++R){let F=R*E[0],S=R*w.strides[0];for(let M=0;M<u.outDepth;++M){let B=S+M*w.strides[1],U=M*u.strideDepth-y;for(let H=0;H<p;++H){let q=U+H*c;if(q<0||q>=u.inDepth)continue;let K=H*A[0],Z=F+q*E[1];for(let J=0;J<u.outHeight;++J){let ee=B+J*w.strides[2],re=J*u.strideHeight-x;for(let te=0;te<h;++te){let ae=re+te*m;if(ae<0||ae>=u.inHeight)continue;let se=K+te*A[1],xe=Z+ae*E[2];for(let ue=0;ue<u.outWidth;++ue){let be=ee+ue*u.outChannels,ke=ue*u.strideWidth-b;for(let Se=0;Se<d;++Se){let Oe=ke+Se*f;if(Oe<0||Oe>=u.inWidth)continue;let We=se+Se*A[2],pt=xe+Oe*u.inChannels,Ye=We;for(let Ze=0;Ze<u.inChannels;++Ze){let Je=I[pt+Ze];for(let Ae=0;Ae<u.outChannels;++Ae)C[be+Ae]+=Je*N[Ye+Ae];Ye+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var u8={kernelName:wi,backendName:"cpu",kernelFunc:l8};function p8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;ge([a,s],"conv3dBackpropFilterV2");let u=v.computeStrides(a.shape),p=v.computeStrides(s.shape),h=T.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,m=h.strideWidth,f=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ft(h.filterShape,"float32"),x=b.values,[w,I,N,C]=b.strides,E=n.data.get(s.dataId).values,[A,R,F,S]=p,M=n.data.get(a.dataId).values,[B,U,H,q]=u,K=h.padInfo.front,Z=h.padInfo.left,J=h.padInfo.top;for(let ee=0;ee<f;++ee){let re=Math.max(0,Math.ceil((K-ee)/d)),te=Math.min(h.outDepth,(h.inDepth+K-ee)/d),ae=ee*w;for(let se=0;se<g;++se){let xe=Math.max(0,Math.ceil((J-se)/c)),ue=Math.min(h.outHeight,(h.inHeight+J-se)/c),be=se*I+ae;for(let ke=0;ke<y;++ke){let Se=Math.max(0,Math.ceil((Z-ke)/m)),Oe=Math.min(h.outWidth,(h.inWidth+Z-ke)/m),We=ke*N+be;for(let pt=0;pt<h.inChannels;++pt){let Ye=pt*C+We;for(let Ze=0;Ze<h.outChannels;++Ze){let Je=0;for(let Ae=0;Ae<h.batchSize;++Ae){let ht=Ae*B,Dn=Ae*A;for(let _t=re;_t<te;++_t){let Kn=(ee+_t*d-K)*U+ht,Qt=_t*R+Dn;for(let vn=xe;vn<ue;++vn){let Xn=(se+vn*c-J)*H+Kn,kn=vn*F+Qt;for(let at=Se;at<Oe;++at){let In=(ke+at*m-Z)*q+Xn,Mn=at*S+kn;Je+=M[In+pt]*E[Mn+Ze]}}}}x[Ye+Ze]=Je}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var d8={kernelName:Al,backendName:"cpu",kernelFunc:p8};function h8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;ge([a],"conv3dBackpropInputV2");let u=v.computeStrides(a.shape),p=v.computeStrides(s.shape),h=T.computeConv3DInfo(l,s.shape,o,1,i),d=new Ft(h.inShape,"float32"),c=d.values,[m,f,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,I,N]=u,C=n.data.get(s.dataId).values,[E,A,R,F]=p,{batchSize:S,filterDepth:M,filterHeight:B,filterWidth:U,inChannels:H,inDepth:q,inHeight:K,inWidth:Z,outChannels:J,outDepth:ee,outHeight:re,outWidth:te,strideDepth:ae,strideHeight:se,strideWidth:xe}=h,ue=M-1-h.padInfo.front,be=B-1-h.padInfo.top,ke=U-1-h.padInfo.left;for(let Se=0;Se<S;++Se)for(let Oe=0;Oe<H;++Oe)for(let We=0;We<q;++We){let pt=We-ue,Ye=Math.max(0,Math.ceil(pt/ae)),Ze=Math.min(ee,(M+pt)/ae);for(let Je=0;Je<K;++Je){let Ae=Je-be,ht=Math.max(0,Math.ceil(Ae/se)),Dn=Math.min(re,(B+Ae)/se);for(let _t=0;_t<Z;++_t){let Kn=_t-ke,Qt=Math.max(0,Math.ceil(Kn/xe)),vn=Math.min(te,(U+Kn)/xe),Xn=0;for(let kn=Ye;kn<Ze;++kn){let at=kn*ae-pt;for(let In=ht;In<Dn;++In){let Mn=In*se-Ae;for(let Qr=Qt;Qr<vn;++Qr){let Lo=Qr*xe-Kn,Fr=x*Se+w*kn+I*In+N*Qr,Gu=E*(M-1-at)+A*(B-1-Mn)+R*(U-1-Lo)+F*Oe;for(let lr=0;lr<J;++lr){let va=b[Fr+lr],Ut=C[Gu+lr];Xn+=va*Ut}}}}c[m*Se+f*We+g*Je+y*_t+Oe]=Xn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var c8={kernelName:Fl,backendName:"cpu",kernelFunc:h8},m8=rt(vi,e=>Math.cos(e)),f8={kernelName:vi,backendName:"cpu",kernelFunc:m8},g8=rt(ki,e=>Math.cosh(e)),y8={kernelName:ki,backendName:"cpu",kernelFunc:g8};function b8(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,h,d,c]=a.shape,m=s.shape[0],[f,g]=o,y=Me([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,I=v.computeStrides(a.shape),N=v.computeStrides(y.shape);for(let C=0;C<m;C++){let E=C*4,A=b[E],R=b[E+1],F=b[E+2],S=b[E+3],M=x[C];if(M>=p)continue;let B=f>1?(F-A)*(h-1)/(f-1):0,U=g>1?(S-R)*(d-1)/(g-1):0;for(let H=0;H<f;H++){let q=f>1?A*(h-1)+H*B:.5*(A+F)*(h-1);if(q<0||q>h-1){for(let K=0;K<g;K++)for(let Z=0;Z<c;Z++){let J=Z+K*N[2]+H*N[1]+C*N[0];y.values[J]=u}continue}if(l==="bilinear"){let K=Math.floor(q),Z=Math.ceil(q),J=q-K;for(let ee=0;ee<g;ee++){let re=g>1?R*(d-1)+ee*U:.5*(R+S)*(d-1);if(re<0||re>d-1){for(let xe=0;xe<c;xe++){let ue=xe+ee*N[2]+H*N[1]+C*N[0];y.values[ue]=u}continue}let te=Math.floor(re),ae=Math.ceil(re),se=re-te;for(let xe=0;xe<c;xe++){let ue=xe+te*I[2]+K*I[1]+M*I[0],be=w[ue];ue=xe+ae*I[2]+K*I[1]+M*I[0];let ke=w[ue];ue=xe+te*I[2]+Z*I[1]+M*I[0];let Se=w[ue];ue=xe+ae*I[2]+Z*I[1]+M*I[0];let Oe=w[ue],We=be+(ke-be)*se,pt=Se+(Oe-Se)*se;ue=xe+ee*N[2]+H*N[1]+C*N[0],y.values[ue]=We+(pt-We)*J}}}else for(let K=0;K<g;++K){let Z=g>1?R*(d-1)+K*U:.5*(R+S)*(d-1);if(Z<0||Z>d-1){for(let re=0;re<c;re++){let te=re+K*N[2]+H*N[1]+C*N[0];y.values[te]=u}continue}let J=Math.round(Z),ee=Math.round(q);for(let re=0;re<c;re++){let te=re+J*I[2]+ee*I[1]+M*I[0],ae=re+K*N[2]+H*N[1]+C*N[0];y.values[ae]=w[te]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var x8={kernelName:Dl,backendName:"cpu",kernelFunc:b8};function w8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ge(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=An({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=T.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ar(u.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)d[x]=i?1:c[x];else{let w=f(y,b-1);d[x]=i?c[w]*d[w]:c[x]*d[w]}}let g=n.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),b=An({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var v8={kernelName:Rl,backendName:"cpu",kernelFunc:w8};function k8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ge(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=An({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=T.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ar(u.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)d[x]=i?0:c[x];else{let w=f(y,b-1);d[x]=i?c[w]+d[w]:c[x]+d[w]}}let g=n.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),b=An({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var I8={kernelName:Ii,backendName:"cpu",kernelFunc:k8};function S8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=b0(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),p=xC(l,u,i,o);return n.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var N8={kernelName:Gp,backendName:"cpu",kernelFunc:S8};function T8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],h=l*s,d=u*s,c=p/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*h*d*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let x=Math.floor(b/s),w=b%s;for(let I=0;I<d;++I){let N=Math.floor(I/s),C=I%s,E=(w*s+C)*c;for(let A=0;A<c;++A){let R=A+E+p*(N+u*(x+l*y));f[g++]=m[R]}}}return n.makeTensorInfo([o,h,d,c],a.dtype,f)}var C8={kernelName:Ml,backendName:"cpu",kernelFunc:T8};function h_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;ge([a,s],"depthwiseConv2DNative");let p=v.computeStrides(a.shape),h=v.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,I=c.outChannels/c.inChannels,N=new Ft(c.outShape,a.dtype),C=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=N.values;for(let R=0;R<c.batchSize;++R){let F=R*p[0],S=R*N.strides[0];for(let M=0;M<c.outHeight;++M){let B=S+M*N.strides[1],U=M*c.strideHeight-w;for(let H=0;H<m;++H){let q=U+H*g;if(q<0||q>=c.inHeight)continue;let K=H*h[0],Z=F+q*p[1];for(let J=0;J<c.outWidth;++J){let ee=B+J*N.strides[2],re=J*c.strideWidth-x;for(let te=0;te<f;++te){let ae=re+te*y;if(ae<0||ae>=c.inWidth)continue;let se=K+te*h[1],xe=Z+ae*c.inChannels,ue=ee,be=se;for(let ke=0;ke<c.inChannels;++ke){let Se=C[xe+ke];for(let Oe=0;Oe<I;++Oe)A[ue+Oe]+=Se*E[be+Oe];ue+=I,be+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var _8={kernelName:Si,backendName:"cpu",kernelFunc:h_};function E8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;ge([a,s],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:m,filterWidth:f}=h,g=new Ft(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,I=new Ft(a.shape,a.dtype,w),N=n.data.get(s.dataId).values,C=new Ft(s.shape,s.dtype,N);for(let E=0;E<m;++E){let A=Math.max(0,Math.ceil((b-E)/d)),R=Math.min(h.outHeight,(h.inHeight+b-E)/d);for(let F=0;F<f;++F){let S=Math.max(0,Math.ceil((y-F)/c)),M=Math.min(h.outWidth,(h.inWidth+y-F)/c);for(let B=0;B<h.outChannels;++B){let U=Math.trunc(B/x),H=B%x,q=0;for(let K=0;K<h.batchSize;++K)for(let Z=A;Z<R;++Z){let J=E+Z*d-b;for(let ee=S;ee<M;++ee){let re=F+ee*c-y;q+=I.get(K,J,re,U)*C.get(K,Z,ee,B)}}g.set(q,E,F,U,H)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var $8={kernelName:Tc,backendName:"cpu",kernelFunc:E8};function A8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;ge([a,s],"depthwiseConv2DNativeBackpropInput");let h=v.computeStrides(a.shape),d=v.computeStrides(s.shape),c=T.computeConv2DInfo(p,s.shape,i,o,l,u,!0),m=new Ft(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[w,I,N]=h,C=n.data.get(s.dataId).values,[E,A,R]=d,{batchSize:F,filterHeight:S,filterWidth:M,inChannels:B,inHeight:U,inWidth:H,outChannels:q,outHeight:K,outWidth:Z,strideHeight:J,strideWidth:ee}=c,re=S-1-c.padInfo.top,te=M-1-c.padInfo.left,ae=q/B;for(let se=0;se<F;++se)for(let xe=0;xe<B;++xe)for(let ue=0;ue<U;++ue){let be=ue-re,ke=Math.max(0,Math.ceil(be/J)),Se=Math.min(K,(S+be)/J);for(let Oe=0;Oe<H;++Oe){let We=Oe-te,pt=Math.max(0,Math.ceil(We/ee)),Ye=Math.min(Z,(M+We)/ee),Ze=0;for(let Je=ke;Je<Se;++Je){let Ae=Je*J-be;for(let ht=pt;ht<Ye;++ht){let Dn=ht*ee-We,_t=w*se+I*Je+N*ht,Kn=E*(S-1-Ae)+A*(M-1-Dn)+R*xe;for(let Qt=0;Qt<ae;++Qt){let vn=xe*ae+Qt,Xn=x[_t+vn],kn=C[Kn+Qt];Ze+=Xn*kn}}}f[g*se+y*ue+b*Oe+xe]=Ze}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var F8={kernelName:Cc,backendName:"cpu",kernelFunc:A8};function R8(e){let{inputs:t,backend:n}=e,{x:r}=t,a=v.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Me([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var D8={kernelName:Hp,backendName:"cpu",kernelFunc:R8},M8={kernelName:Ni,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,p=r.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:I,filterHeight:N,filterWidth:C,dilationHeight:E,dilationWidth:A,outShape:R}=T.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=v.sizeFromShape(R),S=R.length,M=v.getArrayFromDType(r.dtype,F);for(let B=0;B<c;++B)for(let U=0;U<y;++U){let H=U*w-x.top;for(let q=0;q<b;++q){let K=q*I-x.left;for(let Z=0;Z<g;++Z){let J=Number.MIN_SAFE_INTEGER;for(let re=0;re<N;++re){let te=H+re*E;if(te>=0&&te<m)for(let ae=0;ae<C;++ae){let se=K+ae*A;if(se>=0&&se<f){let xe=v.locToIndex([B,te,se,Z],p,v.computeStrides(r.shape)),ue=v.locToIndex([re,ae,Z],d,v.computeStrides(a.shape)),be=u[xe]+h[ue];be>J&&(J=be)}}}let ee=v.locToIndex([B,U,q,Z],S,v.computeStrides(R));M[ee]=J}}}return{dataId:l.write(v.toTypedArray(M,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},O8={kernelName:al,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),h=v.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===A.length,()=>`Error in ${al}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=v.toNestedArray(A,u.data.get(s.dataId).values),F=v.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<d;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let H=U*w-b.left;for(let q=0;q<f;++q){let K=Number.MIN_SAFE_INTEGER,Z=0,J=0;for(let ee=0;ee<I;++ee){let re=B+ee*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=H+te*E;if(ae>=0&&ae<m){let se=p[S][re][ae][q]+h[ee][te][q];se>K&&(K=se,Z=ee,J=te)}}}F[Z][J][q]+=R[S][M][U][q]}}}return{dataId:u.write(v.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},L8={kernelName:rl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),h=v.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===A.length,()=>`Error in ${rl}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=v.toNestedArray(A,u.data.get(s.dataId).values),F=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<d;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let H=U*w-b.left;for(let q=0;q<f;++q){let K=Number.MIN_SAFE_INTEGER,Z=B<0?0:B,J=H<0?0:H;for(let ee=0;ee<I;++ee){let re=B+ee*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=H+te*E;if(ae>=0&&ae<m){let se=p[S][re][ae][q]+h[ee][te][q];se>K&&(K=se,Z=re,J=ae)}}}F[S][Z][J][q]+=R[S][M][U][q]}}}return{dataId:u.write(v.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function z8(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=l?.alpha||1,p=o?.contextType||"2d";if(p!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(p,o?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${p} type.`);let[d,c]=a.shape.slice(0,2),m=a.shape.length===2?1:a.shape[2],f=n.data.get(a.dataId).values,g=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(c*d*4);for(let x=0;x<d*c;++x){let w=[0,0,0,255*u];for(let N=0;N<m;N++){let C=f[x*m+N];if(a.dtype==="float32"){if(C<0||C>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${C}.`)}else if(a.dtype==="int32"&&(C<0||C>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${C}.`);m===1?(w[0]=C*g,w[1]=C*g,w[2]=C*g):w[N]=C*g}let I=x*4;y[I+0]=Math.round(w[0]),y[I+1]=Math.round(w[1]),y[I+2]=Math.round(w[2]),y[I+3]=Math.round(w[3])}s.width=c,s.height=d;let b=new ImageData(y,c,d);return h.putImageData(b,0,0),a}var P8={kernelName:_c,backendName:"cpu",kernelFunc:z8};function Md(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"sum");let o;a.dtype==="bool"?o=Ja({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Kr({inputs:{x:a},backend:n});let l=o.shape.length,u=v.parseAxisParam(s,o.shape),p=T.getAxesPermutation(u,l),h=u,d=o;p!=null&&(d=An({inputs:{x:o},backend:n,attrs:{perm:p}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,m]=T.computeOutAndReduceShapes(d.shape,h),f=T.upcastType(d.dtype,"int32"),g=uc(n,c,f),y=v.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let w=0;w<b.length;++w){let I=w*y,N=0;for(let C=0;C<y;++C)N+=x[I+C];b[w]=N}if(i){let w=T.expandShapeToKeepDim(g.shape,u),I=g;g=ft({inputs:{x:g},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),p!=null&&n.disposeIntermediateTensorInfo(d),g}var B8={kernelName:xo,backendName:"cpu",kernelFunc:Md};function W8(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=T.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of p[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=An({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=ft({inputs:{x},backend:n,attrs:{shape:w}}),m.push(x)),d===null?d=x:(d=Wm({inputs:{a:x,b:d},backend:n}),m.push(d))}f<h-1&&(u[f]>=0&&(d=Md({inputs:{x:d},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(d)),c--)}for(let f of m)f!==d&&n.disposeIntermediateTensorInfo(f);return d}var V8={kernelName:Ec,backendName:"cpu",kernelFunc:W8};function U8(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ge([r,a],"eluGrad");let s=new Float32Array(v.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=0?s[l]=o[l]:s[l]=o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",s)}var G8={kernelName:Ol,backendName:"cpu",kernelFunc:U8},H8=T.ERF_P,j8=T.ERF_A1,q8=T.ERF_A2,K8=T.ERF_A3,X8=T.ERF_A4,Z8=T.ERF_A5,J8=rt(_i,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+H8*n);return t*(1-((((Z8*r+X8)*r+K8)*r+q8)*r+j8)*r*Math.exp(-n*n))}),Y8={kernelName:_i,backendName:"cpu",kernelFunc:J8};function hc(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),ft({inputs:{x:a},backend:n,attrs:{shape:o}})}var Q8={kernelName:zl,backendName:"cpu",kernelFunc:hc},eX=Ct((e,t)=>e/t),$0=Vt(Ti,eX),Ob={kernelName:Ti,backendName:"cpu",kernelFunc:$0};function c_(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=v.sizeFromShape(u),h=v.getTypedArrayFromDType("float32",p),d=v.getTypedArrayFromDType("float32",p);for(let g=0;g<a;g++){let y=Qs({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Qs({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Bn({inputs:{real:y,imag:b},backend:n}),{real:w,imag:I}=tX(x,t,n),N=T.mergeRealAndImagArrays(w,I);for(let C=0;C<s;C++){let E=T.getComplexWithIndex(N,C);h[g*s+C]=E.real,d[g*s+C]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",d),f=Bn({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function tX(e,t,n){let r=v.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(nX(r)){let o=Lb(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",o.real),p=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",v.createScalarValue(r,"float32")),d=Kr({inputs:{x:h},backend:n}),c=Ob.kernelFunc({inputs:{a:u,b:h},backend:n}),m=Ob.kernelFunc({inputs:{a:p,b:d},backend:n}),f=n.data.get(c.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=rX(o,r,t);return T.splitRealAndImagArrays(l)}}function nX(e){return(e&e-1)===0}function Lb(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=n/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=a.makeTensorInfo(p,"float32",l),d=a.makeTensorInfo(p,"float32",u),c=Bn({inputs:{real:h,imag:d},backend:a}),m=T.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=a.makeTensorInfo(y,"float32",f),x=a.makeTensorInfo(y,"float32",g),w=Bn({inputs:{real:b,imag:x},backend:a}),I=Lb(l,u,i,r,a),N=I.real,C=I.imag,E=[N.length],A=a.makeTensorInfo(E,"float32",N),R=a.makeTensorInfo(E,"float32",C),F=Bn({inputs:{real:A,imag:R},backend:a}),S=Lb(f,g,i,r,a),M=S.real,B=S.imag,U=[M.length],H=a.makeTensorInfo(U,"float32",M),q=a.makeTensorInfo(U,"float32",B),K=Bn({inputs:{real:H,imag:q},backend:a}),Z=T.exponents(n,r),J=[Z.real.length],ee=a.makeTensorInfo(J,"float32",Z.real),re=a.makeTensorInfo(J,"float32",Z.imag),te=Bn({inputs:{real:ee,imag:re},backend:a}),ae=Wm({inputs:{a:te,b:K},backend:a}),se=gl({inputs:{a:F,b:ae},backend:a}),xe=C0({inputs:{a:F,b:ae},backend:a}),ue=Ys({inputs:{input:se},backend:a}),be=Ys({inputs:{input:xe},backend:a}),ke=yl({inputs:{input:se},backend:a}),Se=yl({inputs:{input:xe},backend:a}),Oe=bl({inputs:[ue,be],backend:a,attrs:{axis:0}}),We=bl({inputs:[ke,Se],backend:a,attrs:{axis:0}}),pt=a.data.get(Oe.dataId).values,Ye=a.data.get(We.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(ee),a.disposeIntermediateTensorInfo(re),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(xe),a.disposeIntermediateTensorInfo(ue),a.disposeIntermediateTensorInfo(ke),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(Se),a.disposeIntermediateTensorInfo(Oe),a.disposeIntermediateTensorInfo(We),{real:pt,imag:Ye}}function rX(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,n),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,a)}return r}function aX(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ft({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=c_(o,!1,n),u=ft({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var sX={kernelName:$c,backendName:"cpu",kernelFunc:aX};function A0(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||v.inferDtype(a),o=v.getArrayFromDType(i,v.sizeFromShape(r));return oX(o,a,i),t.makeTensorInfo(r,i,o)}var iX={kernelName:jp,backendName:"cpu",kernelFunc:A0};function oX(e,t,n){e.fill(t)}var lX={kernelName:Pl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,p=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let d=h*l*o*u;for(let c=0;c<o;c++){let m=c*(l*u);for(let f=0;f<l;f++){let g=f*u;for(let y=0;y<u;y++){let b=Math.round(l-f-1),x=d+m+g+y,w=p[x];if(b>=0&&b<l){let I=b*u,N=d+m+I+y;w=p[N]}s[x]=w}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function uX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:m}=r,f=d_({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=f;if(p==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=ft({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=gl({inputs:{a:f,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else f=gl({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=f;if(p==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=ft({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=dc(n,f,c,y,m),n.disposeIntermediateTensorInfo(y)}else f=dc(n,f,c,o,m);n.disposeIntermediateTensorInfo(g)}return f}var pX={kernelName:Ps,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:m}=r,f=h_({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=f;f=gl({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=f;f=dc(n,f,c,o,m),n.disposeIntermediateTensorInfo(g)}return f}var hX={kernelName:Bs,backendName:"cpu",kernelFunc:dX};function cX(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=v.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,h]=T.prepareAndValidate(r,a);if(u===0)return n.makeTensorInfo(l,r.dtype,[]);let d=n.data.get(a.dataId).values,c=n.bufferSync(r),m=EC(d,c,r.dtype,u,o,p,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,m.values)}var mX={kernelName:Wl,backendName:"cpu",kernelFunc:cX};function fX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ge([a,s],"gatherV2");let l=v.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let w=0;w<u.length;++w){let I=u[w];v.assert(I<=p-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${p-1}]`)}let h=o;o==null&&(h=0);let d=v.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,h),m=ft({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=ft({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=n.bufferSync(m),x=$C(b,y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var gX={kernelName:Bl,backendName:"cpu",kernelFunc:fX};function yX(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ft({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=c_(o,!0,n),u=ft({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var bX={kernelName:Ac,backendName:"cpu",kernelFunc:yX},xX=rt(Oi,e=>Number.isFinite(e)?1:0,"bool"),wX={kernelName:Oi,backendName:"cpu",kernelFunc:xX},vX=rt(Li,e=>Math.abs(e)===1/0?1:0,"bool"),kX={kernelName:Li,backendName:"cpu",kernelFunc:vX},IX=rt(zi,e=>Number.isNaN(e)?1:0,"bool"),SX={kernelName:zi,backendName:"cpu",kernelFunc:IX};function NX(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=MC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var TX={kernelName:Hl,backendName:"cpu",kernelFunc:NX},CX=rt(Wi,e=>Math.log1p(e)),_X={kernelName:Wi,backendName:"cpu",kernelFunc:CX},EX=Ct((e,t)=>e&&t),$X=Vt(jl,EX,null,"bool"),AX={kernelName:jl,backendName:"cpu",kernelFunc:$X},FX=rt(ql,e=>e?0:1,"bool"),RX={kernelName:ql,backendName:"cpu",kernelFunc:FX},DX=Ct((e,t)=>e||t),MX=Vt(Kl,DX,null,"bool"),OX={kernelName:Kl,backendName:"cpu",kernelFunc:MX};function LX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;ge(a,"LRN");let u=a.shape[3],p=u-1,h=n.data.get(a.dataId).values,d=v.sizeFromShape(a.shape),c=new Float32Array(d);function m(f){let g=f%u,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,p),x=0;for(;y<=b;y++){let w=h[y];x+=w*w}return x}for(let f=0;f<d;f++){let g=m(f),y=h[f]*Math.pow(i+o*g,-l);c[f]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var zX={kernelName:Vi,backendName:"cpu",kernelFunc:LX};function PX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;ge(i,"LRNGrad");let h=v.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let x=b%d,w=b-x+Math.max(0,x-o),I=b-x+Math.min(d,x+o+1),N=0;for(let C=w;C<I;C++)N+=Math.pow(m[C],2);N=u*N+l;for(let C=w;C<I;C++){let E=-2*u*p*m[C]*f[b]/N;b===C&&(E+=Math.pow(N,-p)),E*=c[b],g[C]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var BX={kernelName:Xl,backendName:"cpu",kernelFunc:PX};function m_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,p=v.parseAxisParam(s,l),h=p,d=T.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(d!=null){let w=new Array(u);for(let I=0;I<w.length;I++)w[I]=l[d[I]];c=v0(c,l,a.dtype,d,w),h=T.getInnerMostAxes(h.length,u),l=w}ge(a,"max"),T.assertAxesAreInnerMostDims("max",h,u);let[m,f]=T.computeOutAndReduceShapes(l,h),g=v.sizeFromShape(f),y=LC(c,g,m,a.dtype),b=o.write(y,m,a.dtype),x=m;return i&&(x=T.expandShapeToKeepDim(m,p)),{dataId:b,shape:x,dtype:a.dtype}}var WX={kernelName:Ui,backendName:"cpu",kernelFunc:m_};function VX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ge(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))h=Kr({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),m=E0(d,a.shape,a.dtype,c,p,"max");h=n.makeTensorInfo(p.outShape,a.dtype,m.values)}return h}var UX={kernelName:Hi,backendName:"cpu",kernelFunc:VX};function GX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ge(a,"maxPool3d");let p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,d=p_(h,a.shape,a.dtype,v.computeStrides(a.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var HX={kernelName:Zl,backendName:"cpu",kernelFunc:GX};function jX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ge([a,s],"maxPool3DGrad");let p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.bufferSync(s),d=DK(h,p),c=p.strideDepth,m=p.strideHeight,f=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterDepth,w=p.effectiveFilterHeight,I=p.effectiveFilterWidth,N=x-1-p.padInfo.front,C=I-1-p.padInfo.left,E=w-1-p.padInfo.top,A=Me(s.shape,"float32"),R=n.bufferSync(a);for(let F=0;F<p.batchSize;++F)for(let S=0;S<p.inChannels;++S)for(let M=0;M<p.inDepth;++M)for(let B=0;B<p.inHeight;++B)for(let U=0;U<p.inWidth;++U){let H=M-N,q=B-E,K=U-C,Z=0;for(let J=0;J<x;J+=g){let ee=(H+J)/c;if(!(ee<0||ee>=p.outDepth||Math.floor(ee)!==ee))for(let re=0;re<w;re+=y){let te=(q+re)/m;if(!(te<0||te>=p.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let se=(K+ae)/f;if(se<0||se>=p.outWidth||Math.floor(se)!==se)continue;let xe=x*w*I-1-d.get(F,ee,te,se,S),ue=J*w*I+re*I+ae,be=xe===ue?1:0;if(be===0)continue;let ke=R.get(F,ee,te,se,S);Z+=ke*be}}}A.set(Z,F,M,B,U,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var qX={kernelName:Kp,backendName:"cpu",kernelFunc:jX};function KX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ge([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=T.computePool2DInfo(o.shape,l,u,1,p,h),c=n.data.get(o.dataId).values,m=Me(d.outShape,o.dtype,u_(c,o.shape,o.dtype,d).values),f=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,N=x-1-d.padInfo.top,C=Me(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Me(a.shape,"float32",E);for(let R=0;R<d.batchSize;++R)for(let F=0;F<d.inChannels;++F)for(let S=0;S<d.inHeight;++S)for(let M=0;M<d.inWidth;++M){let B=S-N,U=M-I,H=0;for(let q=0;q<x;q+=y){let K=(B+q)/f;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let Z=0;Z<w;Z+=b){let J=(U+Z)/g;if(J<0||J>=d.outWidth||Math.floor(J)!==J)continue;let ee=x*w-1-m.get(R,K,J,F),re=q*w+Z,te=ee===re?1:0;if(te===0)continue;let ae=A.get(R,K,J,F);H+=ae*te}}C.set(H,R,S,M,F)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var XX={kernelName:qp,backendName:"cpu",kernelFunc:KX};function ZX(e,t,n,r,a){let s=v.computeStrides(t),i=E0(e,t,n,s,a,"max"),o=u_(e,t,n,a,!0,r);return[i.values,o.values]}var JX={kernelName:Xp,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ge(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,p=T.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=ZX(u,r.shape,r.dtype,o,p),c=l.write(h,p.outShape,r.dtype),m=l.write(d,p.outShape,r.dtype);return[{dataId:c,shape:p.outShape,dtype:r.dtype},{dataId:m,shape:p.outShape,dtype:"int32"}]}};function YX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=v.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],u=v.sizeFromShape(l),p=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=Ja({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(d);let c=$0({inputs:{a:d,b:h},backend:n});p.push(c);let m=Md({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var QX={kernelName:ji,backendName:"cpu",kernelFunc:YX};function eZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"min");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=An({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),m=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),f=n.data.get(p.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];(Number.isNaN(I)||I<x)&&(x=I)}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var tZ={kernelName:qi,backendName:"cpu",kernelFunc:eZ};function nZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ge(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),u=s.map((b,x)=>b[0]+a.shape[x]),p=i==="reflect"?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,c=v.computeStrides(a.shape),m=v.sizeFromShape(o),f=o.length,g=v.computeStrides(o),y=v.getTypedArrayFromDType(a.dtype,m);for(let b=0;b<m;b++){let x=v.indexToLoc(b,f,g);for(let I=0;I<f;I++)x[I]<l[I]?x[I]=l[I]*2-x[I]-p:x[I]>=u[I]&&(x[I]=(u[I]-1)*2-x[I]+p);x=x.map((I,N)=>I-l[N]);let w=v.locToIndex(x,d,c);y[b]=h[w]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var rZ={kernelName:Xi,backendName:"cpu",kernelFunc:nZ},aZ=Ct((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),sZ=Vt(Zi,aZ),iZ={kernelName:Zi,backendName:"cpu",kernelFunc:sZ},oZ=es(wc());function f_(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=v.parseAxisParam([o],a.shape),u=m_({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=T.expandShapeToKeepDim(u.shape,l),h=ft({inputs:{x:u},backend:n,attrs:{shape:p}}),d=C0({inputs:{a,b:h},backend:n}),c=NC({inputs:{x:d},backend:n}),m=Md({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:p}}),g=$0({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var lZ={kernelName:wo,backendName:"cpu",kernelFunc:f_};function uZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ge(a,"multinomial");let l=o?a:f_({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],c=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let m=0;m<u;++m){let f=m*p,g=new Float32Array(p-1);g[0]=h[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[f+x];let y=oZ.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let w=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var pZ={kernelName:Jl,backendName:"cpu",kernelFunc:uZ},dZ=Jr.nonMaxSuppressionV3Impl;function hZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ge(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h}=dZ(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var cZ={kernelName:eu,backendName:"cpu",kernelFunc:hZ},mZ=Jr.nonMaxSuppressionV4Impl;function fZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;ge(a,"NonMaxSuppressionPadded");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=mZ(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var gZ={kernelName:tu,backendName:"cpu",kernelFunc:fZ},yZ=Jr.nonMaxSuppressionV5Impl;function bZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;ge(a,"NonMaxSuppressionWithScore");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=yZ(p,h,d,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var xZ={kernelName:nu,backendName:"cpu",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;ge(a,"oneHot");let u=v.sizeFromShape(a.shape),p=new Float32Array(u*i);p.fill(l);let h=n.data.get(a.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(p[d*i+h[d]]=o);return n.makeTensorInfo([...a.shape,i],s,p)}var vZ={kernelName:Yi,backendName:"cpu",kernelFunc:wZ};function cc(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Ys({inputs:{input:r},backend:n}),s=cc({inputs:{x:a},backend:n}),i=yl({inputs:{input:r},backend:n}),o=cc({inputs:{x:i},backend:n}),l=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return A0({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var kZ={kernelName:vu,backendName:"cpu",kernelFunc:cc};function g_(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Ys({inputs:{input:r},backend:n}),s=g_({inputs:{x:a},backend:n}),i=yl({inputs:{input:r},backend:n}),o=cc({inputs:{x:i},backend:n}),l=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return A0({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var IZ={kernelName:ru,backendName:"cpu",kernelFunc:g_};function y_(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return hc({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=hc({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),u=bl({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var SZ={kernelName:au,backendName:"cpu",kernelFunc:y_};function NZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ge(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),u=n.data.get(a.dataId).values,p=v.sizeFromShape(a.shape),h=a.shape.length,d=v.computeStrides(a.shape),c=v.sizeFromShape(o),m=o.length,f=v.computeStrides(o),g=v.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<p;y++){let b=v.indexToLoc(y,h,d).map((w,I)=>w+l[I]),x=v.locToIndex(b,m,f);g[x]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var b_={kernelName:Qi,backendName:"cpu",kernelFunc:NZ},TZ=Ct((e,t)=>Math.pow(e,t)),CZ=Vt(eo,TZ),_Z={kernelName:eo,backendName:"cpu",kernelFunc:CZ};function EZ(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.data.get(y.dataId).values),u=a.map(y=>y.shape),p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[d,c,m]=UC(l,u,p,s.shape,s.dtype,h,i.shape,o),f=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var $Z={kernelName:Rc,backendName:"cpu",kernelFunc:EZ};function AZ(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=GC(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([p.length],r.dtype,p);return[h,d]}var FZ={kernelName:Dc,backendName:"cpu",kernelFunc:AZ};function RZ(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[m,f]=HC(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(m,s.dtype,f)}var DZ={kernelName:Mc,backendName:"cpu",kernelFunc:RZ};function MZ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=k0(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var OZ={kernelName:Zp,backendName:"cpu",kernelFunc:MZ},LZ=rt(ro,e=>1/e),zZ={kernelName:ro,backendName:"cpu",kernelFunc:LZ};function PZ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ge(a,"resizeBilinear");let l=v.computeStrides(a.shape),[u,p]=o,[h,d,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(v.sizeFromShape([h,u,p,m])),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,w=y[0]/b[0],I=y[1]/b[1];for(let N=0;N<h;N++)for(let C=0;C<u;C++){let E;i?E=w*(C+.5)-.5:E=w*C;let A=Math.max(0,Math.floor(E)),R=E-A,F=Math.min(d-1,Math.ceil(E)),S=N*l[0]+A*l[1],M=N*l[0]+F*l[1];for(let B=0;B<p;B++){let U;i?U=I*(B+.5)-.5:U=I*B;let H=Math.max(0,Math.floor(U)),q=U-H,K=Math.min(c-1,Math.ceil(U)),Z=S+H*l[2],J=M+H*l[2],ee=S+K*l[2],re=M+K*l[2];for(let te=0;te<m;te++){let ae=f[Z+te],se=f[J+te],xe=f[ee+te],ue=f[re+te],be=ae+(xe-ae)*q,ke=se+(ue-se)*q,Se=be+(ke-be)*R;g[x++]=Se}}}return n.makeTensorInfo([h,u,p,m],"float32",g)}var BZ={kernelName:io,backendName:"cpu",kernelFunc:PZ};function WZ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ge([s,a],"resizeBilinearGrad");let o=v.computeStrides(a.shape),[l,u,p,h]=a.shape,[,d,c]=s.shape,m=new Float32Array(l*u*p*h),f=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let I=0;I<l;I++){let N=I*o[0];for(let C=0;C<d;C++){let E=C*y,A=Math.floor(E),R=Math.min(Math.ceil(E),u-1),F=N+A*o[1],S=N+R*o[1],M=E-A,B=1-M;for(let U=0;U<c;U++){let H=U*b,q=Math.floor(H),K=Math.min(Math.ceil(H),p-1),Z=H-q,J=1-Z,ee=F+q*o[2],re=F+K*o[2],te=S+q*o[2],ae=S+K*o[2],se=B*J,xe=B*Z,ue=M*J,be=M*Z;for(let ke=0;ke<h;ke++){let Se=x[w++];m[ee+ke]+=Se*se,m[re+ke]+=Se*xe,m[te+ke]+=Se*ue,m[ae+ke]+=Se*be}}}}return n.makeTensorInfo([l,p,u,h],"float32",m)}var VZ={kernelName:ou,backendName:"cpu",kernelFunc:WZ};function UZ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ge(a,"resizeNearestNeighbor");let l=v.computeStrides(a.shape),[u,p]=o,[h,d,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(h*u*p*m),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],w=y[1]/b[1],I=0;for(let N=0;N<h;N++){let C=N*l[0];for(let E=0;E<u;E++){let A=i?x*(E+.5):x*E,R=Math.min(d-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let F=C+R*l[1];for(let S=0;S<p;S++){let M=i?w*(S+.5):w*S,B=Math.min(c-1,s?Math.round(M):Math.floor(M));i&&(B=Math.max(0,B));let U=F+B*l[2];for(let H=0;H<m;H++){let q=f[U+H];g[I++]=q}}}}return n.makeTensorInfo([h,u,p,m],a.dtype,g)}var GZ={kernelName:so,backendName:"cpu",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ge([s,a],"resizeNearestNeighborGrad");let o=v.computeStrides(a.shape),l=v.computeStrides(s.shape),[u,p,h,d]=a.shape,[,c,m]=s.shape,f=new Float32Array(u*p*h*d),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&m>1?h-1:h],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],w=y[1]/b[1],I=1/x,N=1/w,C=Math.ceil(I)*2+2,E=Math.ceil(N)*2+2;for(let A=0;A<u;A++){let R=A*o[0];for(let F=0;F<p;F++){let S=R+F*o[1],M=Math.floor(F*I),B=Math.floor(M-C/2);for(let U=0;U<h;U++){let H=S+U*o[2],q=Math.floor(U*N),K=Math.floor(q-E/2);for(let Z=0;Z<d;Z++){let J=0;for(let ee=0;ee<C;ee++){let re=ee+B;if(re<0||re>=c)continue;let te=R+re*l[1],ae=re*x,se=Math.min(p-1,i?Math.round(ae):Math.floor(ae));if(F===se)for(let xe=0;xe<E;xe++){let ue=xe+K;if(ue<0||ue>=m)continue;let be=te+ue*l[2],ke=ue*w,Se=Math.min(h-1,i?Math.round(ke):Math.floor(ke));U===Se&&(J+=g[be+Z])}}f[H+Z]=J}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}var jZ={kernelName:iu,backendName:"cpu",kernelFunc:HZ};function qZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ge(a,"reverse");let i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return Kr({inputs:{x:a},backend:n});let l=new Ft(a.shape,a.dtype),u=n.bufferSync(a);for(let p=0;p<l.size;p++){let h=l.indexToLoc(p),d=h.slice();o.forEach(c=>d[c]=a.shape[c]-1-d[c]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var KZ={kernelName:lo,backendName:"cpu",kernelFunc:qZ},XZ={kernelName:ku,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[u,p,h,d]=r.shape,[c,m]=T.getImageCenter(i,p,h),f=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let w=x*h*p*d;for(let I=0;I<p;I++){let N=I*(h*d);for(let C=0;C<h;C++){let E=C*d;for(let A=0;A<d;A++){let R=[u,I,C,A],F=R[2],S=R[1],M=(F-c)*y-(S-m)*g,B=(F-c)*g+(S-m)*y;M=Math.round(M+c),B=Math.round(B+m);let U=s;if(typeof s!="number"&&(A===3?U=f:U=s[A]),M>=0&&M<h&&B>=0&&B<p){let q=B*(h*d),K=M*d,Z=w+q+K+A;U=b[Z]}let H=w+N+E+A;l[H]=U}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZZ=rt(uo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),JZ={kernelName:uo,backendName:"cpu",kernelFunc:ZZ};function YZ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(s,a,i),d=!0,c=n.bufferSync(a),m=n.bufferSync(s),f=Fs(c,m,i,h,u,l,o,p,0,d);return n.makeTensorInfo(i,f.dtype,f.values)}var QZ={kernelName:lu,backendName:"cpu",kernelFunc:YZ};function e7(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function t7(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function n7(e,t,n,r,a,s){let i=v.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),u=o*a;for(let p=0;p<a;++p)i[u+p]=s==="left"?e7(l,t[p+u]):t7(l,t[p+u])}return i}function r7(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=n7(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var a7={kernelName:pu,backendName:"cpu",kernelFunc:r7};function s7(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ge([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=ar(a.dtype,s.dtype),h=v.makeZerosTypedArray(v.sizeFromShape(a.shape),p),d=0,c=i===0||i>1||a.shape.length===1?1:v.sizeFromShape(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<c;f++)o[m]===1?h[d++]=l[m]:h[d++]=u[m];return n.makeTensorInfo(a.shape,p,h)}var i7={kernelName:du,backendName:"cpu",kernelFunc:s7},o7=T.SELU_SCALEALPHA,l7=T.SELU_SCALE,u7=rt(ho,e=>e>=0?l7*e:o7*(Math.exp(e)-1)),p7={kernelName:ho,backendName:"cpu",kernelFunc:u7},d7=rt(fo,e=>e<0?-1:e>0?1:0),h7={kernelName:fo,backendName:"cpu",kernelFunc:d7},c7=rt(co,e=>Math.sin(e)),m7={kernelName:co,backendName:"cpu",kernelFunc:c7},f7=rt(mo,e=>Math.sinh(e)),g7={kernelName:mo,backendName:"cpu",kernelFunc:f7},y7=11920928955078125e-23,Wk=Math.log(y7)+2,b7=rt(yo,e=>{let t=e>-Wk,n=e<Wk,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),x7={kernelName:yo,backendName:"cpu",kernelFunc:b7};function w7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ge([a],"spaceToBatchND");let o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=b_.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),d=T.getReshapedPermuted(u.shape,s,o,!1),c=ft({inputs:{x:u},backend:n,attrs:{shape:p}}),m=An({inputs:{x:c},backend:n,attrs:{perm:h}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}var v7={kernelName:cu,backendName:"cpu",kernelFunc:w7};function k7(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[h,d,c,m,f]=KC(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var I7={kernelName:Jp,backendName:"cpu",kernelFunc:k7};function S7(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,h]=XC(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var N7={kernelName:fu,backendName:"cpu",kernelFunc:S7};function T7(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=I0(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}var C7={kernelName:Yp,backendName:"cpu",kernelFunc:T7};function _7(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=I0(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}var E7={kernelName:Qp,backendName:"cpu",kernelFunc:_7};function $7(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1,m=n.bufferSync(a),f;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=!!n.data.get(i.dataId).values[0];f=Fs(m,g,o,d,p,u,l,h,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Fs(m,g,o,d,p,u,l,h,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Fs(m,g,o,d,p,u,l,h,y,c);break}case"string":{let g=n.bufferSync(s),y=v.decodeString(n.data.get(i.dataId).values[0]);f=Fs(m,g,o,d,p,u,l,h,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}var A7={kernelName:gu,backendName:"cpu",kernelFunc:$7};function F7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=Qs({inputs:{x:a},backend:n,attrs:{begin:u,size:d}});return u[o]+=h,c})}var R7={kernelName:mu,backendName:"cpu",kernelFunc:F7},D7={kernelName:ed,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ge(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},M7=rt(as,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),O7={kernelName:as,backendName:"cpu",kernelFunc:M7};function L7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r;ge(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Pt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),I;if(f)I=ft({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Pt.computeOutShape(b,x,w),C=Qs({inputs:{x:a},backend:n,attrs:{begin:b,size:N}});I=ft({inputs:{x:C},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(C)}else{let N=n.bufferSync(a),C=YC(c,N,w,b);I=n.makeTensorInfo(m,C.dtype,C.values)}return I}var z7={kernelName:yu,backendName:"cpu",kernelFunc:L7};function P7(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.data.get(p.dataId).values,c=n.data.get(h.dataId).values,[m,f]=S0(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var B7={kernelName:nd,backendName:"cpu",kernelFunc:P7};function W7(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,h]=N0(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var V7={kernelName:rd,backendName:"cpu",kernelFunc:W7};function U7(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=T0(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var G7={kernelName:ad,backendName:"cpu",kernelFunc:U7},H7=rt(Io,e=>Math.tan(e)),j7={kernelName:Io,backendName:"cpu",kernelFunc:H7},q7=rt(So,e=>Math.tanh(e)),K7={kernelName:So,backendName:"cpu",kernelFunc:q7};function X7(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:p}=T.calculateShapes(s,a,r.shape),h=!1,d=n.bufferSync(a),c=n.bufferSync(s),m=n.bufferSync(r),f=Fs(d,c,r.shape,p,l,o,i,u,m,h);return n.makeTensorInfo(r.shape,f.dtype,f.values)}var Z7={kernelName:uu,backendName:"cpu",kernelFunc:X7};function J7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ge(a,"tile");let i=e_(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var Y7={kernelName:rs,backendName:"cpu",kernelFunc:J7};function Q7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ge(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=n_(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var eJ={kernelName:bu,backendName:"cpu",kernelFunc:Q7};function tJ(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[m,f]=u??[h,d],g=[p,m,f,c],y=v.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],I=v.computeStrides(g),N=I[0],C=I[1],E=I[2],A=v.getTypedArrayFromDType(a.dtype,v.sizeFromShape(g));A.fill(l);let R=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<p;++S){let M=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let B=0;B<m;++B)for(let U=0;U<f;++U)for(let H=0;H<c;++H){let q,K=M[6]*U+M[7]*B+1;if(K===0)continue;let Z=(M[0]*U+M[1]*B+M[2])/K,J=(M[3]*U+M[4]*B+M[5])/K,ee=Vk(Z,d,o),re=Vk(J,h,o);switch(i){case"nearest":q=oJ(R,h,d,b,x,w,S,re,ee,H,l);break;case"bilinear":q=lJ(R,h,d,b,x,w,S,re,ee,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*N+B*C+U*E+H;A[te]=q}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var nJ={kernelName:xu,backendName:"cpu",kernelFunc:tJ};function Vk(e,t,n){switch(n){case"reflect":return rJ(e,t);case"wrap":return aJ(e,t);case"nearest":return iJ(e,t);case"constant":default:return sJ(e,t)}}function rJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return v.clamp(0,n,t-1)}function aJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return v.clamp(0,n,t-1)}function sJ(e,t){return e}function iJ(e,t){return v.clamp(0,e,t-1)}function op(e,t,n,r,a,s,i,o,l,u,p){let h=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:p}function oJ(e,t,n,r,a,s,i,o,l,u,p){let h=Math.round(o),d=Math.round(l);return op(e,t,n,r,a,s,i,h,d,u,p)}function lJ(e,t,n,r,a,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,m=d+1,f=(m-l)*op(e,t,n,r,a,s,i,h,d,u,p)+(l-d)*op(e,t,n,r,a,s,i,h,m,u,p),g=(m-l)*op(e,t,n,r,a,s,i,c,d,u,p)+(l-d)*op(e,t,n,r,a,s,i,c,m,u,p);return(c-o)*f+(o-h)*g}function uJ(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ge(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=_0(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var pJ={kernelName:sd,backendName:"cpu",kernelFunc:uJ};function dJ(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){p[s]=c;let m=Qs({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});d[c]=ft({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return d}var hJ={kernelName:wu,backendName:"cpu",kernelFunc:dJ};function cJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ge(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],p=[],h=o-l,d=s;for(let m=0;m<h;++m){let f=hc({inputs:{input:d},backend:n,attrs:{dim:m+1}});d=f,p.push(f)}for(let m=0;m<i;++m){let f=v.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=IC({inputs:{a:g,b:d},backend:n}),b=Ja({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=Wm({inputs:{a:b,b:a},backend:n}),w=Md({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(w),p.push(g),p.push(y),p.push(b),p.push(x),p.push(w)}let c=y_({inputs:u,backend:n,attrs:{axis:0}});return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var mJ={kernelName:id,backendName:"cpu",kernelFunc:cJ},fJ=[lK,Wq,pK,hK,qq,mK,gK,bK,wK,kK,SK,TK,_K,AK,RK,OK,zK,BK,VK,iK,GK,jK,KK,Xq,ZK,Hq,Jq,YK,Vq,e8,n8,r8,s8,o8,u8,d8,c8,f8,y8,x8,v8,I8,N8,C8,_8,$8,F8,D8,M8,O8,L8,P8,V8,Q5,G8,Yq,Y8,Qq,Q8,t5,sX,iX,lX,r5,s5,pX,hX,mX,gX,o5,u5,Uq,bX,t8,wX,kX,SX,eK,d5,c5,TX,f5,_X,AX,RX,OX,zX,BX,WX,y5,UX,HX,qX,XX,JX,QX,tZ,x5,rZ,iZ,pZ,v5,I5,cZ,gZ,xZ,N5,vZ,IZ,SZ,b_,_Z,nK,_5,$Z,FZ,DZ,OZ,Gq,Ob,zZ,rK,aK,sK,BZ,VZ,GZ,jZ,KZ,XZ,JZ,L5,QZ,a7,i7,p7,P5,h7,m7,g7,B5,lZ,x7,v7,I7,N7,C7,E7,A7,R7,U5,D7,H5,q5,O7,z7,B7,V7,G7,J5,B8,j7,K7,Z7,Y7,eJ,nJ,T5,pJ,hJ,mJ,kZ];for(let e of fJ)od(e);var x_={};_e(x_,{assertNotComplex:()=>Mu,bindCanvasToFramebuffer:()=>TJ,bindColorTextureToFramebuffer:()=>zh,bindTextureToProgramUniformSampler:()=>M_,bindTextureUnit:()=>F_,bindVertexBufferToProgramAttribute:()=>zb,callAndCheck:()=>de,canBeRepresented:()=>v_,createFragmentShader:()=>S_,createFramebuffer:()=>A_,createProgram:()=>N_,createStaticIndexBuffer:()=>__,createStaticVertexBuffer:()=>C_,createTexture:()=>E_,createVertexShader:()=>I_,getBatchDim:()=>ei,getExtensionOrThrow:()=>lp,getFramebufferErrorMessage:()=>O_,getMaxTexturesInShader:()=>B_,getNumChannels:()=>SJ,getProgramUniformLocation:()=>D_,getProgramUniformLocationOrThrow:()=>R_,getRowsCols:()=>ti,getShapeAs3D:()=>pp,getTextureShapeFromLogicalShape:()=>z_,getWebGLDisjointQueryTimerVersion:()=>W_,getWebGLErrorMessage:()=>k_,getWebGLMaxTextureSize:()=>P_,hasExtension:()=>tr,isCapableOfRenderingToFloatTexture:()=>V_,isDownloadFloatTextureEnabled:()=>U_,isReshapeFree:()=>Ap,isWebGLFenceEnabled:()=>G_,isWebGLVersionEnabled:()=>Bb,linkProgram:()=>T_,logShaderSourceAndInfoLog:()=>R0,resetMaxTextureSize:()=>CJ,resetMaxTexturesInShader:()=>_J,unbindColorTextureFromFramebuffer:()=>Pb,unbindTextureUnit:()=>NJ,validateFramebuffer:()=>up,validateProgram:()=>Lh,validateTextureSize:()=>$_});var $s={},Ch={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function w_(e,t){$s[e]=t}function Er(e,t){if(!(e in $s)||t!=null){let r=yJ(e,t);if(r!==null)$s[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=$s[e];return n==null||n.isContextLost()?(delete $s[e],Er(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),$s[e])}function gJ(e){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function yJ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??gJ(e);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete $s[e]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ch.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Ch)||n.getContext("experimental-webgl",Ch):n.getContext("webgl2",Ch)}var $p;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})($p||($p={}));var er;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(er||(er={}));var tn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(tn||(tn={}));function Od(e,t){return[t,e]}function bJ(e,t){return e*t}function _h(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function Du(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function xJ(e,t){let[n,r]=Du(e,t);return n*r*4}function F0(e,t){let n=e,r,a,s,i,o,l,u,p,h,d;return G().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,p=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,p=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:p,textureTypeHalfFloat:h,textureTypeFloat:d}}function de(e,t){let n=t();return G().getBool("DEBUG")&&wJ(e),n}function wJ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+k_(e,t))}var vJ=596e-10,kJ=65504;function v_(e){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||vJ<Math.abs(e)&&Math.abs(e)<kJ)}function k_(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function lp(e,t){return wa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function I_(e,t){let n=wa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(de(e,()=>e.shaderSource(n,t)),de(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function S_(e,t){let n=wa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(de(e,()=>e.shaderSource(n,t)),de(e,()=>e.compileShader(n)),G().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw R0(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var IJ=/ERROR: [0-9]+:([0-9]+):/g;function R0(e,t){let n=IJ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((h,d)=>v.rightPad((d+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function N_(e){return wa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function T_(e,t){if(de(e,()=>e.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Lh(e,t){if(de(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function C_(e,t){let n=wa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return de(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),de(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function __(e,t){let n=wa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return de(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),de(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function SJ(){return G().getNumber("WEBGL_VERSION")===2?1:4}function E_(e){return wa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function $_(e,t){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function A_(e){return wa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function zb(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(de(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),de(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),de(e,()=>e.enableVertexAttribArray(o)),!0)}function F_(e,t,n){L_(e,n),de(e,()=>e.activeTexture(e.TEXTURE0+n)),de(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function NJ(e,t){L_(e,t),de(e,()=>e.activeTexture(e.TEXTURE0+t)),de(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function R_(e,t,n){return wa(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function D_(e,t,n){return e.getUniformLocation(t,n)}function M_(e,t,n,r){de(e,()=>F_(e,t,r)),de(e,()=>e.uniform1i(n,r))}function TJ(e){de(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),de(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),de(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function zh(e,t,n){de(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),de(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Pb(e,t){de(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),de(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function up(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+O_(e,t))}function O_(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function wa(e,t,n){let r=de(e,()=>t());if(r==null)throw new Error(n);return r}function L_(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function ei(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function ti(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function pp(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ei(e),...ti(e)]),t}function z_(e,t=!1){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,l)=>l>=e.length-2?v.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let a=v.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=ei(e),l=2,u=2;e.length&&([l,u]=ti(e)),a=o*(l/2)*(u/2),s=v.sizeToSquarishShape(a).map(p=>p*2)}else s=v.sizeToSquarishShape(a);return s}function Eh(e){return e%2===0}function Ap(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||Eh(n)&&Eh(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Eh(e[0])&&Eh(t[0])}var Ph,Bh;function P_(e){if(Ph==null){let t=Er(e);Ph=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ph}function CJ(){Ph=null}function _J(){Bh=null}function B_(e){if(Bh==null){let t=Er(e);Bh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Bh)}function W_(e){if(e===0)return 0;let t,n=Er(e);return tr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:tr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function tr(e,t){return e.getExtension(t)!=null}function Bb(e){try{if(Er(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function V_(e){if(e===0)return!1;let t=Er(e);if(e===1){if(!tr(t,"OES_texture_float"))return!1}else if(!tr(t,"EXT_color_buffer_float"))return!1;return Wb(t)}function U_(e){if(e===0)return!1;let t=Er(e);if(e===1){if(!tr(t,"OES_texture_float")||!tr(t,"WEBGL_color_buffer_float"))return!1}else{if(tr(t,"EXT_color_buffer_float"))return Wb(t);let n="EXT_color_buffer_half_float";if(tr(t,n)){let r=t.getExtension(n);return EJ(t,r)}return!1}return Wb(t)}function Wb(e){let t=F0(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function EJ(e,t){let n=F0(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}function G_(e){return e!==2?!1:Er(e).fenceSync!=null}function Mu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var ye=G();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>Bb(2)?2:Bb(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>P_(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>B_(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=ye.getNumber("WEBGL_VERSION");return e===0?0:W_(e)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!pd.isMobile());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>V_(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>U_(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>G_(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>pd.isMobile()?1:-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function wn(){let e,t,n,r,a,s,i,o,l,u;return G().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Fo(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Vm(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function $J(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function AJ(e,t,n="index"){let r=e.map((s,i)=>i),a=$J(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function D0(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function M0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var H_=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:j_}=T;function FJ(e,t,n){let r=[];if(e.forEach(d=>{let c=v.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?r.push(`uniform float ${d.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${d.name};`),r.push(`uniform int offset${d.name};`)),n.enableShapeUniforms){let{uniformShape:m}=O0(n.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${d.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${d.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(d=>{r.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(d=>RJ(d,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=wn(),l=OJ(o),u,p,h=PJ(o);return t.isPacked?(u=DJ(t.logicalShape,i,n.enableShapeUniforms),p=zJ(o)):(u=MJ(t.logicalShape,i,n.enableShapeUniforms),p=LJ(o)),n.packedInputs&&(h+=UJ),[h,l,p,a,u,s,n.userCode].join(`
`)}function Ou(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return tY(e,t);case 1:return rY(e,t);case 2:return sY(e,t);case 3:return oY(e,t);case 4:return uY(e,t);case 5:return pY(e);case 6:return dY(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function q_(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return eY(e);case 1:return nY(e,t);case 2:return aY(e,t);case 3:return iY(e,t);default:return lY(e,t)}}function RJ(e,t,n=!1,r){let a="";n?a+=q_(e,r):a+=Ou(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=hY(e,t):a+=cY(e,t)),a}function DJ(e,t,n){switch(e.length){case 0:return K_();case 1:return GJ(e,t,n);case 2:return YJ(e,t,n);case 3:return jJ(e,t,n);default:return KJ(e,t,n)}}function MJ(e,t,n){switch(e.length){case 0:return K_();case 1:return HJ(e,t,n);case 2:return QJ(e,t,n);case 3:return qJ(e,t,n);case 4:return XJ(e,t,n);case 5:return ZJ(e,t);case 6:return JJ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function OJ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function LJ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function zJ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function PJ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${BJ}
    ${WJ}
    ${VJ}
  `}var BJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,WJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,VJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function K_(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function GJ(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function HJ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function jJ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function qJ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Vm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Fo(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function KJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function XJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Vm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Fo(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function ZJ(e,t){let n=Fo(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function JJ(e,t){let n=Fo(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function YJ(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function QJ(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Ro(e){return`offset${e}`}function eY(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=wn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function tY(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Ro(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function nY(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=wn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function rY(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Lu(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Ro(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function aY(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=wn();if(s!=null&&v.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function sY(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let d=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(n),l=i;if(l.length<n.length){let d=zu(e,l),c=["row","col"];return`
      ${Ou(d,t)}
      float ${a}(int row, int col) {
        return ${a}(${Pu(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Lu(e)}
      }
    `;let u=s[0],p=s[1],h=Ro(r);return p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${p}, index);
    return sampleTexture(${r}, uv);
  }
`}function iY(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let d=n.slice(1),c=[1,2],m=zu(e,d),f=["b","row","col"];return`
        ${q_(m,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Pu(f,c)});
        }
      `}let o=wn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2),h=p*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${p}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function oY(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=v.squeezeShape(n),u=o;if(u.length<n.length){let f=zu(e,u),g=["row","col","depth"];return`
        ${Ou(f,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Pu(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Lu(e)}
      }
    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;let m=Ro(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function lY(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=wn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let f=2;f<i-1;f++)c=`int b${f}, `+c,d*=s[i-f-1],m=`b${f} * ${d} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}function uY(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(n);if(l.length<n.length){let b=zu(e,l),x=["row","col","depth","depth2"];return`
      ${Ou(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Pu(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${Lu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&p==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${m}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&p==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Ro(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${f}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function pY(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let f=zu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Ou(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Pu(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${Lu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];if(c===o&&p==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&p==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Ro(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function dY(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=v.squeezeShape(t);if(a.length<t.length){let g=zu(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ou(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Pu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Lu(e)}
      }
    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],m=d[1];if(m===p&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Ro(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Lu(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function hY(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=j_(e.shapeInfo.logicalShape,t.logicalShape),l=ut(i),u=i-s,p,h=["x","y","z","w","u","v"];s===0?p="":i<2&&o.length>=1?p="coords = 0;":p=o.map(g=>`coords.${h[g+u]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+u]}`).join(", ");let c="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,f=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${r}(${d});
      ${c}
    }
  `}function cY(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=ut(l),p=j_(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,d,c=["x","y","z","w","u","v"];o===0?d="":l<2&&p.length>=1?d="coords = 0;":d=p.map(f=>`coords.${c[f+h]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${r}(${m});
    }
  `}function ut(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function O0(e,t,n){let{newShape:r,keptDims:a}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!v.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function zu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Pu(e,t){return t.map(n=>e[n]).join(", ")}function mY(e,t,n,r){let a=n.map((p,h)=>{let d={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(d.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),s=a.map(p=>p.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=FJ(a,i,t),l=S_(e.gl,o),u=e.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},X_(e,t,u)))}function X_(e,t,n){let r=[],a=[],s,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let h of t.variableNames){let d={name:h,uniform:e.getUniformLocation(n,h,p),offset:e.getUniformLocation(n,`offset${h}`,p)};t.enableShapeUniforms&&(d.shape=e.getUniformLocation(n,`${h}Shape`,p),d.texShape=e.getUniformLocation(n,`${h}TexShape`,p)),r.push(d)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",p),o=e.getUniformLocation(n,"outShapeStrides",p),i=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms)for(let h of t.customUniforms)a.push(e.getUniformLocation(n,h.name,p));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function Uk(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!v.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function fY(e,t,n,r,a){t.program.enableShapeUniforms||(Uk(t.inShapeInfos,n),Uk([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let u=n[l],{uniform:p,offset:h,shape:d,texShape:c}=t.variablesLocations[l];if(d){let{uniformShape:m}=O0(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(d,new Int32Array(m));break;case 2:e.gl.uniform2iv(d,new Int32Array(m));break;case 3:e.gl.uniform3iv(d,new Int32Array(m));break;case 4:e.gl.uniform4iv(d,new Int32Array(m));break;default:break}}if(c&&e.gl.uniform2i(c,u.texData.texShape[0],u.texData.texShape[1]),p!=null){if(u.isUniform){if(v.sizeFromShape(u.shape)<2)e.gl.uniform1f(p,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}continue}u.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,p,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],p=t.customUniformLocations[l],h=a[l];if(u.type==="float")e.gl.uniform1fv(p,h);else if(u.type==="vec2")e.gl.uniform2fv(p,h);else if(u.type==="vec3")e.gl.uniform3fv(p,h);else if(u.type==="vec4")e.gl.uniform4fv(p,h);else if(u.type==="int")e.gl.uniform1iv(p,h);else if(u.type==="ivec2")e.gl.uniform2iv(p,h);else if(u.type==="ivec3")e.gl.uniform3iv(p,h);else if(u.type==="ivec4")e.gl.uniform4iv(p,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}e.executeProgram()}function gY(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:p,keptDims:h}=O0(e.packedInputs,i.shape,l),d="",c="",m="";if(p.length===1&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(p.length===2&&!e.packedInputs)c=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!e.packedInputs){let I=v.computeStrides(p);m=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let f=i.shape.length,g=p.length===2&&v.arraysEqual(i.shape,l),y=v.sizeFromShape(i.shape)===1,b=T.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&v.arraysEqual(l,n.texData.texShape),w=e.packedInputs||p.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${f}_${x}_${u?h:""}_${p.length}_${y}_${b}_${g}_${d}_${c}_${m}_${w}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${G().getNumber("WEBGL_VERSION")}`,s}function un(e){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var yY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Vm(["r","c","d"],e):Fo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},bY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Vm(["r","c","d"],e):Fo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},xY=class{constructor(e){this.variableNames=["A"],this.outTexUsage=er.DOWNLOAD;let t=wn();this.outputShape=e,this.userCode=`
      ${H_}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},wY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=er.DOWNLOAD;let t=wn();this.outputShape=e,this.userCode=`
      ${H_}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},vY={R:0,G:1,B:2,A:3},Gk=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=wn();this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${vY[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?M0():D0(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},kY=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wn();this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?M0():D0(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},Z_={};_e(Z_,{bindVertexProgramAttributeStreams:()=>sE,createBufferFromOutputTexture:()=>lE,createFloat16MatrixTexture:()=>tE,createFloat16PackedMatrixTexture:()=>aE,createFloat32MatrixTexture:()=>eE,createIndexBuffer:()=>Q_,createPackedMatrixTexture:()=>rE,createUnsignedBytesMatrixTexture:()=>nE,createVertexBuffer:()=>Y_,createVertexShader:()=>J_,downloadByteEncodedFloatMatrixFromOutputTexture:()=>pE,downloadFloat32MatrixFromBuffer:()=>uE,downloadMatrixFromPackedOutputTexture:()=>hE,downloadPackedMatrixFromBuffer:()=>dE,getInternalFormatForFloat16MatrixTexture:()=>z0,getInternalFormatForFloat16PackedMatrixTexture:()=>W0,getInternalFormatForFloat32MatrixTexture:()=>L0,getInternalFormatForPackedMatrixTexture:()=>B0,getInternalFormatForUnsignedBytesMatrixTexture:()=>P0,uploadDenseMatrixToTexture:()=>iE,uploadPixelDataToTexture:()=>oE});function J_(e){let t=wn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return I_(e,n)}function Y_(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return C_(e,t)}function Q_(e){let t=new Uint16Array([0,1,2,2,1,3]);return __(e,t)}function Ld(e,t,n,r,a,s){$_(t,n);let i=E_(e),o=e.TEXTURE_2D;return de(e,()=>e.bindTexture(o,i)),de(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),de(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),de(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),de(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),G().getNumber("WEBGL_VERSION")===1?de(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):de(e,()=>e.texStorage2D(o,1,r,t,n)),de(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function L0(e){return e.internalFormatFloat}function eE(e,t,n,r){let[a,s]=Od(t,n);return Ld(e,a,s,L0(r),r.textureFormatFloat,e.FLOAT)}function z0(e){return e.internalFormatHalfFloat}function tE(e,t,n,r){let[a,s]=Od(t,n);return Ld(e,a,s,z0(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function P0(e){return e.downloadTextureFormat}function nE(e,t,n,r){let[a,s]=Od(t,n);return Ld(e,a,s,P0(r),e.RGBA,e.UNSIGNED_BYTE)}function B0(e){return e.internalFormatPackedFloat}function rE(e,t,n,r){let[a,s]=Du(t,n);return Ld(e,a,s,B0(r),e.RGBA,e.FLOAT)}function W0(e){return e.internalFormatPackedHalfFloat}function aE(e,t,n,r){let[a,s]=Du(t,n);return Ld(e,a,s,W0(r),e.RGBA,r.textureTypeHalfFloat)}function sE(e,t,n){return de(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),zb(e,t,"clipSpacePos",n,3,20,0)&&zb(e,t,"uv",n,2,20,12)}function iE(e,t,n,r,a,s){de(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),G().getNumber("WEBGL_VERSION")===2?de(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):de(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),de(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function oE(e,t,n){de(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?de(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):de(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):G().getNumber("WEBGL_VERSION")===2?de(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):de(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),de(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function lE(e,t,n,r){let a=e.createBuffer();de(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return de(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),de(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),de(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function uE(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function pE(e,t,n,r){let[a,s]=Od(t,n),i=4,o=new Uint8Array(bJ(t*n,i));return de(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function dE(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(xJ(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function hE(e,t,n){let r=new Float32Array(t*n*4);return de(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var Wh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=G().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,w_(t,e)):this.gl=Er(t),e=this.gl,G().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>de(a,()=>a.createVertexArray()),this.bindVertexArray=s=>de(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>de(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>de(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>de(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>de(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>de(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>de(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=lp(this.gl,a),tr(this.gl,s))this.textureHalfFloatExtension=lp(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tr(this.gl,r))this.colorBufferHalfFloatExtension=lp(this.gl,r);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(tr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Y_(this.gl),this.indexBuffer=Q_(this.gl),this.framebuffer=A_(this.gl),this.textureConfig=F0(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;de(e,()=>e.finish()),de(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),de(e,()=>e.deleteFramebuffer(this.framebuffer)),de(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),de(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),de(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),eE(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),tE(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),nE(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),oE(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),iE(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),aE(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),rE(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Pb(this.gl,this.framebuffer),this.outputTexture=null),de(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>pE(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return dE(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uE(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=lE(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>hE(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=J_(t));let n=N_(t);de(t,()=>t.attachShader(n,this.vertexShader)),de(t,()=>t.attachShader(n,e)),T_(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Lh(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;de(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),sE(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(de(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Lh(this.gl,this.program),de(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?R_(this.gl,e,t):D_(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),de(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),M_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Du(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Lh(this.gl,this.program),up(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}de(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),de(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=lp(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=IY(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in G().platform&&(n=G().platform.setTimeoutCustom.bind(G().platform)),v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zh(this.gl,e,this.framebuffer),this.debug&&up(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(zh(this.gl,this.outputTexture,this.framebuffer),this.debug&&up(this.gl)):Pb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;zh(r,e,this.framebuffer),this.debug&&up(r),this.outputTexture=e,de(r,()=>r.viewport(0,0,t,n)),de(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),de(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function IY(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:SY,bincountImpl:cE,bincountReduceImpl:NY,bitwiseAndImpl:TY,castImpl:CY,ceilImpl:_Y,concatImpl:EY,equalImpl:$Y,expImpl:AY,expm1Impl:FY,floorImpl:RY,gatherNdImpl:DY,gatherV2Impl:MY,greaterImpl:OY,greaterEqualImpl:LY,lessImpl:zY,lessEqualImpl:PY,linSpaceImpl:BY,logImpl:WY,maxImpl:VY,maximumImpl:UY,minimumImpl:GY,multiplyImpl:HY,negImpl:jY,notEqualImpl:qY,prodImpl:KY,raggedGatherImpl:XY,raggedRangeImpl:ZY,raggedTensorToTensorImpl:JY,rangeImpl:YY,rsqrtImpl:QY,scatterImpl:e9,sigmoidImpl:t9,simpleAbsImpl:mE,sliceImpl:n9,sparseFillEmptyRowsImpl:r9,sparseReshapeImpl:a9,sparseSegmentReductionImpl:fE,sqrtImpl:s9,staticRegexReplaceImpl:i9,stridedSliceImpl:o9,stringNGramsImpl:l9,stringSplitImpl:u9,stringToHashBucketFastImpl:p9,subImpl:d9,tileImpl:h9,topKImpl:c9,transposeImpl:V0,uniqueImpl:m9}=g0;function gE(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function hn(e,t){return t===1?[e]:gE(e,t)}function f9(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var g9=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=un(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=hn("rc",this.rank),n=ut(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},yE=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${y9(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?M0():D0(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function y9(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?AJ(["r","c","d"],"inputShape"):Fo(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var b9=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=jk(t,n),a=qk(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Hk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return r===tn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===tn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===tn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===tn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===tn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=jk(n,r),s=qk(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Hk(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function x9(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Hk(e,t,n,r,a){let s=w9(t,r),i;if(a){let[l,u]=Du(e[0],e[1]);i=l*u}else{let[l,u]=Od(e[0],e[1]);i=l*u}let o=x9(n,s);return i*o}function w9(e,t){switch(e){case tn.PACKED_2X2_FLOAT32:return B0(t);case tn.PACKED_2X2_FLOAT16:return W0(t);case tn.UNPACKED_FLOAT32:return L0(t);case tn.UNPACKED_FLOAT16:return z0(t);case tn.PACKED_4X1_UNSIGNED_BYTE:return P0(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function v9(e){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?tn.PACKED_2X2_FLOAT32:tn.UNPACKED_FLOAT32:e?tn.PACKED_2X2_FLOAT16:tn.UNPACKED_FLOAT16}function jk(e,t){if(e===er.UPLOAD)return tn.PACKED_2X2_FLOAT32;if(e===er.RENDER||e==null)return v9(t);if(e===er.DOWNLOAD||e===er.PIXELS)return tn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function qk(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Wr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},br="if (isnan(x)) return x;",k9="return x;",Kk="return abs(x);",I9="return (x >= 0.0) ? x : (exp(x) - 1.0);",S9=br+`
  return (x < 0.0) ? 0.0 : x;
`,N9=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Aa="return x;",T9="return 1.0 / (1.0 + exp(-1.0 * x));",C9="return x;",_9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,E9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$9=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,A9="return 1.0 / (1.0 + exp(-1.0 * x));",Oa=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},F9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length);let t=e.length,n=hn("rc",t),r=ut(t),a=f9(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},R9=Jr.whereImpl,D9=1e-7,M9=1e-4,Uy={};function O9(e){return e in Uy||(Uy[e]={}),Uy[e]}var L9=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),z9=600;function P9(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*z9/1024/1024}var U0=class bE extends zp{nextDataId(){return bE.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(t!=null){if(t instanceof Wh)n=t;else{let r=Er(G().getNumber("WEBGL_VERSION"),t);n=new Wh(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let r=Er(G().getNumber("WEBGL_VERSION"));n=new Wh(r),this.binaryCache=O9(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new b9(this.gpgpu),this.numMBBeforeWarning=P9(),this.texData=new vc(this,dr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,n,r,a,s,i){let o=this.makeTensorInfo(n,r),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[a,s]},l.texShape=[a,s];let u=pp(n),p=new Gk(u,!1,i),h=this.runWebGLProgram(p,[o],r,[[a,s]]);return h.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(t,n,r){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:n,dtype:r,values:t,usage:er.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--}}move(t,n,r,a,s){if(G().getBool("DEBUG")&&this.checkNumericalProblems(n),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:a,values:n,usage:er.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let n=this.texData.get(t),{values:r,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:l}=n;if(i!=null){let d;l?d=new Oa(o,Aa):d=new Wr(o,Aa);let c=this.runWebGLProgram(d,[{dataId:t,shape:o,dtype:a}],a),m=this.readSync(c.dataId);return this.disposeIntermediateTensorInfo(c),m}if(r!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return r;let u=this.activeTimers!=null,p;u&&(p=v.now());let h;if(a==="complex64"){let d=this.readSync(s.real.dataId),c=this.readSync(s.imag.dataId);h=T.mergeRealAndImagArrays(d,c)}else h=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=v.now()-p),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){let m=this.pendingRead.get(t);return new Promise(f=>m.push(f))}let n=this.texData.get(t),{values:r,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=n;if(s!=null){let m;l?m=new Oa(a,Aa):m=new Wr(a,Aa);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:i}],i),g=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(r!=null)return this.convertAndCacheOnCPU(t);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,p;if(i!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(t);let m=this.texData.get(p.dataId);u=this.gpgpu.createBufferFromTexture(m.texture.texture,..._h(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){let m=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=m[0],g=m[1];h=T.mergeRealAndImagArrays(f,g)}else if(u==null)h=this.getValuesFromTexture(t);else{let m=v.sizeFromShape(a);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,m)}if(p!=null&&this.disposeIntermediateTensorInfo(p),u!=null){let m=this.gpgpu.gl;de(m,()=>m.deleteBuffer(u))}let d=this.convertAndCacheOnCPU(t,h),c=this.pendingRead.get(t);return this.pendingRead.delete(t),c.forEach(m=>m(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&dr().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,n={}){let r=this.texData.get(t),{values:a,shape:s,slice:i,dtype:o,isPacked:l,texture:u}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let c;l?c=new Oa(s,Aa):c=new Wr(s,Aa);let m=this.runWebGLProgram(c,[{dataId:t,shape:s,dtype:o}],o),f=this.readToGPU(m,n);return this.disposeIntermediateTensorInfo(m),f}if(u==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(t,n.customTexShape),h=dr().makeTensorFromTensorInfo(p),d=this.texData.get(p.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>v.decodeString(a));return Me(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(t.shape,t.dtype,n)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){let r=t[n];if(!v_(r))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:n,dtype:r,isPacked:a}=this.texData.get(t),s=v.sizeFromShape(n);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(t),c=this.texData.get(d.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(c.texture.texture,..._h(n)).subarray(0,s);return this.disposeIntermediateTensorInfo(d),m}let i=G().getBool("WEBGL_PACK")&&a===!0,o=i?pp(n):n,l=i?new wY(o):new xY(o),u=this.runWebGLProgram(l,[{shape:o,dtype:r,dataId:t}],"float32"),p=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let n=this.activeTimers,r=[],a=!1;this.programTimersStack==null?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,t();let s=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,a&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);o.kernelMs=v.sum(l),o.getExtraProfileInfo=()=>l.map((u,p)=>({name:i[p],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(t){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=v.now(),t)}async getQueryTime(t){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:r}=this.texData.get(t);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:n,dtype:r,texShape:a,usage:s,isPacked:i,slice:o}=this.texData.get(t),l=o&&o.origDataId||t,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,s,i)));let p=this.texData.get(t);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=L9){return G().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>this.texData.get(r.dataId).texture==null&&v.sizeFromShape(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=t.dataSync();return R9(t.shape,n)}packedUnaryOp(t,n,r){let a=new Oa(t.shape,n),s=this.compileAndRun(a,[t],r);return dr().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let a=mE(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Kk,t.dtype);let n=new Wr(t.shape,Kk),r=this.compileAndRun(n,[t]);return dr().makeTensorFromTensorInfo(r)}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&v.isString(r[0])){let s=r.map(i=>v.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:n}}makeOutput(t,n,r){return dr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,r),this)}unpackTensor(t){let n=new F9(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){let n=new g9(t.shape);return this.runWebGLProgram(n,[t],t.dtype,null,!0)}packedReshape(t,n){let r=[ei(t.shape),...ti(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[ei(n),...ti(n)],i=new yE(s,r),o=!0,l=[r],u=this.runWebGLProgram(i,[a],t.dtype,l,o);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(t,n){let r=this.texData.get(t),{isPacked:a,shape:s,dtype:i}=r;if(n!=null){let d=v.sizeFromShape(s),c=n[0]*n[1]*4;v.assert(d<=c,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=pp(s),l;a?l=new bY(o):l=new yY(o);let u=!0,p=[n??_h(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:t}],i,p,u,n);return{dtype:i,shape:s,dataId:h.dataId}}runWebGLProgram(t,n,r,a,s=!1,i){let o=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(o.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===$p.DENSE){let y=i??_h(t.outputShape);l.texShape=y.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),v.sizeFromShape(o.shape)===0)return l.values=v.getTypedArrayFromDType(o.dtype,0),o;let u=[],p=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&v.sizeFromShape(y.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!Ap(b.shape,y.shape)){let x=y,w=y.shape;y.shape=b.shape,y=this.packedReshape(y,w),u.push(y),b=this.texData.get(y.dataId),x.shape=w}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);let h={shape:o.shape,texData:l,isUniform:!1},d=gY(t,p,h),c=this.getAndSaveBinary(d,()=>mY(this.gpgpu,t,p,h)),m=this.activeTimers!=null,f;m&&(f=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||fY(this.gpgpu,c,p,h,a),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),m&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));let g=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=v.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(t,n,r,a,s=!1){return r=r||n[0].dtype,this.runWebGLProgram(t,n,r,a,s)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=G().getBool("DEBUG");G().set("DEBUG",!1);let n=this.abs(we(1e-8)).dataSync()[0];if(G().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?D9:M9}uploadToGPU(t){let n=this.texData.get(t),{shape:r,dtype:a,values:s,texture:i,usage:o,isPacked:l}=n;if(i!=null)return;let u=this.activeTimers!=null,p;u&&(p=v.now());let h=n.texShape;if(h==null&&(h=z_(r,l),n.texShape=h),s!=null){let d=pp(r),c,m=h[1],f=h[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!g)&&([m,f]=Du(h[0],h[1])),l?c=new kY(d,g):c=new Gk(d,g);let y=g?[f,m]:h,b=this.makeTensorInfo(y,a),x=this.texData.get(b.dataId);g?x.usage=er.PIXELS:x.usage=er.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,f,s);let w=[[f,m]],I=this.runWebGLProgram(c,[b],a,w,!0),N=this.texData.get(I.dataId);n.texShape=N.texShape,n.isPacked=N.isPacked,n.usage=N.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(n.texture=N.texture,n.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=v.now()-p)}else{let d=this.acquireTexture(h,o,a,l);n.texture=d}}convertAndCacheOnCPU(t,n){let r=this.texData.get(t),{dtype:a}=r;return n!=null&&(r.values=B9(n,a)),r.values}acquireTexture(t,n,r,a){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,a)}computeBytes(t,n){return t[0]*t[1]*v.bytesPerElement(n)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(n));return Promise.all(t)}else{for(let[,n]of Object.entries(this.binaryCache)){let r=new Promise(a=>{try{this.checkCompletion_(n),a(!0)}catch(s){throw s}});t.push(r)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Fw(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(R0(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:n,customUniformLocations:r,infLoc:a,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:l}=X_(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=n,t.customUniformLocations=r,t.infLoc=a,t.nanLoc=s,t.outShapeLocation=i,t.outShapeStridesLocation=o,t.outTexShapeLocation=l}}createTensorFromGPUData(t,n,r){t.channels=t.channels||"RGBA";let{texture:a,height:s,width:i,channels:o}=t,l=dr().backend;if(!l.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=l.writeTexture(a,n,r,s,i,o);return dr().makeTensorFromDataId(u,n,r,l)}};U0.nextDataId=0;function B9(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var W9="4.16.0";function xE(){G().set("WEBGL_FORCE_F16_TEXTURES",!0)}pd.isBrowser()&&Pc("webgl",()=>new U0,2);var V9={forceHalfFloat:xE},G0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ni=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Do=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Bu=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=un(a);let s="";if(r)if(a===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ut(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=hn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function jn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var U9={kernelName:Mi,backendName:"webgl",kernelFunc:jn};function ds(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=jn({inputs:{x:r},backend:n}),l=jn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var G9={kernelName:Sc,backendName:"webgl",kernelFunc:ds},wE="return (a < 0.) ? b * a : a;",vE=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function H9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bu(vE,a.shape,i.shape):new ni(wE,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var j9={kernelName:Pi,backendName:"webgl",kernelFunc:H9},kE="return (a < 0.) ? b * a : a;",IE=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function q9(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bu(IE,r.shape,a.shape):new ni(kE,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var K9={kernelName:to,backendName:"webgl",kernelFunc:q9},Wu="if (isnan(x)) return x;";function qe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let h=o.texData.get(i.dataId),d=n(h.values,l);return o.makeTensorInfo(i.shape,l,d)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,p;return u?p=new Oa(i.shape,t):p=new Wr(i.shape,e),o.runWebGLProgram(p,[i],l)}}function an({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(r&&l.dtype==="complex64"){let m=p.texData.get(l.dataId),f=p.texData.get(u.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[w,I]=x,N={dataId:w.dataId,dtype:w.dtype,shape:l.shape},C={dataId:I.dataId,dtype:I.dtype,shape:u.shape},E=new ni(e,l.shape,u.shape);return p.runWebGLProgram(E,[N,C],ar(w.dtype,I.dtype))}),b=ds({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),b}let h=s||ar(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||p.shouldExecuteOnCPU([l,u]))&&a!=null){let m=p.texData.get(l.dataId).values,f=p.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(m):m,y=l.dtype==="string"?T.fromUint8ToStringArray(f):f,[b,x]=a(l.shape,u.shape,g,y,h),w=p.makeTensorInfo(x,h),I=p.texData.get(w.dataId);return I.values=b,w}let d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return d?c=new Bu(t,l.shape,u.shape,n):c=new ni(e,l.shape,u.shape),p.runWebGLProgram(c,[l,u],h)}}function Fp(e,t=!1){if(e==="linear")return t?C9:k9;if(e==="relu")return t?E9:S9;if(e==="elu")return t?_9:I9;if(e==="relu6")return t?$9:N9;if(e==="prelu")return t?IE:kE;if(e==="leakyrelu")return t?vE:wE;if(e==="sigmoid")return t?A9:T9;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var SE=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=un(this.outputShape.length);let u=r?e[1]:e[2],p=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${m[0]});
          result += (${c[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Xk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Zk=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Jk="return a * b;";function H0(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=T.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),u=new Zk(Xk.REAL,r.shape,a.shape),p=new Zk(Xk.IMAG,r.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(p,h,"float32"),m=ds({inputs:{real:d,imag:c},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),m}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[u,p]=HY(r.shape,a.shape,o.values,l.values,s),h=n.makeTensorInfo(p,s),d=n.texData.get(h.dataId);return d.values=u,h}let i;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Bu(Jk,r.shape,a.shape):i=new ni(Jk,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var X9={kernelName:Ji,backendName:"webgl",kernelFunc:H0};function Z9(e,t,n){let r=[ei(e.shape),...ti(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ei(t),...ti(t)],i=new yE(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function pe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=v.sizeFromShape(a.shape),l=v.inferFromImplicitShape(s,o),u=v.sizeFromShape(l);v.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(a.dataId);return p.isPacked&&!Ap(a.shape,l)&&!(p.texture!==null&&Ap(p.shape,l))?Z9(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var J9={kernelName:su,backendName:"webgl",kernelFunc:pe},Yk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let p=1/t;l=`sumValue += dot(values * ${v.isInt(p)?p.toPrecision(2):p}, ones);`}let u="";a%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Y9=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,p=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${p===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${p===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Q9(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Mo(e,t,n,r){let a=Q9(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:u}=a[i],p,h;n==="mean"?p=i===0?new Yk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Yk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):p=new Y9({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(p,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var eQ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=ut(this.rank),a=tQ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function tQ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var nQ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ut(this.rank),a=gE("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Um(e,t,n){let r=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nQ(e.shape,t):new eQ(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function rQ(e,t,n,r){let a=t,s=e.shape.length,i=v.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,p=e;u&&(p=Um(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=T.computeOutAndReduceShapes(p.shape,o),c=h;n&&(c=T.expandShapeToKeepDim(h,i));let m=v.sizeFromShape(d),f=v.sizeFromShape(e.shape)/m,g=pe({inputs:{x:p},attrs:{shape:[f,m]},backend:r}),y=zc(e.dtype),b=Mo(g,y,"sum",r),x=pe({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(p),x}function Gm(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return rQ(a,s,i,n)}var aQ={kernelName:xo,backendName:"webgl",kernelFunc:Gm};function fn(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let p=0;p<l.length;p++)l[p]=a.shape[s[p]];let u;if(i.shouldExecuteOnCPU([a])){let p=i.texData.get(a.dataId).values,h=V0(p,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype);let d=i.texData.get(u.dataId);d.values=h}else u=Um(a,s,i);return u}var sQ={kernelName:oa,backendName:"webgl",kernelFunc:fn},NE=1e3;function mc({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[p-2]:t.shape[p-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(f),b=v.sizeFromShape(g),x=Iu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w=n?[y,h,c]:[y,c,h],I=r?[b,m,d]:[b,d,m],N=pe({inputs:{x:e},backend:a,attrs:{shape:w}}),C=pe({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[N,C],A=Math.max(y,b),R=n?N.shape[1]:N.shape[2],F=s!=null,S=i!=null,M=l==="leakyrelu",B=l!=null?Fp(l,!0):null,U=F||S||M||B!=null,H;if((c===1||m===1)&&R>NE&&U===!1){let K=N,Z=C;n&&(K=fn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),E.push(K)),r&&(Z=fn({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),E.push(Z));let J=m!==1,ee=m===1,re=K;J&&(re=pe({inputs:{x:K},backend:a,attrs:{shape:[A,R,1]}}),E.push(re));let te=m===1?2:1,ae=Z;ee&&(ae=pe({inputs:{x:Z},backend:a,attrs:{shape:[A,1,R]}}),E.push(ae));let se=H0({inputs:{a:re,b:ae},backend:a});H=Gm({inputs:{x:se},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(se)}else{let K=ar(e.dtype,t.dtype),Z=new SE(w,I,[A,c,m],n,r,F,B,S,M),J=[N,C];if(s!=null&&J.push(s),S&&J.push(i),M){let ee=a.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));J.push(ee),E.push(ee)}H=a.runWebGLProgram(Z,J,K)}let q=pe({inputs:{x:H},backend:a,attrs:{shape:x}});E.push(H);for(let K of E)a.disposeIntermediateTensorInfo(K);return q}function iQ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r;return mc({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}var oQ={kernelName:zs,backendName:"webgl",kernelFunc:iQ},Qk="return abs(x);";function lQ(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=mE(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Oa(r.shape,Qk):a=new Wr(r.shape,Qk),n.runWebGLProgram(a,[r],r.dtype)}var uQ={kernelName:vl,backendName:"webgl",kernelFunc:lQ},pQ=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,dQ=qe({opSnippet:pQ}),hQ={kernelName:ii,backendName:"webgl",kernelFunc:dQ},cQ=br+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,mQ=qe({opSnippet:cQ}),fQ={kernelName:oi,backendName:"webgl",kernelFunc:mQ},eI="return a + b;",gQ=an({opSnippet:eI,packedOpSnippet:eI,supportsComplex:!0,cpuKernelImpl:SY}),yQ={kernelName:ts,backendName:"webgl",kernelFunc:gQ},bQ=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},xQ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function Vh(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return jn({inputs:{x:r[0]},backend:n});if(r.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=Vh({inputs:r.slice(0,o),backend:n}),u=Vh({inputs:r.slice(o),backend:n});return Vh({inputs:[l,u],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>ar(o,l)),s=r.map(o=>o.shape),i=G().getBool("WEBGL_PACK")?new xQ(r[0].shape,s):new bQ(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var wQ={kernelName:li,backendName:"webgl",kernelFunc:Vh};function vQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=fn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),m=v.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Mo(f,f.dtype,"all",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),p!=null&&n.disposeIntermediateTensorInfo(h),y}var kQ={kernelName:kl,backendName:"webgl",kernelFunc:vQ};function IQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=fn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),m=v.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Mo(f,f.dtype,"any",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),p!=null&&n.disposeIntermediateTensorInfo(h),y}var SQ={kernelName:Il,backendName:"webgl",kernelFunc:IQ},NQ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},TQ=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=ut(o),u=hn("coords",o),p,h;if(s===1){h=o+1;let C=ut(h);p=`
        ${C} sourceLocR = ${C}(${u.join()}, 0);
        ++${u[o-1]};
        ${C} sourceLocG = ${C}(${u.join()}, 0);
        ++${u[o-2]};
        ${C} sourceLocA = ${C}(${u.join()}, 0);
        --${u[o-1]};
        ${C} sourceLocB = ${C}(${u.join()}, 0);
        --${u[o-2]};`}else h=o,p=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),c="."+d[h-1],m=d.map(C=>"int "+C),f=hn("sourceLocR",h-1).concat("inIdx.r"),g=hn("sourceLocG",h-1).concat("inIdx.g"),y=hn("sourceLocB",h-1).concat("inIdx.b"),b=hn("sourceLocA",h-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function TE(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new NQ(o,n,r==null),u=[t];r!=null&&u.push(r);let p=e.runWebGLProgram(l,u,"int32");if(p.shape[1]===1)return p;let h=TE(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function CE(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new TQ(a,i,n,r==null),l=r==null?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let p=CE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),p}return u}function _E(e,t,n,r){let a=[n];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,p]=T.computeOutAndReduceShapes(l.shape,a),h=v.sizeFromShape(p),d=pe({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(d);let c=TE(e,d,r);s.push(c);let m=pe({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}return CE(e,t,r)}function CQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=fn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=_E(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),p}var _Q={kernelName:Sl,backendName:"webgl",kernelFunc:CQ};function EQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=fn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=_E(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),p}var $Q={kernelName:Nl,backendName:"webgl",kernelFunc:EQ},AQ=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,FQ=qe({opSnippet:AQ}),RQ={kernelName:ui,backendName:"webgl",kernelFunc:FQ},DQ=br+"return log(x + sqrt(x * x + 1.0));",MQ=qe({opSnippet:DQ}),OQ={kernelName:pi,backendName:"webgl",kernelFunc:MQ},LQ=br+`
  return atan(x);
`,zQ=qe({opSnippet:LQ}),PQ={kernelName:di,backendName:"webgl",kernelFunc:zQ},BQ=G0+`
  return atan(a, b);
`,WQ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Do+`
  return result;
`,VQ=an({opSnippet:BQ,packedOpSnippet:WQ}),UQ={kernelName:ci,backendName:"webgl",kernelFunc:VQ},GQ=br+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,HQ=qe({opSnippet:GQ}),jQ={kernelName:hi,backendName:"webgl",kernelFunc:HQ},Rp=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let w=Math.floor(s/4)*4,I=s%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${w};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${x});
      }
    `}},j0=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let N=Math.floor(s/4)*4,C=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function qQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Mu(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l);if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))return jn({inputs:{x:a},backend:n});let h=new Rp(p,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var KQ={kernelName:mi,backendName:"webgl",kernelFunc:qQ};function XQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,p,o,l,u),d=new j0(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var ZQ={kernelName:Tl,backendName:"webgl",kernelFunc:XQ},JQ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},YQ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=p-1-e.padInfo.front,m=h-1-e.padInfo.top,f=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function QQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,u,p),c=new YQ(d);return n.runWebGLProgram(c,[a],i.dtype)}var eee={kernelName:Wp,backendName:"webgl",kernelFunc:QQ};function tee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Mu([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=T.computePool2DInfo(i.shape,o,l,1,u),h=new JQ(p);return n.runWebGLProgram(h,[a],i.dtype)}var nee={kernelName:Bp,backendName:"webgl",kernelFunc:tee};function ree(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return mc({a,b:s,transposeA:i,transposeB:o,backend:n})}var aee={kernelName:fi,backendName:"webgl",kernelFunc:ree},see=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},iee=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},oee=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;v.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[r,a,s],p=null;i!=null&&(p=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));let d=G().getBool("WEBGL_PACK_NORMALIZATION")?new iee(r.shape,a.shape,s.shape,p,h,l):new see(r.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)},lee={kernelName:Ri,backendName:"webgl",kernelFunc:oee},uee=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ut(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=pee(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Vb[i]} = start[${i}] + coords.${Vb[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Vb=["x","y","z","w","u","v"];function pee(e){if(e===1)return"sourceLoc";if(e<=6)return Vb.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var dee=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ut(this.rank),n=hn("coords",this.rank),r=hn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,p)=>`start[${p}]`).join()});`:e.map((u,p)=>`${r[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function hee(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Pt.computeFlatOffset(t,v.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function Vu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Pt.parseSliceParams(a,s,i);if(Pt.assertParamsValid(a,o,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=n.texData.get(a.dataId),d=n9(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}let{isPacked:u}=n.texData.get(a.dataId),p=Pt.isSliceContinous(a.shape,o,l);if(u||!p){let h=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dee(l):new uee(l),d=[o];return n.runWebGLProgram(h,[a],a.dtype,d)}return n.uploadToGPU(a.dataId),hee(a,o,l,n)}var cee={kernelName:hu,backendName:"webgl",kernelFunc:Vu},mee=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;v.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=[],m=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),f=fn({inputs:{x:m},backend:n,attrs:{perm:u}}),g=pe({inputs:{x:f},backend:n,attrs:{shape:p}}),y=Vu({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(m),c.push(f),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},fee={kernelName:Cl,backendName:"webgl",kernelFunc:mee};function gee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=cE(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var yee={kernelName:_l,backendName:"webgl",kernelFunc:gee},bee=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,xee=`
  return float(int(a.r) & int(b.r));
`;function wee(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=G().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||i===1){let l=n.texData.get(r.dataId).values,u=n.texData.get(a.dataId).values,[p,h]=TY(r.shape,a.shape,l,u,r.dtype),d=n.makeTensorInfo(h,r.dtype),c=n.texData.get(d.dataId);return c.values=p,d}let o;return s?o=new Bu(bee,r.shape,a.shape,!1):o=new ni(xee,r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}var vee={kernelName:El,backendName:"webgl",kernelFunc:wee};function kee(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var Iee={kernelName:Vp,backendName:"webgl",kernelFunc:kee},See="return float(a != b);",EE=an({opSnippet:See,cpuKernelImpl:qY,dtype:"bool"}),Nee={kernelName:Ql,backendName:"webgl",kernelFunc:EE};function zd(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jn({inputs:{x:a.complexTensorInfos.real},backend:n})}var Tee={kernelName:Oc,backendName:"webgl",kernelFunc:zd},Cee="return float(int(x));";function _ee(e,t){let n=new Wr(e.shape,Cee),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Ub(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return jn({inputs:{x:a},backend:n});let i=kt(a.shape),o=Ub({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=ds({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=zd({inputs:{input:a},backend:n}),o=Ub({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=jn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,u]=CY(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}if(s==="int32")return _ee(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=EE({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var Eee={kernelName:gi,backendName:"webgl",kernelFunc:Ub},tI="return ceil(x);",$ee=qe({opSnippet:tI,packedOpSnippet:tI,cpuKernelImpl:_Y}),Aee={kernelName:yi,backendName:"webgl",kernelFunc:$ee},Fee=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Ree=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Dee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;G().getBool("WEBGL_PACK_CLIP")?o=new Ree(a.shape):o=new Fee(a.shape);let l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}var Mee={kernelName:ns,backendName:"webgl",kernelFunc:Dee},Oee=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function nI(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Lee(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Oee(r.shape),i=[nI(r,a.complexTensorInfos.real),nI(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var zee={kernelName:Up,backendName:"webgl",kernelFunc:Lee},Pee=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Bee=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=ut(r),s=hn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${p}), vec2(${u.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];h+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${$h(i,l,f)}),
            vec2(${$h(u,l,f)}));
        }`}let d=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${d}(${$h(i,l,c)}),
          vec2(${$h(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function $h(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function Hm(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var Wee={kernelName:Fc,backendName:"webgl",kernelFunc:Hm};function dp(e,t,n){let r=e[0].dtype;if(r==="complex64"){let c=e.map(b=>zd({inputs:{input:b},backend:n})),m=e.map(b=>Hm({inputs:{input:b},backend:n})),f=dp(c,t,n),g=dp(m,t,n),y=ds({inputs:{real:f,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),m.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let c=e.map(w=>{let I=[-1,v.sizeFromShape(w.shape.slice(t))];return pe({inputs:{x:w},backend:n,attrs:{shape:I}})}),m=c.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),f=T.computeOutShape(c.map(w=>w.shape),1),g=c[0].shape[0]===1,y=EY(m,f,r,g),b=T.computeOutShape(e.map(w=>w.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}let s=e.filter(c=>v.sizeFromShape(c.shape)>0),i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new Wr(e[0].shape,Aa):new Oa(e[0].shape,Aa);return n.runWebGLProgram(c,e,r)}let o=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let f=0;f<s.length;f+=o){let g=s.slice(f,f+o);c.push(dp(g,t,n))}let m=dp(c,t,n);for(let f of c)n.disposeIntermediateTensorInfo(f);return m}if(i){let c=new Bee(s.map(m=>m.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:l,outShape:u}=Vee(s,t,n),p=new Pee(l.map(c=>c.shape)),h=n.runWebGLProgram(p,l,r);l.forEach(c=>n.disposeIntermediateTensorInfo(c));let d=pe({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function Vee(e,t,n){let r=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>pe({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function $E(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(u=>u.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(u=>u.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>v.sizeFromShape(u.shape)>0);return l.length===1?jn({inputs:{x:l[0]},backend:n}):dp(l,s,n)}var Uee={kernelName:$l,backendName:"webgl",kernelFunc:$E},AE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",w="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${w}
        setOutput(result);
      }
    `}},Gee=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},FE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=un(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=u,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<u;f++)h+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<u;f++)h+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(p+1)/2;f++){let g=f*2;if(h+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){let y=s%2===0?v.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let d="",c="";n&&(r?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${c}
         setOutput(result);
       }
     `}},Hee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=un(this.outputShape.length);let{dataFormat:n}=t,r=wn(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let p=0;p<=1;p++)l+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function fc(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function RE({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=r.texData.get(e.dataId),p=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,c=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[];if(s!=null){let b=fc(s.shape,c);b!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=fc(a.shape,c);b!=null&&(a=pe({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((h===1||d===1)&&p>NE)&&u.isPacked&&c&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},w=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert(Ap(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let I=pe({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let N=mc({a:x,b:I,backend:r,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=r.texData.get(N.dataId);v.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=w,C.shape=n.outShape,g=jn({inputs:{x:N},backend:r}),g.shape=n.outShape,y.push(N)}else{let b=n.outHeight*n.outWidth,x=pe({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),w=pe({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=mc({a:c?x:w,b:c?w:x,transposeA:!c,transposeB:f,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=pe({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(w),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function DE({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=n,m=c==="channelsLast",f=l*u*p,g=d*h,y=[n.batchSize,f,g],b=!0,x=!1,w=[];if(s!=null){let K=fc(s.shape,m);K!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:K}}),w.push(s))}if(a!=null){let K=fc(a.shape,m);K!=null&&(a=pe({inputs:{x:a},backend:r,attrs:{shape:K}}),w.push(a))}let I=pe({inputs:{x:t},backend:r,attrs:{shape:[1,f,v.sizeFromShape(t.shape)/f]}});w.push(I);let N=new Hee(y,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[e],"float32",C),A=pe({inputs:{x:E},backend:r,attrs:{shape:y}});w.push(E),w.push(A);let R=a!=null,F=s!=null,S=o==="leakyrelu",M=o?Fp(o,!0):null,B=new SE(m?A.shape:I.shape,m?I.shape:A.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,R,M,F,S),U=m?[A,I]:[I,A];if(a&&U.push(a),F&&U.push(s),S){let K=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));U.push(K),w.push(K)}let H=r.runWebGLProgram(B,U,"float32"),q=pe({inputs:{x:H},backend:r,attrs:{shape:n.outShape}});w.push(H);for(let K of w)r.disposeIntermediateTensorInfo(K);return q}function jee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))c=RE({x:a,filter:s,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let f=new FE(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];c=n.runWebGLProgram(f,[a,s],"float32",g)}else if(G().getBool("WEBGL_CONV_IM2COL"))c=DE({x:a,filter:s,convInfo:d,backend:n});else{let f=new AE(d);c=n.runWebGLProgram(f,[a,s],"float32")}let m=pe({inputs:{x:c},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(c),m}var qee={kernelName:bi,backendName:"webgl",kernelFunc:jee},Kee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Zee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Jee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Yee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),c=new Kee(d);return n.runWebGLProgram(c,[a,s],"float32")}var Qee={kernelName:Nc,backendName:"webgl",kernelFunc:Yee},ete=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=un(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function tte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,h=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){let c=[[d.strideHeight,d.strideWidth]],m=new ete(d);return n.runWebGLProgram(m,[a,s],"float32",c)}else{let c=new Xee(d);return n.runWebGLProgram(c,[a,s],"float32")}}var nte={kernelName:xi,backendName:"webgl",kernelFunc:tte};function rte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new Gee(u);return n.runWebGLProgram(p,[a,s],"float32")}var ate={kernelName:wi,backendName:"webgl",kernelFunc:rte};function ste(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=T.computeConv3DInfo(a.shape,l,i,1,o),p=new Zee(u);return n.runWebGLProgram(p,[a,s],"float32")}var ite={kernelName:Al,backendName:"webgl",kernelFunc:ste};function ote(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=T.computeConv3DInfo(l,s.shape,o,1,i),p=new Jee(u);return n.runWebGLProgram(p,[a,s],"float32")}var lte={kernelName:Fl,backendName:"webgl",kernelFunc:ote},ute=Wu+`
  return cos(x);
`,pte=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Do}
  return result;
`,dte=qe({opSnippet:ute,packedOpSnippet:pte}),hte={kernelName:vi,backendName:"webgl",kernelFunc:dte},cte=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,mte=qe({opSnippet:cte}),fte={kernelName:ki,backendName:"webgl",kernelFunc:mte},gte=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=n;this.outputShape=[u,p,h,l];let d=r==="bilinear"?1:0,[c,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,w]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},yte=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new gte(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")},bte={kernelName:Dl,backendName:"webgl",kernelFunc:yte},Dp;(function(e){e.Prod="*",e.Sum="+"})(Dp||(Dp={}));var rI=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===Dp.Prod?"1.0":"0.0",i=n?s:`getX(${aI(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?`end != ${o-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ut(a)} coords = getOutputCoords();
        int end = ${sI(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${sI(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${aI(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function aI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function sI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ME(e,t,n,r,a,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=fn({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],h=jn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){let c=new rI(e,l.shape,!1,s),m=[[d]],f=h;h=n.runWebGLProgram(c,[h],h.dtype,m),n.disposeIntermediateTensorInfo(f)}if(a){let d=new rI(e,l.shape,a,s),c=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let d=T.getUndoAxesPermutation(o),c=fn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),c}return h}function xte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return ME(Dp.Prod,a,n,s,i,o)}var wte={kernelName:Rl,backendName:"webgl",kernelFunc:xte};function vte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return ME(Dp.Sum,a,n,s,i,o)}var kte={kernelName:Ii,backendName:"webgl",kernelFunc:vte};function Ite(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=cE(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),p=NY(l,u,i,o);return n.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var Ste={kernelName:Gp,backendName:"webgl",kernelFunc:Ite},Nte=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Tte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],p=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),m=i==="NHWC"?[o,h,d,c]:[o,c,h,d],f=new Nte(m,s,i);return n.runWebGLProgram(f,[a],a.dtype)}var Cte={kernelName:Ml,backendName:"webgl",kernelFunc:Tte},OE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=un(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${u}
        setOutput(result);
      }
    `}},LE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=un(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<p;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<p;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<p&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<p)){let b=i%2===0?v.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:d+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<p&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<p&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<p&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<p&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<p&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let c="",m="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,m="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${m}
        setOutput(result);
      }
    `}};function _te(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;p==null&&(p=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new LE(h):d=new OE(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",c)}var Ete={kernelName:Si,backendName:"webgl",kernelFunc:_te},$te=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ate=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,h=T.computeConv2DInfo(a.shape,p,i,o,l,u,!0),d=new $te(h);return n.runWebGLProgram(d,[a,s],"float32")}var Rte={kernelName:Tc,backendName:"webgl",kernelFunc:Fte};function Dte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,h=T.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new Ate(h);return n.runWebGLProgram(d,[a,s],"float32")}var Mte={kernelName:Cc,backendName:"webgl",kernelFunc:Dte},Ote=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Lte(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=v.sizeFromShape(r.shape),i=pe({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Ote(s),l=n.runWebGLProgram(o,[i],i.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var zte={kernelName:Hp,backendName:"webgl",kernelFunc:Lte},Pte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${p}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Bte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p,h=new Pte(u);p=n.runWebGLProgram(h,[a,s],"float32");let d=pe({inputs:{x:p},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(p),d}var Wte={kernelName:Ni,backendName:"webgl",kernelFunc:Bte};function Vte(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=T.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of p[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=fn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=pe({inputs:{x},backend:n,attrs:{shape:w}}),m.push(x)),d===null?d=x:(d=H0({inputs:{a:x,b:d},backend:n}),m.push(d))}f<h-1&&(u[f]>=0&&(d=Gm({inputs:{x:d},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(d)),c--)}for(let f of m)f!==d&&n.disposeIntermediateTensorInfo(f);return d}var Ute={kernelName:Ec,backendName:"webgl",kernelFunc:Vte},Gte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Hte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jte=qe({opSnippet:Gte,packedOpSnippet:Hte}),qte={kernelName:Ci,backendName:"webgl",kernelFunc:jte},Kte="return (b >= 0.0) ? a : a * (b + 1.0);",Xte=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Zte=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bu(Xte,r.shape,a.shape):new ni(Kte,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},Jte={kernelName:Ol,backendName:"webgl",kernelFunc:Zte},Yte=`
  return vec4(equal(a, b));
`,Qte="return float(a == b);",ene=an({opSnippet:Qte,packedOpSnippet:Yte,dtype:"bool",cpuKernelImpl:$Y}),tne={kernelName:Ll,backendName:"webgl",kernelFunc:ene},nne=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,rne=qe({opSnippet:nne}),ane={kernelName:_i,backendName:"webgl",kernelFunc:rne},sne=Wu+`
  return exp(x);
`,ine=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zE=qe({opSnippet:sne,packedOpSnippet:ine,cpuKernelImpl:AY,dtype:"float32"}),one={kernelName:Ei,backendName:"webgl",kernelFunc:zE};function Gb(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(v.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),pe({inputs:{x:s},backend:r,attrs:{shape:o}})}var lne={kernelName:zl,backendName:"webgl",kernelFunc:Gb},iI="return exp(x) - 1.0;",une=qe({opSnippet:iI,packedOpSnippet:iI,cpuKernelImpl:FY}),pne={kernelName:$i,backendName:"webgl",kernelFunc:une},oI=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function PE(e,t,n){let r=n.texData.get(e.dataId),a=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=pe({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new oI("real",l,t),p=new oI("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(p,h,"float32"),m=ds({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let f=pe({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function dne(e){let{inputs:t,backend:n}=e,{input:r}=t;return PE(r,!1,n)}var hne={kernelName:$c,backendName:"webgl",kernelFunc:dne},cne=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Pd(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||v.inferDtype(a),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new cne(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var mne={kernelName:jp,backendName:"webgl",kernelFunc:Pd},fne=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},gne={kernelName:Pl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new fne(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},lI="return floor(x);",yne=qe({opSnippet:lI,packedOpSnippet:lI,cpuKernelImpl:RY}),bne={kernelName:Ai,backendName:"webgl",kernelFunc:yne},xne=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,wne=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,vne=an({opSnippet:xne,packedOpSnippet:wne,dtype:"int32"}),kne={kernelName:Fi,backendName:"webgl",kernelFunc:vne},Ine=class{constructor(e){this.variableNames=["A"];let t=wn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Sne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=wn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Nne={kernelName:jh,backendName:"webgl",kernelFunc:Tne},jo,Gy=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Tne(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],h=[u,l,s];if(o||i){let f=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(jo==null||f!==Gy)&&(Gy=f,jo=document.createElement("canvas").getContext("2d",{willReadFrequently:Gy})),jo.canvas.width=l,jo.canvas.height=u,jo.drawImage(a,0,0,l,u),a=jo.canvas}let d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=er.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=G().getBool("WEBGL_PACK")?new Sne(h):new Ine(h),m=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),m}function Cne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:m}=r,f=T.convertConv2DDataFormat(p),g=T.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!1,f),y,b=[],x=i!=null,w=o!=null,I=c==="leakyrelu",N=()=>{let E=[a,s],A=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let S=pe({inputs:{x:R},backend:n,attrs:{shape:[R.shape[0],1,1]}});return b.push(S),S}return R};if(x&&E.push(A(i,p)),w&&E.push(A(o,p)),I){let R=n.makeTensorInfo([],"float32",v.createScalarValue(m,"float32"));E.push(R),b.push(R)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=RE({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&f==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let E=c?Fp(c,!0):null,A=new FE(g,x,E,w,I),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=N();y=n.runWebGLProgram(A,F,"float32",R)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=DE({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let E=c?Fp(c,!1):null,A=new AE(g,x,E,w,I),R=N();y=n.runWebGLProgram(A,R,"float32")}let C=pe({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),C}var _ne={kernelName:Ps,backendName:"webgl",kernelFunc:Cne};function Ene(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=r,m=[],f=p;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?Fp(d,y):null,x=[a,s],w=i!=null,I=o!=null,N=d==="leakyrelu";if(w&&x.push(i),I&&x.push(o),N){let R=n.makeTensorInfo([],"float32",v.createScalarValue(c,"float32"));x.push(R),m.push(R)}let C;y?C=new LE(g,w,b,I,N):C=new OE(g,w,b,I,N);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(C,x,"float32",E);return m.forEach(R=>n.disposeIntermediateTensorInfo(R)),A}var $ne={kernelName:Bs,backendName:"webgl",kernelFunc:Ene},Ane=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=ut(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Fne(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=v.sizeFromShape(r.shape),[l,u,p,h]=T.prepareAndValidate(r,a),d=pe({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=pe({inputs:{x:r},backend:n,attrs:{shape:[v.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=DY(y,b,r.dtype,u,i,p,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let m=new Ane(i,h,[u,p],r.shape),f=n.runWebGLProgram(m,[c,d],c.dtype),g=pe({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}var Rne={kernelName:Wl,backendName:"webgl",kernelFunc:Fne},Dne=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ut(this.rank),r=Mne(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Mne(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function BE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=v.parseAxisParam(i,a.shape)[0];if(G().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let w=0;w<b.length;++w){let I=b[w];v.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=v.sizeFromShape(s.shape),h=[],d=pe({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=pe({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let m=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(d),w=MY(x,b,m);return h.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(u.outputShape,w.dtype,w.values)}let f=new Dne(d.shape,m),g=n.runWebGLProgram(f,[d,c],d.dtype);h.push(g);let y=pe({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var One={kernelName:Bl,backendName:"webgl",kernelFunc:BE},Lne="return float(a > b);",zne=`
  return vec4(greaterThan(a, b));
`,Pne=an({opSnippet:Lne,packedOpSnippet:zne,cpuKernelImpl:OY,dtype:"bool"}),Bne={kernelName:Vl,backendName:"webgl",kernelFunc:Pne},Wne="return float(a >= b);",Vne=`
  return vec4(greaterThanEqual(a, b));
`,Une=an({opSnippet:Wne,packedOpSnippet:Vne,dtype:"bool",cpuKernelImpl:LY}),Gne={kernelName:Di,backendName:"webgl",kernelFunc:Une};function Hne(e){let{inputs:t,backend:n}=e,{input:r}=t;return PE(r,!0,n)}var jne={kernelName:Ac,backendName:"webgl",kernelFunc:Hne},qne="return float(!isnan(x) && !isinf(x));",Kne=qe({opSnippet:qne,dtype:"bool"}),Xne={kernelName:Oi,backendName:"webgl",kernelFunc:Kne},Zne="return float(isinf(x));",Jne=qe({opSnippet:Zne,dtype:"bool"}),Yne={kernelName:Li,backendName:"webgl",kernelFunc:Jne},Qne="return float(isnan(x));",ere=qe({opSnippet:Qne,dtype:"bool"}),tre={kernelName:zi,backendName:"webgl",kernelFunc:ere},nre="return float(a < b);",rre=`
  return vec4(lessThan(a, b));
`,are=an({opSnippet:nre,packedOpSnippet:rre,cpuKernelImpl:zY,dtype:"bool"}),sre={kernelName:Ul,backendName:"webgl",kernelFunc:are},ire="return float(a <= b);",ore=`
  return vec4(lessThanEqual(a, b));
`,lre=an({opSnippet:ire,packedOpSnippet:ore,cpuKernelImpl:PY,dtype:"bool"}),ure={kernelName:Gl,backendName:"webgl",kernelFunc:lre};function pre(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=BY(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var dre={kernelName:Hl,backendName:"webgl",kernelFunc:pre},hre=Wu+`
  return x < 0.0 ? 0./0. : log(x);
`,cre=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,mre=qe({opSnippet:hre,packedOpSnippet:cre,cpuKernelImpl:WY}),fre={kernelName:Bi,backendName:"webgl",kernelFunc:mre},gre=Wu+`
  return log(1.0 + x);
`,yre=qe({opSnippet:gre}),bre={kernelName:Wi,backendName:"webgl",kernelFunc:yre},xre="return float(a >= 1.0 && b >= 1.0);",wre=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,vre=an({opSnippet:xre,packedOpSnippet:wre,dtype:"bool"}),kre={kernelName:jl,backendName:"webgl",kernelFunc:vre},Ire="return float(!(x >= 1.0));",Sre=qe({opSnippet:Ire}),Nre={kernelName:ql,backendName:"webgl",kernelFunc:Sre},Tre="return float(a >= 1.0 || b >= 1.0);",Cre=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,_re=an({opSnippet:Tre,packedOpSnippet:Cre,dtype:"bool"}),Ere={kernelName:Kl,backendName:"webgl",kernelFunc:_re},$re=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},Are=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},Fre=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new Are(a.shape,s,i,o,l):new $re(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},Rre={kernelName:Vi,backendName:"webgl",kernelFunc:Fre},Dre=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Mre=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,h=new Dre(a.shape,o,l,u,p);return n.runWebGLProgram(h,[a,s,i],a.dtype)},Ore={kernelName:Xl,backendName:"webgl",kernelFunc:Mre};function Lre(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=pe({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Mo(i,e.dtype,"max",r),l=pe({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function WE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=p!=null,d=n.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let N=0;N<x.length;N++)x[N]=a.shape[p[N]];let w=V0(b,a.shape,a.dtype,p,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=w}else c=Um(a,p,n);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[m,f]=T.computeOutAndReduceShapes(c.shape,u),g=m;i&&(g=T.expandShapeToKeepDim(m,l));let y;if(d){let b=n.texData.get(c.dataId).values,x=VY(b,v.sizeFromShape(f),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let w=n.texData.get(y.dataId);w.values=x}else y=Lre(c,f,g,n);return h&&n.disposeIntermediateTensorInfo(c),y}var zre={kernelName:Ui,backendName:"webgl",kernelFunc:WE},Pre=G0+`
  return max(a, b);
`,Bre=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Do+`
  return result;
`,Wre=an({opSnippet:Pre,packedOpSnippet:Bre,cpuKernelImpl:UY}),Vre={kernelName:Gi,backendName:"webgl",kernelFunc:Wre};function Ure(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Mu(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l);if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))return jn({inputs:{x:a},backend:n});let h=new Rp(p,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var Gre={kernelName:Hi,backendName:"webgl",kernelFunc:Ure};function Hre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,p=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,p,o,u,l),d=new j0(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var jre={kernelName:Zl,backendName:"webgl",kernelFunc:Hre},qre=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Kre=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Xre(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,u,p),c=new j0(d,"max",!0),m=n.runWebGLProgram(c,[i],i.dtype),f=new Kre(d),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var Zre={kernelName:Kp,backendName:"webgl",kernelFunc:Xre};function Jre(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Mu([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=T.computePool2DInfo(o.shape,l,u,1,p,h),c=!0,m=new Rp(d,"max",c),f=n.runWebGLProgram(m,[o],o.dtype),g=new qre(d),y=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var Yre={kernelName:qp,backendName:"webgl",kernelFunc:Jre};function Qre(e,t,n,r){let a=new Rp(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new Rp(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var eae={kernelName:Xp,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;v.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let p=T.computePool2DInfo(r.shape,a,s,u,i),[h,d]=Qre(r,o,p,l);return[h,d]}};function tae(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=pe({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Mo(i,"float32","mean",r),l=pe({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var nae={kernelName:ji,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=l,p=T.getAxesPermutation(u,o),h=p!=null,d=i.shouldExecuteOnCPU([r]),c=[],m=r;if(h){if(d){let x=i.texData.get(m.dataId).values,w=new Array(o);for(let C=0;C<w.length;C++)w[C]=r.shape[p[C]];let I=V0(x,r.shape,r.dtype,p,w);m=i.makeTensorInfo(w,r.dtype);let N=i.texData.get(m.dataId);N.values=I}else m=Um(r,p,i);c.push(m),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[f,g]=T.computeOutAndReduceShapes(m.shape,u),y=f;a&&(y=T.expandShapeToKeepDim(f,l));let b=tae(m,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function rae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=fn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),m=v.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Mo(f,f.dtype,"min",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),p!=null&&n.disposeIntermediateTensorInfo(h),y}var aae={kernelName:qi,backendName:"webgl",kernelFunc:rae},sae=G0+`
  return min(a, b);
`,iae=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Do+`
  return result;
`,oae=an({opSnippet:sae,packedOpSnippet:iae,cpuKernelImpl:GY}),lae={kernelName:Ki,backendName:"webgl",kernelFunc:oae},uae=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,p)=>u[0]+e[p]+u[1]);let r=e.length,a=ut(r),s=t.map(u=>u[0]).join(","),i=t.map((u,p)=>u[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},pae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,m)=>c[0]+e[m]+c[1]);let r=e.length,a=ut(r),s=t.map(c=>c[0]).join(","),i=t.map((c,m)=>c[0]+e[m]).join(","),o=hn("rc",r),l=hn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${l.slice(-2).join()})`,h=n==="reflect"?0:1,d="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${p});
          ${o[r-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},dae=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pae(r.shape,a,s):new uae(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},hae={kernelName:Xi,backendName:"webgl",kernelFunc:dae},cae=`if (b == 0.0) return NAN;
  return mod(a, b);`,mae=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Do+`
  return result;
`,fae=an({opSnippet:cae,packedOpSnippet:mae}),gae={kernelName:Zi,backendName:"webgl",kernelFunc:fae},yae=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},bae=`
if (a == b) {
  return 1.0;
};
return a / b;`,xae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,VE=an({opSnippet:bae,packedOpSnippet:xae,checkOutOfBounds:!0}),wae={kernelName:Ti,backendName:"webgl",kernelFunc:VE},uI="return a - b;",UE=an({opSnippet:uI,packedOpSnippet:uI,supportsComplex:!0,cpuKernelImpl:d9}),vae={kernelName:ko,backendName:"webgl",kernelFunc:UE};function GE(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=v.parseAxisParam([s],a.shape),o=WE({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=pe({inputs:{x:o},backend:n,attrs:{shape:l}}),p=UE({inputs:{a,b:u},backend:n}),h=zE({inputs:{x:p},backend:n}),d=Gm({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=pe({inputs:{x:d},backend:n,attrs:{shape:l}}),m=VE({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),m}var kae={kernelName:wo,backendName:"webgl",kernelFunc:GE};function Iae(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:GE({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new yae(u,p,s),d=[[i]],c=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var Sae={kernelName:Jl,backendName:"webgl",kernelFunc:Iae},Nae=br+`
  return -x;
`,Tae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Cae(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=jY(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Oa(r.shape,Tae):a=new Wr(r.shape,Nae),n.runWebGLProgram(a,[r],r.dtype)}var _ae={kernelName:Yl,backendName:"webgl",kernelFunc:Cae},Eae=Jr.nonMaxSuppressionV3Impl;function $ae(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=Eae(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Aae={kernelName:eu,backendName:"webgl",kernelFunc:$ae},Fae=Jr.nonMaxSuppressionV4Impl;function Rae(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=Fae(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Dae={kernelName:tu,backendName:"webgl",kernelFunc:Rae},Mae=Jr.nonMaxSuppressionV5Impl;function Oae(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=Mae(p,h,d,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Lae={kernelName:nu,backendName:"webgl",kernelFunc:Oae},zae=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Pae=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=v.sizeFromShape(a.shape),p=new zae(u,i,o,l),h=pe({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(p,[h],s);n.disposeIntermediateTensorInfo(h);let c=[...a.shape,i],m=pe({inputs:{x:d},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),m},Bae={kernelName:Yi,backendName:"webgl",kernelFunc:Pae};function gc(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=zd({inputs:{input:r},backend:n}),s=gc({inputs:{x:a},backend:n}),i=Hm({inputs:{input:r},backend:n}),o=gc({inputs:{x:i},backend:n}),l=ds({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Pd({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var Wae={kernelName:vu,backendName:"webgl",kernelFunc:gc};function HE(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=zd({inputs:{input:r},backend:n}),s=HE({inputs:{x:a},backend:n}),i=Hm({inputs:{input:r},backend:n}),o=gc({inputs:{x:i},backend:n}),l=ds({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Pd({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var Vae={kernelName:ru,backendName:"webgl",kernelFunc:HE};function Uae(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Gb({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=Gb({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),u=$E({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var Gae={kernelName:au,backendName:"webgl",kernelFunc:Uae},Hae=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,a=ut(r),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},jae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let r=e.length,a=ut(r),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=hn("rc",r),l=hn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${u}) {`],d=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let m=0,f=r===1?2:4;m<f;m++)c+=`
        ${h[m]}
        if (${d}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${p});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},jE=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(v.sizeFromShape(a.shape)===0){let u=s.map((p,h)=>p[0]+a.shape[h]+p[1]);return Pd({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jae(a.shape,s,i):new Hae(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},qae={kernelName:Qi,backendName:"webgl",kernelFunc:jE},Kae=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Xae=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Do+`
  return result;
`,Zae=an({opSnippet:Kae,packedOpSnippet:Xae}),Jae={kernelName:eo,backendName:"webgl",kernelFunc:Zae};function Yae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=v.parseAxisParam(s,a.shape),p=u,h=T.getAxesPermutation(p,o),d=a;h!=null&&(d=fn({inputs:{x:a},backend:n,attrs:{perm:h}}),p=T.getInnerMostAxes(p.length,o),l.push(d)),T.assertAxesAreInnerMostDims("prod",p,o);let c;if(n.shouldExecuteOnCPU([d])){let m=n.texData.get(d.dataId).values,{outVals:f,outShape:g,outDtype:y}=KY(d.shape,d.dtype,m,p);c=n.makeTensorInfo(g,y,f)}else{let[m,f]=T.computeOutAndReduceShapes(d.shape,p),g=v.sizeFromShape(f),y=pe({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=zc(a.dtype),x=Mo(y,b,"prod",n);c=pe({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(c);let m=T.expandShapeToKeepDim(c.shape,u);c=pe({inputs:{x:c},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var Qae={kernelName:no,backendName:"webgl",kernelFunc:Yae};function ese(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),u=a.map(y=>y.shape),p=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,c,m]=XY(l,u,p,s.shape,s.dtype,h,i.shape,o),f=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var tse={kernelName:Rc,backendName:"webgl",kernelFunc:ese};function nse(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=ZY(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([p.length],r.dtype,p);return[h,d]}var rse={kernelName:Dc,backendName:"webgl",kernelFunc:nse};function ase(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[m,f]=JY(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(m,s.dtype,f)}var sse={kernelName:Mc,backendName:"webgl",kernelFunc:ase},qE=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=YY(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},ise={kernelName:Zp,backendName:"webgl",kernelFunc:qE},ose="return 1.0 / x;",lse=qe({opSnippet:ose}),use={kernelName:ro,backendName:"webgl",kernelFunc:lse},pse=br+`
  return (x < 0.0) ? 0.0 : x;
`,dse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hse=qe({opSnippet:pse,packedOpSnippet:dse}),cse={kernelName:ao,backendName:"webgl",kernelFunc:hse},mse=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,fse=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gse=qe({opSnippet:mse,packedOpSnippet:fse}),yse={kernelName:oo,backendName:"webgl",kernelFunc:gse},bse=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},xse=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function wse(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xse(a.shape,l,u,s,i):new bse(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}var vse={kernelName:io,backendName:"webgl",kernelFunc:wse},kse=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=Math.ceil(h)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ise(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new kse(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Sse={kernelName:ou,backendName:"webgl",kernelFunc:Ise},Nse=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",d;a?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Tse=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",d;a?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Cse(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Tse(a.shape,l,u,s,i):new Nse(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}var _se={kernelName:so,backendName:"webgl",kernelFunc:Cse},Ese=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=Math.ceil(h)*2+2,m=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function $se(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Ese(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Ase={kernelName:iu,backendName:"webgl",kernelFunc:$se},Fse=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=ut(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},Rse=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=hn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ut(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${u(r.slice())};
            if(${a}) {
              result.a = ${p(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",h(c)}function u(c){return c[n-2]="("+c[n-2]+" + 1)",h(c)}function p(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",h(c)}function h(c){let m=e.map((y,b)=>d(b,c)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function d(c,m){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${m[c]} - 1`:`${m[c]}`}}};function Dse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return jn({inputs:{x:a},backend:n});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rse(a.shape,o):new Fse(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var Mse={kernelName:lo,backendName:"webgl",kernelFunc:Dse},Ose=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Lse={kernelName:ku,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new Ose(r.shape,s),[u,p]=T.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},zse=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Pse=qe({opSnippet:zse}),Bse={kernelName:uo,backendName:"webgl",kernelFunc:Pse},Wse="return inversesqrt(x);",Vse=qe({opSnippet:Wse,cpuKernelImpl:QY}),Use={kernelName:po,backendName:"webgl",kernelFunc:Vse},q0=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=ut(a.length),u=ut(s.length),p="";n===1?p="i":n===2&&(p="i, j");let h=`getIndices(${p})`,d="";r===1?d="i":r===2&&(d="i, coords[1]");let c=`getUpdates(${d})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},Gse=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=ut(a.length),u=ut(s.length),p="";n===1?p="i":n===2&&(p="i, j");let h=`getIndices(${p})`,d="";r===1?d="i":r===2&&(d="i, coords[1]");let c=`getUpdates(${d})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}};function Hse(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(s,a,i),d=[h/u,u];if(h===0)return n.makeTensorInfo(i,a.dtype);let c=pe({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=pe({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;G().getBool("WEBGL_PACK")?g=new Gse(l,o,c.shape.length,m.shape.length,p,d):g=new q0(l,o,c.shape.length,m.shape.length,p,d);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=pe({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var jse={kernelName:lu,backendName:"webgl",kernelFunc:Hse},qse=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=G().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Kse(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new qse(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var Xse={kernelName:pu,backendName:"webgl",kernelFunc:Kse},Zse=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);r=o.join(),a=l.join()}let s=ut(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function Jse(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Zse(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ar(a.dtype,s.dtype))}var Yse={kernelName:du,backendName:"webgl",kernelFunc:Jse},Qse=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,eie=qe({opSnippet:Qse}),tie={kernelName:ho,backendName:"webgl",kernelFunc:eie},nie=Wu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,rie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aie=qe({opSnippet:nie,packedOpSnippet:rie,cpuKernelImpl:t9}),sie={kernelName:go,backendName:"webgl",kernelFunc:aie},iie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,oie=qe({opSnippet:iie}),lie={kernelName:fo,backendName:"webgl",kernelFunc:oie},uie=Wu+`
  return sin(x);
`,pie=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Do}
  return result;
`,die=qe({opSnippet:uie,packedOpSnippet:pie}),hie={kernelName:co,backendName:"webgl",kernelFunc:die},cie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,mie=qe({opSnippet:cie}),fie={kernelName:mo,backendName:"webgl",kernelFunc:mie},gie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,yie=qe({opSnippet:gie}),bie={kernelName:yo,backendName:"webgl",kernelFunc:yie},xie=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;v.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],p=jE({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(p.shape,s,o,!1),d=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(p.shape,s,o,!1),m=pe({inputs:{x:p},backend:n,attrs:{shape:h}}),f=fn({inputs:{x:m},backend:n,attrs:{perm:d}}),g=pe({inputs:{x:f},backend:n,attrs:{shape:c}});return u.push(p),u.push(m),u.push(f),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},wie={kernelName:cu,backendName:"webgl",kernelFunc:xie};function vie(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[h,d,c,m,f]=r9(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var kie={kernelName:Jp,backendName:"webgl",kernelFunc:vie};function Iie(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,h]=a9(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var Sie={kernelName:fu,backendName:"webgl",kernelFunc:Iie};function Nie(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=fE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}var Tie={kernelName:Yp,backendName:"webgl",kernelFunc:Nie};function Cie(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=fE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}var _ie={kernelName:Qp,backendName:"webgl",kernelFunc:Cie};function Eie(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=v.decodeString(n.readSync(i.dataId)[0]),w=e9(y,b,o,d,p,u,l,h,x,c);return n.makeTensorInfo(o,w.dtype,w.values)}let m=new q0(u,l,a.shape.length,s.shape.length,h,[d,1],c),f=n.runWebGLProgram(m,[s,a,i],s.dtype),g=pe({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}var $ie={kernelName:gu,backendName:"webgl",kernelFunc:Eie};function Aie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{let c=[...h];c[o]=d;let m=Vu({inputs:{x:a},backend:n,attrs:{begin:p,size:c}});return p[o]+=d,m})}var Fie={kernelName:mu,backendName:"webgl",kernelFunc:Aie},pI="return sqrt(x);",Rie=qe({opSnippet:pI,packedOpSnippet:pI,cpuKernelImpl:s9}),Die={kernelName:bo,backendName:"webgl",kernelFunc:Rie},Mie="return x * x;",Oie=qe({opSnippet:Mie}),Lie={kernelName:ed,backendName:"webgl",kernelFunc:Oie},dI="return (a - b) * (a - b);",zie=an({opSnippet:dI,packedOpSnippet:dI}),Pie={kernelName:vo,backendName:"webgl",kernelFunc:zie};function Bie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=T.fromUint8ToStringArray(s),o=i9(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var Wie={kernelName:td,backendName:"webgl",kernelFunc:Bie};function Vie({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=br+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Wr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var Uie={kernelName:as,backendName:"webgl",kernelFunc:Vie},Gie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=ut(n.length),s=ut(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((l,u)=>(o++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Hie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Pt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),I;if(f)I=pe({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let C=Pt.computeOutShape(b,x,w),E=Vu({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});I=pe({inputs:{x:E},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let C=n.readSync(a.dataId),E=Me(a.shape,a.dtype,C),A=o9(c,E,w,b);I=n.makeTensorInfo(m,a.dtype,A.values)}else{let C=new Gie(b,w,c);I=n.runWebGLProgram(C,[a],a.dtype)}let N=pe({inputs:{x:I},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(I),N}var jie={kernelName:yu,backendName:"webgl",kernelFunc:Hie};function qie(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.readSync(p.dataId),c=n.readSync(h.dataId),[m,f]=l9(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var Kie={kernelName:nd,backendName:"webgl",kernelFunc:qie};function Xie(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,h]=u9(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var Zie={kernelName:rd,backendName:"webgl",kernelFunc:Xie};function Jie(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=p9(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var Yie={kernelName:ad,backendName:"webgl",kernelFunc:Jie},Qie="return tan(x);",eoe=qe({opSnippet:Qie}),toe={kernelName:Io,backendName:"webgl",kernelFunc:eoe},noe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,roe=qe({opSnippet:noe}),aoe={kernelName:So,backendName:"webgl",kernelFunc:roe};function soe(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(i,s,a.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(a.shape,s.dtype);let c=pe({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=pe({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=pe({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new q0(l,o,c.shape.length,m.shape.length,p,d,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=pe({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}var ioe={kernelName:uu,backendName:"webgl",kernelFunc:soe},ooe=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=ut(this.rank),a=loe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function loe(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function KE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>v.decodeString(h)):o,u=Me(a.shape,a.dtype,l),p=h9(u,s);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new ooe(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var uoe={kernelName:rs,backendName:"webgl",kernelFunc:KE},poe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},doe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ks(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function hI(e){let t=1;for(;t<e;)t*=2;return t}function hoe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let A=n.readSync(a.dataId),[R,F]=c9(A,u,a.dtype,s,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(p===1)return[a,Pd({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),d=h!==null&&h.isPacked,c=d?n.unpackTensor(a):a,m=v.sizeFromShape(u)/p,f=pe({inputs:{x:c},attrs:{shape:[m,p]},backend:n});d&&ks(n,c);let g=hI(s),y=hI(p),b=null,x=()=>b===null?[f,f]:[f,b],w=(A,R,F)=>{let S=x(),M=new poe(F),B=[[p],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[R]],U=b;b=n.runWebGLProgram(M,S,"int32",B),ks(n,U)};for(let A=1;A<g;A*=2){let R=A*2;for(let F=A;F>=1;F/=2)w(R,F,[m,y])}for(let A=y;A>g;A/=2){let R=x(),F=new doe([m,A/2]),S=[[p],[b===null?1:0],[g]],M=b;b=n.runWebGLProgram(F,R,"int32",S),ks(n,M);let B=g/2,U=B*2;for(let H=B;H>=1;H/=2)w(U,H,b.shape)}let I=b;b=Vu({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),ks(n,I);let N=BE({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});ks(n,f);let C=u.slice(0,-1);C.push(s),I=b,b=pe({inputs:{x:b},attrs:{shape:C},backend:n}),ks(n,I);let E=N;return N=pe({inputs:{x:N},attrs:{shape:C},backend:n}),ks(n,E),[N,b]}var coe={kernelName:bu,backendName:"webgl",kernelFunc:hoe},moe=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function foe(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[m,f]=u??[h,d],g=[p,m,f,c],y=new moe(h,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var goe={kernelName:xu,backendName:"webgl",kernelFunc:foe};function yoe(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Mu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=m9(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var boe={kernelName:sd,backendName:"webgl",kernelFunc:yoe};function xoe(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let f=0;f<o;f++)f!==s&&(u[p++]=i.shape[f]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){d[s]=f;let g=Vu({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),y=pe({inputs:{x:g},backend:n,attrs:{shape:u}});m[f]=y,h.push(g)}return h.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var woe={kernelName:wu,backendName:"webgl",kernelFunc:xoe},voe=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=Math.floor(n/4)*4,p=n%4,h=`
        sumValue += dot(values, segFilter);
    `,d="";a%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function koe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=T.getAxesPermutation([u],o),h=a;p!=null&&(h=fn({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(h),u=T.getInnerMostAxes(1,o)[0]);let d=T.segment_util.computeOutShape(h.shape,u,i),c=v.sizeFromShape([h.shape[u]]),m=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(m);let f=zc(a.dtype),g=(w,I,N,C,E)=>{let A=w.shape[0],R=w.shape[1],F=T.segment_util.segOpComputeOptimalWindowSize(R,E),S={windowSize:F,inSize:R,batchSize:A,numSegments:E},M=new voe(S,I),B=n.compileAndRun(M,[w,N],C);if(l.push(B),B.shape[1]===E)return B;let U=qE({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),H=KE({inputs:{x:U},backend:n,attrs:{reps:[R/F]}});return l.push(U),l.push(H),g(B,I,H,C,E)},y=g(m,"unsortedSegmentSum",s,f,i),b=pe({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(p!=null){l.push(b);let w=T.getUndoAxesPermutation(p);x=fn({inputs:{x},backend:n,attrs:{perm:w}})}return l.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}var Ioe={kernelName:id,backendName:"webgl",kernelFunc:koe},Soe=[oQ,uQ,hQ,fQ,yQ,wQ,kQ,SQ,_Q,$Q,RQ,OQ,PQ,UQ,jQ,KQ,ZQ,eee,nee,aee,lee,fee,yee,vee,Iee,Eee,Aee,Mee,G9,zee,Uee,qee,Qee,nte,ate,ite,lte,hte,fte,bte,wte,kte,Ste,Cte,Ete,Rte,Mte,zte,Wte,Ute,qte,Jte,tne,ane,one,lne,pne,hne,mne,gne,bne,kne,Nne,_ne,$ne,Rne,One,Bne,Gne,U9,jne,Wee,Xne,Yne,tre,j9,sre,ure,dre,fre,bre,kre,Nre,Ere,Rre,Ore,zre,Vre,Gre,jre,Zre,Yre,eae,nae,aae,lae,hae,gae,Sae,X9,_ae,Aae,Dae,Lae,Nee,Bae,Vae,Gae,qae,Jae,K9,Qae,tse,rse,sse,ise,Tee,wae,use,cse,yse,J9,vse,Sse,_se,Ase,Mse,Lse,Bse,Use,jse,Xse,Yse,tie,sie,lie,hie,fie,cee,kae,bie,wie,kie,Sie,Tie,_ie,$ie,Fie,Die,Lie,Pie,Wie,Uie,jie,Kie,Zie,Yie,vae,aQ,toe,aoe,ioe,uoe,coe,goe,sQ,boe,woe,Ioe,Wae];for(let e of Soe)od(e);var Xe;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Xe||(Xe={}));var Mp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Mp||(Mp={}));var XE;function Noe(e){XE=e.wasm.cwrap(zs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Toe(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);m=E.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=Mp[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Iu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(w.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return XE(d,N,a.shape.length,c,C,s.shape.length,l,u,g,m,f,h||0,I),w}var Coe={kernelName:zs,backendName:"wasm",setupFunc:Noe,kernelFunc:Toe};function He(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),p=i.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||n(l,Xe[o.dtype],p),u}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var _oe=He(vl),Eoe=He(ii),$oe=He(oi);function Ot(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:p}=l,h=o.dataIdMap.get(u.dataId).id,d=o.dataIdMap.get(p.dataId).id,c=n??u.dtype,m=T.assertAndGetBroadcastShape(u.shape,p.shape),f=o.makeOutput(m,c);if(v.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),b=o.dataIdMap.get(f.dataId).id;return r(h,g,u.shape.length,d,y,p.shape.length,Xe[u.dtype],b),f}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Aoe=!0,Foe=Ot(ts,Aoe),ZE;function Roe(e){ZE=e.wasm.cwrap(li,null,["array","number","number","number"])}function Doe(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return ZE(s,a.length,Xe[r.dtype],i),r}var Moe={kernelName:li,backendName:"wasm",setupFunc:Roe,kernelFunc:Doe};function jm(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return cn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Ooe={kernelName:Mi,backendName:"wasm",kernelFunc:jm},JE;function Loe(e){JE=e.wasm.cwrap(oa,null,["number","array","number","number","number","array","number"])}function Ya(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=Poe(t.x.shape,r.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=zoe(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let m=jm({inputs:t,backend:n});return m.shape=o,m}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return JE(p,c,l.shape.length,Xe[l.dtype],h,d,s.length),u}function zoe(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function Poe(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var Boe={kernelName:oa,backendName:"wasm",kernelFunc:Ya,setupFunc:Loe};function hs(e,t,n){let r=e.shape,a=e.shape.length,s=v.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,a),l=null,u=!1;if(o!=null){let p=new Array(a);for(let d=0;d<p.length;d++)p[d]=r[o[d]];i=T.getInnerMostAxes(i.length,a),l=Ya({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var YE;function Woe(e){YE=e.wasm.cwrap(kl,null,["number, number, number"])}function Voe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=hs(i,a,t);if(d){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",p,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;YE(o,g,b)}if(d&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var Uoe={kernelName:kl,backendName:"wasm",setupFunc:Woe,kernelFunc:Voe},QE;function Goe(e){QE=e.wasm.cwrap(Il,null,["number, number, number"])}function Hoe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=hs(i,a,t);if(d){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",p,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;QE(o,g,b)}if(d&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var joe={kernelName:Il,backendName:"wasm",setupFunc:Goe,kernelFunc:Hoe};function e$(e){let t;function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:l}=o,{x:u}=i,p=s.dataIdMap.get(u.dataId).id,h=p,d=u,{transposed:c,axes:m,inputWasTransposed:f}=hs(u,l,s);if(f){let I=s.dataIdMap.get(c.dataId).id;I!==p&&(d=c,h=I)}let g=d.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=v.sizeFromShape(y.shape),w=d.shape[m[0]];return t(h,Xe[d.dtype],x,w,b),f&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var qoe=e$(Sl),Koe=e$(Nl),Xoe=He(ui),Zoe=He(pi),Joe=He(di),Yoe=Ot(ci,!1),Qoe=He(hi),t$;function ele(e){t$=e.wasm.cwrap(mi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tle(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=T.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let w=r.makeOutput(p.outShape,"float32"),I=r.dataIdMap.get(w.dataId).id;return t$(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,m,f,g,y,b,x,I),w}var nle={kernelName:mi,backendName:"wasm",setupFunc:ele,kernelFunc:tle},n$;function rle(e){n$=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ale(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return n$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var sle={kernelName:Tl,backendName:"wasm",setupFunc:rle,kernelFunc:ale},r$;function ile(e){r$=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ole(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return r$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left,p.filterDepth,p.filterHeight,p.filterWidth),h}var lle={kernelName:Wp,backendName:"wasm",setupFunc:ile,kernelFunc:ole},a$;function ule(e){a$=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ple(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=T.computePool2DInfo(s.shape,i,o,1,l),p=n.makeOutput(s.shape,s.dtype);return a$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),p}var dle={kernelName:Bp,backendName:"wasm",setupFunc:ule,kernelFunc:ple};function _n(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var hle={kernelName:su,backendName:"wasm",kernelFunc:_n},s$;function cle(e){s$=e.wasm.cwrap(fi,null,["number","array","number","number","array","number","number","number","number"])}function mle(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=v.sizeFromShape(m),y=v.sizeFromShape(f),b=Iu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],w=o?[y,c,h]:[y,h,c],I=_n({inputs:{x:a},backend:n,attrs:{shape:x}}),N=_n({inputs:{x:s},backend:n,attrs:{shape:w}}),C=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(N.dataId).id,A=i?I.shape[2]:I.shape[1],R=o?N.shape[1]:N.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,R],I.dtype),M=n.dataIdMap.get(S.dataId).id,B=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(N.shape).buffer);return s$(C,B,I.shape.length,E,U,N.shape.length,i,o,M),n.disposeData(I.dataId),n.disposeData(N.dataId),S.shape=b,S}var fle={kernelName:fi,backendName:"wasm",setupFunc:cle,kernelFunc:mle};function ri(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Pt.parseSliceParams(t,n,r),o=Pt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=v.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let m=Pt.computeFlatOffset(s,p);return t.dtype==="string"?h.stringBytes=l.slice(m,m+v.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(m,m+v.sizeFromShape(i))),u}if(t.dtype==="string"){let m=pc(l,s,i,t.shape,t.dtype);return h.stringBytes=m,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(c===2)gle(l,p[0],d,s,i);else if(c===3)yle(l,p[0],p[1],d,s,i);else if(c===4)ble(l,p[0],p[1],p[2],d,s,i);else{let m=pc(l,s,i,t.shape,t.dtype);d.set(m)}return u}function gle(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let p=u*t+o;n.set(e.subarray(p,p+a[1]),s),s+=a[1]}}function yle(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],h=l+s[1];for(let d=o;d<p;d++)for(let c=l;c<h;c++){let m=d*t+c*n+u;r.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function ble(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],m=s[3];for(let f=l;f<h;f++)for(let g=u;g<d;g++)for(let y=p;y<c;y++){let b=f*t+g*n+y*r+m;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var xle={kernelName:hu,backendName:"wasm",kernelFunc:ri};function wle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=_n({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Ya({inputs:{x:c},backend:n,attrs:{perm:u}}),f=_n({inputs:{x:m},backend:n,attrs:{shape:p}}),g=ri({inputs:{x:f},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}var vle={kernelName:Cl,backendName:"wasm",kernelFunc:wle},i$;function kle(e){i$=e.wasm.cwrap(_l,null,["number","number","boolean","number","number","number"])}function Ile(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=s.shape.reduce((h,d)=>h*d,1)!==0,l=a.shape.length===1?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function p(h){return t.dataIdMap.get(h.dataId).id}return i$(p(a),i,o,p(s),Xe[s.dtype],p(u)),u}var Sle={kernelName:_l,backendName:"wasm",setupFunc:kle,kernelFunc:Ile},Nle=!0,Tle=Ot(El,Nle);function Cle(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var _le={kernelName:Vp,backendName:"wasm",kernelFunc:Cle};function cs(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Ele={kernelName:gi,backendName:"wasm",kernelFunc:cs},$le=He(yi),o$;function Ale(e){o$=e.wasm.cwrap(ns,null,["number","number","number","number"])}function Fle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return o$(o,s,i,u),l}var Rle={kernelName:ns,backendName:"wasm",setupFunc:Ale,kernelFunc:Fle};function l$(e){let{inputs:t,backend:n}=e,r=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);T.assertParamsConsistent(a,r);let s=T.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return jm({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(v.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let w=[-1,v.sizeFromShape(x.shape.slice(r))];return _n({inputs:{x},backend:n,attrs:{shape:w}})}),m=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(c.map(x=>x.shape),1);let f=c[0].shape[0]===1,g=x0(m,s,t[0].dtype,f),y=T.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=v.sizeFromShape(i[0].shape.slice(0,r)),u=0,p=i.map(c=>{let m=v.sizeFromShape(c.shape.slice(r));return u+=m,m}),h=i.map(c=>n.typedArrayFromHeap(c)),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let m=c*u;for(let f=0;f<h.length;f++){let g=p[f],y=c*g,b=h[f].subarray(y,y+g);d.set(b,m),m+=g}}return o}var Dle={kernelName:$l,backendName:"wasm",kernelFunc:l$},u$;function Mle(e){u$=e.wasm.cwrap(bi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ole(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=n,c=T.convertConv2DDataFormat(d),m=T.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,w=m.padInfo.left,I=m.dilationHeight,N=m.dilationWidth,C=m.strideHeight,E=m.strideWidth,A=m.inChannels,R=m.outChannels,F=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(m.outShape,"float32"),M=r.dataIdMap.get(S.dataId).id;return u$(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,w,F,I,N,C,E,A,R,M),S}var Lle={kernelName:bi,backendName:"wasm",setupFunc:Mle,kernelFunc:Ole},p$;function zle(e){p$=e.wasm.cwrap(xi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ple(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,h=1,d=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(p,s.shape,i,h,o,u,!1,d),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:I,outWidth:N,strideHeight:C,strideWidth:E}=c,A=f-1-c.padInfo.top,R=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=v.computeStrides(c.inShape),M=v.computeStrides(a.shape),[B,U,H]=v.computeStrides(s.shape),q=S[0],K=F?S[1]:S[2],Z=F?S[2]:1,J=F?1:S[1],ee=M[0],re=F?M[1]:M[2],te=F?M[2]:1,ae=F?1:M[1],se=t.makeOutput(c.inShape,"float32"),xe=t.dataIdMap.get(se.dataId).id,ue=t.dataIdMap.get(a.dataId).id,be=t.dataIdMap.get(s.dataId).id;return p$(ue,be,m,f,g,b,x,y,I,N,w,C,E,A,R,B,U,H,q,K,Z,J,ee,re,te,ae,xe),se}var Ble={kernelName:xi,backendName:"wasm",setupFunc:zle,kernelFunc:Ple},d$;function Wle(e){d$=e.wasm.cwrap(wi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),p=n.makeOutput(u.outShape,a.dtype);return d$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var Ule={kernelName:wi,backendName:"wasm",setupFunc:Wle,kernelFunc:Vle},h$;function Gle(e){h$=e.wasm.cwrap(Al,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Hle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,l,i,1,o),p=n.makeOutput(u.filterShape,s.dtype);return h$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var jle={kernelName:Al,backendName:"wasm",setupFunc:Gle,kernelFunc:Hle},c$;function qle(e){c$=e.wasm.cwrap(Fl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kle(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(l,s.shape,o,1,i),p=n.makeOutput(u.inShape,a.dtype);return c$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var Xle={kernelName:Fl,backendName:"wasm",setupFunc:qle,kernelFunc:Kle},Zle=He(vi),Jle=He(ki),Hb;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Hb||(Hb={}));var m$;function Yle(e){m$=e.wasm.cwrap(Dl,null,["number","number","number","number","array","number","number","number","number","number"])}function Qle(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,p=l.shape[0],[h,d]=i,c=[p,h,d,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=cs({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),w=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return m$(g,y,b,p,I,h,d,Hb[a],s,w),f!=null&&t.disposeData(f.dataId),x}var eue={kernelName:Dl,backendName:"wasm",setupFunc:Yle,kernelFunc:Qle},f$;function tue(e){f$=e.wasm.cwrap(Rl,null,["number","number","number","number","number","number"])}function nue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),p=a;u!==null&&(p=Ya({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],m=n.dataIdMap.get(p.dataId).id,f=n.dataIdMap.get(d.dataId).id;f$(m,i?1:0,o?1:0,c,f,Xe[a.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Ya({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}var rue={kernelName:Rl,backendName:"wasm",setupFunc:tue,kernelFunc:nue},g$;function aue(e){g$=e.wasm.cwrap(Ii,null,["number","number","number","number","number","number"])}function sue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),p=a;u!==null&&(p=Ya({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],m=n.dataIdMap.get(p.dataId).id,f=n.dataIdMap.get(d.dataId).id;g$(m,i?1:0,o?1:0,c,f,Xe[a.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Ya({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}var iue={kernelName:Ii,backendName:"wasm",setupFunc:aue,kernelFunc:sue},y$;function oue(e){y$=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function lue(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=s.shape.reduce((d,c)=>d*c,1)!==0,u=a.shape.length===1?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function h(d){return t.dataIdMap.get(d.dataId).id}return y$(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),Xe[s.dtype],o,h(p)),p}var uue={kernelName:Gp,backendName:"wasm",setupFunc:oue,kernelFunc:lue},b$;function pue(e){b$=e.wasm.cwrap(Ml,null,["number","number","number","array","number","array","array","number","number"])}function due(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],p=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),m=i==="NHWC"?[o,h,d,c]:[o,c,h,d],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer),w=t.dataIdMap.get(f.dataId).id;return b$(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,m.length,w),f}var hue={kernelName:Ml,backendName:"wasm",setupFunc:pue,kernelFunc:due},x$;function cue(e){x$=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=n,d=u??[1,1],c=T.computeConv2DInfo(a.shape,s.shape,l,d,p,h,!0),m=c.filterHeight,f=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,I=c.dilationWidth,N=c.strideHeight,C=c.strideWidth,E=c.inChannels,A=c.outChannels,R=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return x$(i,a.shape[0],a.shape[1],a.shape[2],o,m,f,g,y,b,x,R,w,I,N,C,E,A,S),F}var fue={kernelName:Si,backendName:"wasm",setupFunc:cue,kernelFunc:mue},w$;function gue(e){w$=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function yue(e){let{inputs:t,backend:n}=e,{x:r}=t,a=v.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return w$(n.dataIdMap.get(r.dataId).id,Xe[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var bue={kernelName:Hp,backendName:"wasm",setupFunc:gue,kernelFunc:yue},v$;function xue(e){v$=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p=n.makeOutput(u.outShape,a.dtype);return v$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,Xe[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),p}var vue={kernelName:Ni,backendName:"wasm",setupFunc:xue,kernelFunc:wue},k$;function kue(e){k$=e.wasm.cwrap(al,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return k$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}var Sue={kernelName:al,backendName:"wasm",setupFunc:kue,kernelFunc:Iue},I$;function Nue(e){I$=e.wasm.cwrap(rl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return I$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}var Cue={kernelName:rl,backendName:"wasm",setupFunc:Nue,kernelFunc:Tue},_ue=He(Ci),S$;function Eue(e){S$=e.wasm.cwrap(Ol,null,["number","number","number"])}function $ue(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return S$(i(a),i(r),i(s)),s}var Aue={kernelName:Ol,backendName:"wasm",setupFunc:Eue,kernelFunc:$ue},Fue=!1,Rue=Ot(Ll,Fue,"bool"),Due=He(_i),Mue=He(Ei,"float32");function jb(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),_n({inputs:{x:a},backend:r,attrs:{shape:o}})}var Oue={kernelName:zl,backendName:"wasm",kernelFunc:jb},Lue=He($i,"float32");function N$(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||v.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var zue={kernelName:jp,backendName:"wasm",kernelFunc:N$},T$;function Pue(e){T$=e.wasm.cwrap(Pl,null,["number","number","number","number","number","number"])}function Bue(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return T$(s,o,l,u,p,i),a}var Wue={kernelName:Pl,backendName:"wasm",kernelFunc:Bue,setupFunc:Pue},Vue=He(Ai),Uue=!1,Gue=Ot(Fi,Uue),C$;function Hue(e){C$=e.wasm.cwrap(Ri,null,["number","number","number","number","number","number","number"])}function jue(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,m=u!=null?t.dataIdMap.get(u.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return C$(p,h,d,c,m,a,g),f}var que={kernelName:Ri,backendName:"wasm",setupFunc:Hue,kernelFunc:jue},_$;function Kue(e){_$=e.wasm.cwrap(Ps,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Xue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,p,u,d),g=Mp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=f.filterHeight,N=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,B=f.strideWidth,U=f.inChannels,H=f.padInfo.type==="SAME"?1:0,q=f.batchSize,K=f.inHeight,Z=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let J=r.makeOutput(f.outShape,"float32"),ee=r.dataIdMap.get(J.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return _$(y,q,K,Z,b,I,N,w,C,E,A,R,H,F,S,M,B,U,x,g,re,m||0,ee),J}var Zue={kernelName:Ps,backendName:"wasm",setupFunc:Kue,kernelFunc:Xue},E$;function Jue(e){E$=e.wasm.cwrap(Bs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!0),g=Mp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=f.filterHeight,N=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,B=f.strideWidth,U=f.inChannels,H=f.padInfo.type==="SAME"?1:0,q=f.batchSize,K=f.inHeight,Z=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let J=r.makeOutput(f.outShape,"float32"),ee=r.dataIdMap.get(J.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return E$(y,q,K,Z,b,I,N,w,C,E,A,R,H,F,S,M,B,U,x,g,re,m||0,ee),J}var Que={kernelName:Bs,backendName:"wasm",setupFunc:Jue,kernelFunc:Yue},$$;function epe(e){$$=e.wasm.cwrap(Wl,null,["number","number","number","number","number","number","array","number"])}function tpe(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Aw.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(i===0)return u;let p=a.shape,h=p[p.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(u.dataId).id;return $$(d,Xe[r.dtype],c,i,h,o,m,f),u}var npe={kernelName:Wl,backendName:"wasm",setupFunc:epe,kernelFunc:tpe},A$;function rpe(e){A$=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function ape(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=v.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let C=0;C<u.length;++C){let E=u[C];v.assert(E<=p-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${p-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=_n({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=v.sizeFromShape(s.shape),m=_n({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),f=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(f,a.dtype);if(v.sizeFromShape(a.shape)===0)return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(m.dataId).id,w=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),N=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer);return A$(b,Xe[a.dtype],I,y,x,h.batchSize,N,w),t.disposeData(d.dataId),t.disposeData(m.dataId),g.shape=h.outputShape,g}var spe={kernelName:Bl,backendName:"wasm",setupFunc:rpe,kernelFunc:ape},ipe=!1,ope=Ot(Vl,ipe,"bool"),lpe=!1,upe=Ot(Di,lpe,"bool"),ppe=He(Oi,"bool"),dpe=He(Li,"bool"),hpe=He(zi,"bool"),F$;function cpe(e){F$=e.wasm.cwrap(Pi,null,["number","number","number","number"])}function mpe(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;F$(a,Xe[t.dtype],n,i)}return s}var fpe={kernelName:Pi,backendName:"wasm",setupFunc:cpe,kernelFunc:mpe},gpe=!1,ype=Ot(Ul,gpe,"bool"),bpe=!1,xpe=Ot(Gl,bpe,"bool"),R$;function wpe(e){R$=e.wasm.cwrap(Hl,null,["number","number","number","number"])}function vpe(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return R$(n.dataIdMap.get(o.dataId).id,r,a,i),o}var kpe={kernelName:Hl,backendName:"wasm",setupFunc:wpe,kernelFunc:vpe},Ipe=He(Bi),Spe=He(Wi),Npe=!1,Tpe=Ot(jl,Npe,"bool"),Cpe=He(ql),_pe=!1,Epe=Ot(Kl,_pe,"bool"),$pe=!1,Ape=Ot(MI,$pe,"bool"),D$;function Fpe(e){D$=e.wasm.cwrap(Vi,null,["number","number","number","number","number","number","number"])}function Rpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return D$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}var Dpe={kernelName:Vi,backendName:"wasm",setupFunc:Fpe,kernelFunc:Rpe},M$;function Mpe(e){M$=e.wasm.cwrap(Xl,null,["number","number","number","number","number","number","number","number","number"])}function Ope(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return M$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,p),h}var Lpe={kernelName:Xl,backendName:"wasm",setupFunc:Mpe,kernelFunc:Ope},O$;function zpe(e){O$=e.wasm.cwrap(Ui,null,["number","number","number","number"])}function Ppe(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=hs(i,a,t);if(d){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",p,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;O$(o,Xe[i.dtype],g,b)}if(d&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var Bpe={kernelName:Ui,backendName:"wasm",setupFunc:zpe,kernelFunc:Ppe},Wpe=!1,Vpe=Ot(Gi,Wpe),L$;function Upe(e){L$=e.wasm.cwrap(Hi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gpe(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;v.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=T.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,w=p.strideWidth,I=p.inChannels,N=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(p.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return L$(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,m,f,g,y,b,x,w,I,N,E),C}var Hpe={kernelName:Hi,backendName:"wasm",setupFunc:Upe,kernelFunc:Gpe},z$;function jpe(e){z$=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return z$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var Kpe={kernelName:Zl,backendName:"wasm",setupFunc:jpe,kernelFunc:qpe},P$;function Xpe(e){P$=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zpe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return P$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var Jpe={kernelName:Kp,backendName:"wasm",setupFunc:Xpe,kernelFunc:Zpe},B$;function Ype(e){B$=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Qpe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=T.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return B$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),h}var ede={kernelName:qp,backendName:"wasm",setupFunc:Ype,kernelFunc:Qpe},W$;function tde(e){W$=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;v.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(p.outShape,a.dtype),d=n.makeOutput(p.outShape,"int32");return W$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(d.dataId).id,Xe[a.dtype],l,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),[h,d]}var rde={kernelName:Xp,backendName:"wasm",setupFunc:tde,kernelFunc:nde},V$;function ade(e){V$=e.wasm.cwrap(ji,null,["number, number, number"])}function sde(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=hs(i,a,t),m=h;if(c){let w=t.dataIdMap.get(p.dataId).id;w!==o&&(u=p,l=w,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=v.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=cs({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(v.sizeFromShape(u.shape)!==0){let w=t.dataIdMap.get(x.dataId).id;V$(l,y,w)}if(c&&t.disposeData(p.dataId),s){let w=T.expandShapeToKeepDim(x.shape,d);x.shape=w}return u.dtype!=="float32"&&t.disposeData(b.dataId),x}var ide={kernelName:ji,backendName:"wasm",setupFunc:ade,kernelFunc:sde},U$;function ode(e){U$=e.wasm.cwrap(qi,null,["number","number","number","number"])}function lde(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=hs(i,a,t);if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x)}let m=u.shape.length;T.assertAxesAreInnerMostDims("min",h,m);let[f,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;U$(l,Xe[i.dtype],y,x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var ude={kernelName:qi,backendName:"wasm",setupFunc:ode,kernelFunc:lde},pde=!1,dde=Ot(Ki,pde),qb;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(qb||(qb={}));var G$;function hde(e){G$=e.wasm.cwrap(Xi,null,["number","array","number","number","array","array","number","number"])}function cde(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(m=>m[0]),h=r.map(m=>m[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return G$(i,u,t.shape.length,Xe[t.dtype],d,c,qb[a],l),o}var mde={kernelName:Xi,backendName:"wasm",kernelFunc:cde,setupFunc:hde},H$;function fde(e){H$=e.wasm.cwrap(wo,null,["number","number","number","number"])}function j$(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=v.sizeFromShape(n.shape)/o;return v.sizeFromShape(s.shape)===0||H$(a,i,o,l),s}var gde={kernelName:wo,backendName:"wasm",setupFunc:fde,kernelFunc:j$},q$;function yde(e){q$=e.wasm.cwrap(Jl,null,["number","number","number","number","number","number"])}function bde(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:j$({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,p]=l.shape,h=n.makeOutput([u,s],"int32");return q$(n.dataIdMap.get(l.dataId).id,u,p,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}var xde={kernelName:Jl,backendName:"wasm",setupFunc:yde,kernelFunc:bde},wde=Ot(Zi,!0),vde=!0,kde=Ot(Ji,vde),Ide=He(Yl);function K0(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var K$;function Sde(e){K$=e.wasm.cwrap(eu,"number",["number","number","number","number","number"])}function Nde(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=K$(u,p,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=K0(t,h);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([c],"int32",d)}var Tde={kernelName:eu,backendName:"wasm",setupFunc:Sde,kernelFunc:Nde},X$;function Cde(e){X$=e.wasm.cwrap(tu,"number",["number","number","number","number","number","bool"])}function _de(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=X$(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=K0(t,d);t.wasm._free(f);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var Ede={kernelName:tu,backendName:"wasm",setupFunc:Cde,kernelFunc:_de},Z$;function $de(e){Z$=e.wasm.cwrap(nu,"number",["number","number","number","number","number","number"])}function Ade(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=Z$(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=K0(t,d);t.wasm._free(g);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([m],"float32",f);return[y,b]}var Fde={kernelName:nu,backendName:"wasm",setupFunc:$de,kernelFunc:Ade},Rde=!1,Dde=Ot(Ql,Rde,"bool"),J$;function Mde(e){J$=e.wasm.cwrap(Yi,null,["number","number","number","number","number"])}function Ode(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),p=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return J$(h,i,o,l,p),u}var Lde={kernelName:Yi,backendName:"wasm",setupFunc:Mde,kernelFunc:Ode};function zde(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var Pde={kernelName:ru,backendName:"wasm",kernelFunc:zde};function Bde(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return jb({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=jb({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),u=l$({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeData(p.dataId)),u}var Wde={kernelName:au,backendName:"wasm",kernelFunc:Bde},Y$;function Vde(e){Y$=e.wasm.cwrap(Qi,null,["number","array","number","number","array","array","number","number"])}function Ude(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]);if(v.sizeFromShape(t.shape)===0)return N$({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(m=>m[0]),h=r.map(m=>m[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return Y$(i,u,t.shape.length,Xe[t.dtype],d,c,a,l),o}var Q$={kernelName:Qi,backendName:"wasm",kernelFunc:Ude,setupFunc:Vde},Gde=!1,Hde=Ot(eo,Gde),eA;function jde(e){eA=e.wasm.cwrap(to,null,["number","number","number"])}function qde(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;l.dtype!=="float32"&&(u=cs({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(p.dataId).id;return eA(o,i,h),l.dtype!=="float32"&&n.disposeData(u.dataId),p}var Kde={kernelName:to,backendName:"wasm",setupFunc:jde,kernelFunc:qde},tA;function Xde(e){tA=e.wasm.cwrap(no,null,["number","number","number","number"])}function Zde(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=hs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=v.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;tA(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Jde={kernelName:no,backendName:"wasm",setupFunc:Xde,kernelFunc:Zde},Yde=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=k0(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Qde={kernelName:Zp,backendName:"wasm",kernelFunc:Yde},ehe=!0,the=Ot(Ti,ehe),nhe=He(ro),rhe=He(ao),ahe=He(oo),nA;function she(e){nA=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number"])}function ihe(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,m=[p,l,u,c],f=t.dataIdMap.get(a.dataId),g;f.dtype!=="float32"&&(g=cs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(v.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return nA(y,p,h,d,c,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var ohe={kernelName:io,backendName:"wasm",setupFunc:she,kernelFunc:ihe},rA;function lhe(e){rA=e.wasm.cwrap(ou,null,["number","number","number","array","array","boolean"])}function uhe(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=cs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),rA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var phe={kernelName:ou,backendName:"wasm",setupFunc:lhe,kernelFunc:uhe},aA;function dhe(e){aA=e.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number"])}function hhe(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,m=[p,l,u,c],f=t.makeOutput(m,"float32");if(v.sizeFromShape(a.shape)===0)return f;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=cs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return aA(b,p,h,d,c,l,u,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),f}var che={kernelName:so,backendName:"wasm",setupFunc:dhe,kernelFunc:hhe},sA;function mhe(e){sA=e.wasm.cwrap(iu,null,["number","number","number","array","array","boolean"])}function fhe(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=cs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),sA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var ghe={kernelName:iu,backendName:"wasm",setupFunc:mhe,kernelFunc:fhe},iA;function yhe(e){iA=e.wasm.cwrap(lo,null,["number","array","number","array","number","number"])}function bhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=v.parseAxisParam(s,a.shape);if(a.shape.length===0)return jm({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);iA(l,p,i.length,h,a.shape.length,u);let d=_n({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d}var xhe={kernelName:lo,backendName:"wasm",kernelFunc:bhe,setupFunc:yhe},oA;function whe(e){oA=e.wasm.cwrap(ku,null,["number","number","number","number","number","number","number","number","array","number","number"])}function vhe(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,c,m]=a.shape,[f,g]=T.getImageCenter(o,d,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return oA(u,h,d,c,m,s,f,g,w,x.length,p),l}var khe={kernelName:ku,backendName:"wasm",kernelFunc:vhe,setupFunc:whe},Ihe=He(uo),She=He(po),lA;function Nhe(e){lA=e.wasm.cwrap(lu,null,["number","number","number","number","number","number","array","number","number"])}function The(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=lm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return lA(c,m,Xe[s.dtype],l,u,p,f,d,g),o}var Che={kernelName:lu,backendName:"wasm",setupFunc:Nhe,kernelFunc:The},uA;function _he(e){uA=e.wasm.cwrap(pu,null,["number","number","number","number","number","number","bool","number"])}function Ehe(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(u){return n.dataIdMap.get(u.dataId).id}return uA(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],Xe[a.dtype],i==="left",l(o)),o}var $he={kernelName:pu,backendName:"wasm",setupFunc:_he,kernelFunc:Ehe},pA;function Ahe(e){pA=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Fhe(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,h=r.shape.length,d=a.shape.length,c=h===0||h>1||d===1?1:v.sizeFromShape(a.shape.slice(1));return pA(i,o,l,c,p),u}var Rhe={kernelName:du,backendName:"wasm",kernelFunc:Fhe,setupFunc:Ahe},Dhe=He(ho),dA;function Mhe(e){dA=e.wasm.cwrap(go,null,["number","number"])}function Ohe(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return v.sizeFromShape(a.shape)===0||dA(r,s),a}var Lhe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Mhe,kernelFunc:Ohe},zhe=He(fo),Phe=He(co),Bhe=He(mo),Whe=He(yo);function Vhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=Q$.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),d=T.getReshapedPermuted(u.shape,s,o,!1),c=_n({inputs:{x:u},backend:n,attrs:{shape:p}}),m=Ya({inputs:{x:c},backend:n,attrs:{perm:h}}),f=_n({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}var Uhe={kernelName:cu,backendName:"wasm",kernelFunc:Vhe},hA;function Ghe(e){hA=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Hhe(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],p=[o+u,l],h=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,m=t.makeOutput(p,r.dtype),f=t.dataIdMap.get(m.dataId).id,g=t.makeOutput(p.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([u],"bool"),x=t.dataIdMap.get(b.dataId).id,w=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(w.dataId).id,N=t.makeOutput([4],"int32"),C=t.dataIdMap.get(N.dataId).id,E=hA(h,d,Xe[a.dtype],o,u,l,c,f,y,x,I,C),A=t.readSync(N.dataId),R;switch(A[0]){case 1:{R=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{R=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:R=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:R=""}if(t.disposeData(N.dataId),R)throw t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(w.dataId),new Error(R);let F=m,S=g;return E!==p[0]&&(F=ri({inputs:{x:m},attrs:{begin:0,size:[E,l]},backend:t}),S=ri({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(m.dataId),t.disposeData(g.dataId)),[F,S,b,w]}var jhe={kernelName:Jp,backendName:"wasm",setupFunc:Ghe,kernelFunc:Hhe},cA;function qhe(e){cA=e.wasm.cwrap(fu,null,["number","number","number","number","number","number","number"])}function Khe(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=v.sizeFromShape(s.shape),h=t.makeOutput([u,p],r.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),m=t.dataIdMap.get(c.dataId).id,f=t.makeOutput([3],"int32"),g=t.dataIdMap.get(f.dataId).id;cA(i,o,l,u,d,m,g);let y=t.readSync(f.dataId),b;switch(y[0]){case 0:{b=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMultipleErrorMessage(x,w);break}case 4:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMismatchErrorMessage(x,w);break}default:b=""}if(t.disposeData(f.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}var Xhe={kernelName:fu,backendName:"wasm",setupFunc:qhe,kernelFunc:Khe},mA;function fA(e){mA=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function gA(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(p,a.dtype),f=n.dataIdMap.get(m.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;mA(h,Xe[a.dtype],a.shape[0],d,c,f,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function Zhe(e){return gA(e,!0)}var Jhe={kernelName:Yp,backendName:"wasm",setupFunc:fA,kernelFunc:Zhe};function Yhe(e){return gA(e,!1)}var Qhe={kernelName:Qp,backendName:"wasm",setupFunc:fA,kernelFunc:Yhe},yA;function ece(e){yA=e.wasm.cwrap(gu,null,["number","number","number","number","number","number","number","number","array","number","number"])}function tce(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(v.sizeFromShape(o)===0)return l;let{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=T.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=t.dataIdMap.get(l.dataId).id;return yA(m,f,s.shape.length,g,Xe[i.dtype],u,p,h,y,c,b),l}var nce={kernelName:gu,backendName:"wasm",setupFunc:ece,kernelFunc:tce};function rce(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=ri({inputs:{x:a},attrs:{begin:u,size:d},backend:r});return u[o]+=h,c})}var ace={kernelName:mu,backendName:"wasm",kernelFunc:rce},sce=He(bo),ice=He(ed),oce=!0,lce=Ot(vo,oce),bA;function uce(e){bA=e.wasm.cwrap(as,null,["number","number","number","number"])}function pce(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return bA(i,a,Xe[s.dtype],l),o}var dce={kernelName:as,backendName:"wasm",setupFunc:uce,kernelFunc:pce},xA;function hce(e){xA=e.wasm.cwrap(yu,null,["number","array","number","array","array","array","array","array","number","number"])}function cce(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Pt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),I;if(f)I=_n({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Pt.computeOutShape(b,x,w),C=ri({inputs:{x:a},backend:t,attrs:{begin:b,size:N}});I=_n({inputs:{x:C},backend:t,attrs:{shape:m}}),t.disposeData(C.dataId)}else{let N=t.makeOutput(c,"float32"),C=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(w).buffer),S=new Uint8Array(new Int32Array(c).buffer),M=new Uint8Array(new Int32Array(v.computeStrides(c)).buffer),B=t.dataIdMap.get(N.dataId).id;xA(C,E,a.shape.length,A,R,F,S,M,c.length,B),I=_n({inputs:{x:N},backend:t,attrs:{shape:m}}),t.disposeData(N.dataId)}return I}var mce={kernelName:yu,backendName:"wasm",setupFunc:hce,kernelFunc:cce};function fce(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[m,f]=S0(d,c,i,o,l,u,p,h),g=t.makeOutput([m.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=m;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(f),[g,b]}var gce={kernelName:nd,backendName:"wasm",kernelFunc:fce};function yce(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,h]=N0(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let m=t.makeOutput([d],"string"),f=t.dataIdMap.get(m.dataId);f.stringBytes=p;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,m,g]}var bce={kernelName:rd,backendName:"wasm",kernelFunc:yce};function xce(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=T0(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var wce={kernelName:ad,backendName:"wasm",kernelFunc:xce},vce=!0,kce=Ot(ko,vce),wA;function Ice(e){wA=e.wasm.cwrap(xo,null,["number","number","number","number"])}function Sce(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=hs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=v.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;wA(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Nce={kernelName:xo,backendName:"wasm",setupFunc:Ice,kernelFunc:Sce},Tce=He(Io),Cce=He(So),vA;function _ce(e){vA=e.wasm.cwrap(uu,null,["number","number","number","number","number","number","array","number","number","number"])}function Ece(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=lm.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return vA(c,m,Xe[i.dtype],l,u,p,g,d,y,f),o}var $ce={kernelName:uu,backendName:"wasm",setupFunc:_ce,kernelFunc:Ece},kA;function Ace(e){kA=e.wasm.cwrap(rs,null,["number","array","number","array","number","number"])}function Fce(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(p.dataId).id;return kA(s,l,a.shape.length,u,o.length,Xe[p.dtype],h),p}var Rce={kernelName:rs,backendName:"wasm",setupFunc:Ace,kernelFunc:Fce},IA;function Dce(e){IA=e.wasm.cwrap(bu,null,["number","array","number","number","number","bool","number","number"])}var Mce=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return IA(i,o,r.shape.length,Xe[r.dtype],a,s,p,d),[u,h]},Oce={kernelName:bu,backendName:"wasm",setupFunc:Dce,kernelFunc:Mce},SA;function Lce(e){SA=e.wasm.cwrap(xu,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function zce(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[m,f]=u??[h,d],g=[p,m,f,c],y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),w=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,N=t.dataIdMap.get(s.dataId).id,C=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return SA(I,N,s.shape[0]>1,p,m,f,c,d,h,y,a.shape.length-1,b,g.length-1,C,E,l,w),x}var Pce={kernelName:xu,backendName:"wasm",setupFunc:Lce,kernelFunc:zce};function Bce(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=_0(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}var Wce={kernelName:sd,backendName:"wasm",kernelFunc:Bce};function Vce(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<p.length;c++)h[s]=c,p[c]=ri({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return p.map(({dataId:c,dtype:m})=>({dataId:c,dtype:m,shape:l}))}var Uce={kernelName:wu,backendName:"wasm",kernelFunc:Vce};function Gce(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var Hce={kernelName:vu,backendName:"wasm",kernelFunc:Gce},jce=[Coe,_oe,Eoe,$oe,Foe,Moe,Uoe,joe,qoe,Koe,Xoe,Zoe,Joe,Yoe,Qoe,nle,dle,sle,lle,fle,vle,Sle,Tle,_le,Ele,$le,Rle,Dle,Lle,Ble,Ule,jle,Xle,Zle,Jle,eue,rue,iue,uue,hue,fue,bue,vue,Sue,Cue,_ue,Aue,Rue,Due,Mue,Oue,Lue,zue,Wue,Vue,Gue,que,Zue,Que,npe,spe,ope,upe,Ooe,ppe,dpe,hpe,fpe,ype,xpe,kpe,Spe,Ipe,Tpe,Cpe,Epe,Ape,Dpe,Lpe,Bpe,Vpe,Hpe,Kpe,Jpe,ede,rde,ide,ude,dde,mde,xde,wde,kde,Ide,Tde,Ede,Fde,Dde,Lde,Pde,Wde,Q$,Hde,Kde,Jde,Qde,the,nhe,rhe,ahe,hle,ohe,phe,che,ghe,xhe,khe,Ihe,She,Che,$he,Rhe,Dhe,Lhe,zhe,Phe,Bhe,xle,gde,Whe,Uhe,jhe,Xhe,Jhe,Qhe,nce,ace,sce,ice,lce,dce,mce,gce,bce,wce,kce,Nce,Tce,Cce,$ce,Rce,Oce,Pce,Boe,Wce,Uce,Hce];for(let e of jce)od(e);var Kb=G();Kb.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});Kb.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Kb.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var cI=es(yR()),qce=es(bR()),mI=es(xR()),fI=cI.default||cI,Kce=mI.default||mI,NA=class extends zp{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(TA),Xb=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new vc(this,dr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=v.sizeFromShape(n),o=i*v.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||v.sizeFromShape(s);let o=v.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return Jce(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(n==null)a=this.write(r??null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Xce(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function gI(e,t,n){if(yc!=null)return yc;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),fp!=null&&fp[r]!=null?fp[r]:n+r}async function Zce(){let[e,t]=await Promise.all([G().getAsync("WASM_HAS_SIMD_SUPPORT"),G().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=qce.wasmWorkerContents.replace(/\n/g,"\\n"),p=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(p)}return o.endsWith(".wasm")?gI(e,t,hp??l):l+o},X0&&(a.instantiateWasm=Xce(gI(e,t,hp??"")));let s=!1;a.onAbort=()=>{s||gp||(gp=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&yc==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+fI.toString()],{type:"text/javascript"}),i=fI(a)):i=Kce(a),i.then(o=>{s=!0,gp=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})}).catch(r)})}function Jce(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Yce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],yc=null,hp=null,fp={},gp=!1,X0=!1;function Qce(e,t=!1){if(hx("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),gp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");yc=e,X0=t}function eme(e,t=!1){if(gp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")hp=e;else{fp=e;let n=Yce.filter(r=>fp[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}X0=t}var TA=-1,Xb=-1;function tme(e){TA=e}function nme(){if(Xb===-1)throw new Error("WASM backend not initialized.");return Xb}var rme="4.16.0",ame=2;Pc("wasm",async()=>{let{wasm:e}=await Zce();return new NA(e)},ame);var yI="4.16.0",sme="4.16.0",ime="4.16.0",ome="4.16.0",lme="4.16.0",ume={tfjs:yI,"tfjs-core":yI,"tfjs-converter":sme,"tfjs-backend-cpu":ime,"tfjs-backend-webgl":ome,"tfjs-backend-wasm":lme},Z0={};tx(Z0,{AnchorPosition:()=>WA,DrawBox:()=>GA,DrawBoxOptions:()=>UA,DrawFaceLandmarks:()=>iF,DrawFaceLandmarksOptions:()=>sF,DrawTextField:()=>r1,DrawTextFieldOptions:()=>n1,drawContour:()=>Ea,drawDetections:()=>kme,drawFaceExpressions:()=>Ome,drawFaceLandmarks:()=>zme});function Ea(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var pme={};tx(pme,{computeReshapedDimensions:()=>$A,getCenterPoint:()=>Y0,isDimensions:()=>Jb,isEven:()=>Zb,isFloat:()=>EA,isTensor:()=>Uu,isTensor1D:()=>dme,isTensor2D:()=>_A,isTensor3D:()=>Bd,isTensor4D:()=>ua,isValidNumber:()=>Ls,isValidProbablitiy:()=>hme,range:()=>xl,round:()=>J0});var Os=class CA{constructor(t,n){if(!Ls(t)||!Ls(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new CA(1/this.width,1/this.height)}};function Uu(e,t){return e instanceof Le&&e.shape.length===t}function dme(e){return Uu(e,1)}function _A(e){return Uu(e,2)}function Bd(e){return Uu(e,3)}function ua(e){return Uu(e,4)}function EA(e){return e%1!==0}function Zb(e){return e%2===0}function J0(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Jb(e){return e&&e.width&&e.height}function $A({width:e,height:t},n){let r=n/Math.max(t,e);return new Os(Math.round(e*r),Math.round(t*r))}function Y0(e){return e.reduce((t,n)=>t.add(n),new st(0,0)).div(new st(e.length,e.length))}function xl(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function Ls(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function hme(e){return Ls(e)&&e>=0&&e<=1}var st=class Ns{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Ns(this.x+t.x,this.y+t.y)}sub(t){return new Ns(this.x-t.x,this.y-t.y)}mul(t){return new Ns(this.x*t.x,this.y*t.y)}div(t){return new Ns(this.x/t.x,this.y/t.y)}abs(){return new Ns(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Ns(Math.floor(this.x),Math.floor(this.y))}},ai=class vr{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(Ls)}static assertIsValidBox(t,n,r=!1){if(!vr.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(Ls),s=[r.x,r.y,r.width,r.height].every(Ls);if(!s&&!a)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];vr.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new st(this.left,this.top)}get topRight(){return new st(this.right,this.top)}get bottomLeft(){return new st(this.left,this.bottom)}get bottomRight(){return new st(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new vr({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new vr({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new vr({x:t,y:n,width:r,height:a})}rescale(t){let n=Jb(t)?t.width:t,r=Jb(t)?t.height:t;return new vr({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new vr({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=s-o,p=i-l,h=Math.min(u,t-o),d=Math.min(p,n-l);return new vr({x:o,y:l,width:h,height:d}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new vr({x:s,y:i,width:r,height:a})}padAtBorders(t,n){let r=this.width+1,a=this.height+1,s=1,i=1,o=r,l=a,u=this.left,p=this.top,h=this.right,d=this.bottom;return h>n&&(o=-h+n+r,h=n),d>t&&(l=-d+t+a,d=t),u<1&&(l=2-u,u=1),p<1&&(l=2-p,p=1),{dy:i,edy:l,dx:s,edx:o,y:p,ey:d,x:u,ex:h,w:r,h:a}}calibrate(t){return new vr({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},AA=class extends ai{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},FA=class RA{constructor(t,n,r,a,s){this._imageDims=new Os(s.width,s.height),this._score=t,this._classScore=n,this._className=r,this._box=new ai(a).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ai(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new RA(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},fr=class DA extends FA{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new DA(r,a,s)}};function cme(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function mme(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new AA(r,a,s,i)}function fme(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let u=0;u<o.length;u++){let p=o[u],h=e[i],d=e[p];l.push(cme(h,d,r))}a=a.filter((u,p)=>l[p]<=n)}return s}function Wd(e,t){return W(()=>{let[n,r,a]=t,s=Vn([...e.shape.slice(0,3),1],n,"float32"),i=Vn([...e.shape.slice(0,3),1],r,"float32"),o=Vn([...e.shape.slice(0,3),1],a,"float32"),l=ot([s,i,o],3);return he(e,l)})}function gme(e,t=!1){return W(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=h=>{let d=e.shape.slice();return d[i]=h,Vn(d,0,"float32")},l=o(s),u=a-l.shape[i],p=[t&&u?o(u):null,e,l].filter(h=>!!h).map(h=>oe(h,"float32"));return ot(p,i)})}function Hy(e){return 1/(1+Math.exp(-e))}var MA=class extends ai{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},yme=.5,bme=.43,xme=.45,Op=class{constructor(e,t,n=new st(0,0)){let{width:r,height:a}=t;this._imgDims=new Os(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new st(r,a)).add(n))}get shift(){return new st(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new st(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new st(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof fr?e.box.floor():new ai(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=p=>r.sub(p).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/xme),o=Y0(e),l=Math.floor(Math.max(0,o.x-yme*i)),u=Math.floor(Math.max(0,o.y-bme*i));return new MA(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=mme(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var OA=class extends Op{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Y0)}};function Lp(e){return e.detection instanceof fr}function Yb(e,t){return{...e,detection:t}}function LA(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Q0(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function zA(e){let t="";if(!e&&Q0())try{e=XF("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function PA(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=zA();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i,...o}}function BA(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Gt;function wme(){if(!Gt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Gt}function Qb(e){Gt=e}function e1(){return BA()?Qb(LA()):Q0()?Qb(PA()):null}function vme(e){if(Gt||e1(),!Gt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Gt.Canvas,Image:n=Gt.Image}=e;Gt.Canvas=t,Gt.Image=n,Gt.createCanvasElement=e.createCanvasElement||(()=>new t),Gt.createImageElement=e.createImageElement||(()=>new n),Gt.ImageData=e.ImageData||Gt.ImageData,Gt.Video=e.Video||Gt.Video,Gt.fetch=e.fetch||Gt.fetch,Gt.readFile=e.readFile||Gt.readFile}var Fn={getEnv:wme,setEnv:Qb,initialize:e1,createBrowserEnv:LA,createFileSystem:zA,createNodejsEnv:PA,monkeyPatch:vme,isBrowser:BA,isNodejs:Q0};e1();function t1(e){return!Fn.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Qa(e){let{Canvas:t,CanvasRenderingContext2D:n}=Fn.getEnv();if(e instanceof n)return e;let r=t1(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var WA=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(WA||{}),n1=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},r1=class VA{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof VA?t.text:t,this.anchor=n,this.options=new n1(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,a)=>r<a?a:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,a=r==="BOTTOM_RIGHT"||r==="TOP_RIGHT",s=r==="BOTTOM_LEFT"||r==="BOTTOM_RIGHT",i=this.measureWidth(t),o=this.measureHeight(),l=a?this.anchor.x-i:this.anchor.x,u=s?this.anchor.y-o:this.anchor.y;if(n){let{width:p,height:h}=n,d=Math.max(Math.min(l,p-i),0),c=Math.max(Math.min(u,h-o),0);return{x:d,y:c}}return{x:l,y:u}}draw(t){let n=t1(t),r=Qa(n),{backgroundColor:a,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;r.font=`${i}px ${o}`;let u=this.measureWidth(r),p=this.measureHeight();r.fillStyle=a;let h=this.getUpperLeft(r,n);r.fillRect(h.x,h.y,u,p),r.fillStyle=s,this.text.forEach((d,c)=>{let m=l+h.x,f=l+h.y+(c+1)*i;r.fillText(d,m,f)})}},UA=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new n1({...s,...a})}},GA=class{constructor(e,t={}){this.box=new ai(e),this.options=new UA(t)}draw(e){let t=Qa(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new r1([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function kme(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof fr?n.score:Lp(n)?n.detection.score:void 0,a=n instanceof fr?n.box:Lp(n)?n.detection.box:new ai(n),s=r?`${J0(r)}`:void 0;new GA(a,{label:s}).draw(e)})}function HA(e){let{Image:t,Video:n}=Fn.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Ime(e){return new Promise((t,n)=>{(e instanceof Fn.getEnv().Canvas||HA(e))&&t(null);function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function a1(e){let{Image:t,Video:n}=Fn.getEnv();return e instanceof t?new Os(e.naturalWidth,e.naturalHeight):e instanceof n?new Os(e.videoWidth,e.videoHeight):new Os(e.width,e.height)}function bc({width:e,height:t}){let{createCanvasElement:n}=Fn.getEnv(),r=n();return r.width=e,r.height=t,r}function qm(e,t){let{ImageData:n}=Fn.getEnv();if(!(e instanceof n)&&!HA(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||a1(e),s=bc({width:r,height:a});return e instanceof n?Qa(s).putImageData(e,0,0):Qa(s).drawImage(e,0,0,r,a),s}async function Sme(e,t){let n=t||Fn.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(ua(e)?1:0),i=W(()=>e.as3D(r,a,s).toInt());return await Td.toPixels(i,n),i.dispose(),n}function bI(e){let{Image:t,Canvas:n,Video:r}=Fn.getEnv();return e instanceof t||e instanceof n||e instanceof r}function Nme(e,t,n=!1){let{Image:r,Canvas:a}=Fn.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return bc({width:1,height:1});let s=a1(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=bc({width:t,height:t}),p=e instanceof a?e:qm(e),h=Math.abs(o-l)/2,d=n&&o<l?h:0,c=n&&l<o?h:0;return p.width>0&&p.height>0&&Qa(u).drawImage(p,d,c,o,l),u}var xc=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(Bd(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(ua(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof Fn.getEnv().Canvas?n:qm(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return xl(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return $A({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let n=xl(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof Le){let s=ua(a)?a:Kt(a);return s=gme(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=Qn.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof Fn.getEnv().Canvas)return Td.fromPixels(Nme(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Rt(n.map(r=>oe(r,"float32"))).as4D(this.batchSize,e,e,3)})}};async function gn(e){if(e instanceof xc)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(t1);return r.forEach((a,s)=>{if(!bI(a)&&!Bd(a)&&!ua(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ua(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(r.map(a=>bI(a)&&Ime(a))),new xc(r,Array.isArray(e))}async function jA(e,t){let{Canvas:n}=Fn.getEnv(),r=e;if(!(e instanceof n)){let s=await gn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:await Sme(i)}let a=Qa(r);return t.map(s=>s instanceof fr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let u=bc({width:o,height:l});return o>0&&l>0&&Qa(u).putImageData(a.getImageData(s,i,o,l),0,0),u})}async function qA(e,t){if(!Bd(e)&&!ua(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ua(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return W(()=>{let[n,r,a]=e.shape.slice(ua(e)?1:0);return t.map(s=>s instanceof fr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>Eu(e.as3D(n,r,a),[i,s,0],[l,o,a]))})}async function Tme(e,t){let{fetch:n}=Fn.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function Cme(e){return(await Tme(e)).json()}function KA(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function _me(e,t){let{manifestUri:n,modelBaseUri:r}=KA(e,t),a=await Cme(n);return nn.loadWeights(a,r)}function XA(e,t,n=!1){let{width:r,height:a}=n?a1(t):t;return e.width=r,e.height=a,{width:r,height:a}}var ms=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Ws)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Ws))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=cn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await _me(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=Fn.getEnv(),{manifestUri:n,modelBaseUri:r}=KA(e,this.getDefaultModelName()),a=l=>Promise.all(l.map(u=>t(u).then(p=>typeof p=="string"?Buffer.from(p):p.buffer))),s=nn.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Le))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function nr(e,t,n){return W(()=>{let r=_u(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Y(r,t.bias),r})}function jy(e,t,n=!1){return W(()=>{let r=tt(n?Y(mn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):nr(e,t.conv0,[2,2])),a=nr(r,t.conv1,[1,1]),s=tt(Y(r,a)),i=nr(s,t.conv2,[1,1]);return tt(Y(r,Y(a,i)))})}function Ah(e,t,n=!1,r=!0){return W(()=>{let a=tt(n?Y(mn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):nr(e,t.conv0,r?[2,2]:[1,1])),s=nr(a,t.conv1,[1,1]),i=tt(Y(a,s)),o=nr(i,t.conv2,[1,1]),l=tt(Y(a,Y(s,o))),u=nr(l,t.conv3,[1,1]);return tt(Y(a,Y(s,Y(o,u))))})}function yp(e,t,n="same",r=!1){return W(()=>{let a=Y(mn(e,t.filters,[1,1],n),t.bias);return r?tt(a):a})}function fs(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function s1(e,t){return(n,r,a,s)=>{let i=ja(e(n*r*a*a),[a,a,n,r]),o=Qe(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function ZA(e,t){return(n,r,a)=>{let s=Ur(e(n*r),[n,r]),i=Qe(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var JA=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function i1(e,t){return(n,r,a)=>{let s=ja(e(9*n),[3,3,n,1]),i=ja(e(n*r),[1,1,n,r]),o=Qe(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new JA(s,i,o)}}function o1(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new JA(n,r,a)}}function Oo(e,t){return(n,r,a)=>{let s=e[n];if(!Uu(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function gs(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function YA(e,t){let n=s1(e,t),r=i1(e,t);function a(i,o,l,u=!1){let p=u?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),h=r(o,o,`${l}/conv1`),d=r(o,o,`${l}/conv2`);return{conv0:p,conv1:h,conv2:d}}function s(i,o,l,u=!1){let{conv0:p,conv1:h,conv2:d}=a(i,o,l,u),c=r(o,o,`${l}/conv3`);return{conv0:p,conv1:h,conv2:d,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Eme(e){let t=[],{extractWeights:n,getRemainingWeights:r}=gs(e),{extractDenseBlock4Params:a}=YA(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function QA(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function eF(e,t){let n=Oo(e,t),r=QA(n),a=o1(n);function s(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),p=a(`${o}/conv1`),h=a(`${o}/conv2`);return{conv0:u,conv1:p,conv2:h}}function i(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),p=a(`${o}/conv1`),h=a(`${o}/conv2`),d=a(`${o}/conv3`);return{conv0:u,conv1:p,conv2:h,conv3:d}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function $me(e){let t=[],{extractDenseBlock4Params:n}=eF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return fs(e,t),{params:r,paramMappings:t}}var tF=class extends ms{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=Wd(n,[122.782,117.001,104.298]).div(255),a=Ah(r,t.dense0,!0);return a=Ah(a,t.dense1),a=Ah(a,t.dense2),a=Ah(a,t.dense3),a=fa(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await gn(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return $me(e)}extractParams(e){return Eme(e)}};function ex(e,t){return W(()=>Y(Re(e,t.weights),t.bias))}function Ame(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=gs(e),i=ZA(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function Fme(e){let t=[],n=Oo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return fs(e,t),{params:a,paramMappings:t}}function nF(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var rF=class extends ms{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof xc?this.faceFeatureExtractor.forwardInput(e):e;return ex(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Ame(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=nF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Fme(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},xI=["neutral","happy","sad","angry","fearful","disgusted","surprised"],l1=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);xI.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return xI.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},Rme=class extends rF{constructor(e=new tF){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>ls(this.runNet(e)))}async forward(e){return this.forwardInput(await gn(e))}async predictExpressions(e){let t=await gn(e),n=await this.forwardInput(t),r=await Promise.all(Nt(n).map(async s=>{let i=s.dataSync();return s.dispose(),i}));n.dispose();let a=r.map(s=>new l1(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Dme(e){return e.expressions instanceof l1}function Mme(e,t){return{...e,expressions:t}}function Ome(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof l1?a:Dme(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=Lp(a)?a.detection.box.bottomLeft:r||new st(0,0);new r1(i.map(l=>`${l.expression} (${J0(l.probability)})`),o).draw(e)})}function u1(e){return Lp(e)&&e.landmarks instanceof Op&&e.unshiftedLandmarks instanceof Op&&e.alignedRect instanceof fr}function Lme(e){let t=l=>l*180/Math.PI,n=(l,u)=>Math.sqrt((l.x-u.x)**2+(l.y-u.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(l,u,p)=>{let h=Math.floor(l.x-u.x),d=Math.floor(u.x-p.x);return h-d},s=(l,u)=>{let p=Math.hypot(u.x-l.x,u.y-l.y),h=u.y-l.y,d=Math.asin(h/p),c=t(d),m=Math.floor(90-c),f=u.x-l.x<0?-1:1;return m*f},i=(l,u,p)=>{let h=n(l,p),d=new st((l.x+p.x)/2,(l.y+p.y)/2),c=n(u,d),m=Math.atan(c/h),f=Math.floor(t(m)),g=d.y-u.y<0?-1:1;return f*g};if(!e||!e.positions||e.positions.length!==68)return r;let o=e.positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function aF(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new fr(e.detection.score,a.rescale(s.reverse()),s),o=Lme(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var sF=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},iF=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new sF(t)}draw(e){let t=Qa(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof OA&&(t.strokeStyle=s,t.lineWidth=a,Ea(t,this.faceLandmarks.getJawOutline()),Ea(t,this.faceLandmarks.getLeftEyeBrow()),Ea(t,this.faceLandmarks.getRightEyeBrow()),Ea(t,this.faceLandmarks.getNose()),Ea(t,this.faceLandmarks.getLeftEye(),!0),Ea(t,this.faceLandmarks.getRightEye(),!0),Ea(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let l=u=>{t.beginPath(),t.arc(u.x,u.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(l)}}};function zme(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Op?n:u1(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new iF(r).draw(e)})}function Pme(e,t){let n=s1(e,t),r=i1(e,t);function a(i,o,l){let u=r(i,o,`${l}/separable_conv0`),p=r(o,o,`${l}/separable_conv1`),h=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:u,separable_conv1:p,expansion_conv:h}}function s(i,o){let l=r(i,i,`${o}/separable_conv0`),u=r(i,i,`${o}/separable_conv1`),p=r(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:p}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Bme(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=gs(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Pme(r,n),u=s(3,32,3,"entry_flow/conv_in"),p=o(32,64,"entry_flow/reduction_block_0"),h=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:u,reduction_block_0:p,reduction_block_1:h},c={};xl(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}function Wme(e,t){let n=Oo(e,t),r=QA(n),a=o1(n);function s(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),p=r(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:u,expansion_conv:p}}function i(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),p=a(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:p}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function Vme(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=Wme(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),p={conv_in:o,reduction_block_0:l,reduction_block_1:u},h={};xl(t,0,1).forEach(f=>{h[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let d=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),m={reduction_block:d,separable_conv:c};return fs(e,n),{params:{entry_flow:p,middle_flow:h,exit_flow:m},paramMappings:n}}function oF(e,t,n){return Y(mn(e,t.filters,n,"same"),t.bias)}function qy(e,t,n=!0){let r=n?tt(e):e;return r=nr(r,t.separable_conv0,[1,1]),r=nr(tt(r),t.separable_conv1,[1,1]),r=Ht(r,[3,3],[2,2],"same"),r=Y(r,oF(e,t.expansion_conv,[2,2])),r}function Ume(e,t){let n=nr(tt(e),t.separable_conv0,[1,1]);return n=nr(tt(n),t.separable_conv1,[1,1]),n=nr(tt(n),t.separable_conv2,[1,1]),n=Y(n,e),n}var Gme=class extends ms{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=Wd(n,[122.782,117.001,104.298]).div(255),a=tt(oF(r,t.entry_flow.conv_in,[2,2]));return a=qy(a,t.entry_flow.reduction_block_0,!1),a=qy(a,t.entry_flow.reduction_block_1),xl(this._numMainBlocks,0,1).forEach(s=>{a=Ume(a,t.middle_flow[`main_block_${s}`])}),a=qy(a,t.exit_flow.reduction_block),a=tt(nr(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await gn(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Vme(e,this._numMainBlocks)}extractParams(e){return Bme(e,this._numMainBlocks)}};function Hme(e){let t=[],{extractWeights:n,getRemainingWeights:r}=gs(e),a=ZA(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function jme(e){let t=[],n=Oo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return fs(e,t),{params:a,paramMappings:t}}var qme=(e=>(e.FEMALE="female",e.MALE="male",e))(qme||{}),Kme=class extends ms{constructor(e=new Gme(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof xc?this.faceFeatureExtractor.forwardInput(e):e,r=fa(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=ex(r,t.fc.age).as1D(),s=ex(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return W(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:ls(n)}})}async forward(e){return this.forwardInput(await gn(e))}async predictAgeAndGender(e){let t=await gn(e),n=await this.forwardInput(t),r=Nt(n.age),a=Nt(n.gender),s=r.map((o,l)=>({ageTensor:o,genderTensor:a[l]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:l})=>{let u=o.dataSync()[0],p=l.dataSync()[0],h=p>.5,d=h?"male":"female",c=h?p:1-p;return o.dispose(),l.dispose(),{age:u,gender:d,genderProbability:c}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Hme(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=nF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),jme(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},lF=class extends rF{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return W(()=>{let s=(u,p)=>Rt([Vn([68],u,"float32"),Vn([68],p,"float32")],1).as2D(1,136).as1D(),i=(u,p)=>{let{width:h,height:d}=r[u];return p(h,d)?Math.abs(h-d)/2:0},o=u=>i(u,(p,h)=>p<h),l=u=>i(u,(p,h)=>h<p);return e.mul(Vn([a,136],t,"float32")).sub(Rt(Array.from(Array(a),(u,p)=>s(o(p),l(p))))).div(Rt(Array.from(Array(a),(u,p)=>s(r[p].width,r[p].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}async forward(e){return this.forwardInput(await gn(e))}async detectLandmarks(e){let t=await gn(e),n=W(()=>Nt(this.forwardInput(t))),r=await Promise.all(n.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((u,p)=>Zb(p)),l=i.filter((u,p)=>!Zb(p));return new OA(Array(68).fill(0).map((u,p)=>new st(o[p],l[p])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},Xme=class extends lF{constructor(e=new tF){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function Zme(e){let t=[],{extractDenseBlock3Params:n}=eF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return fs(e,t),{params:r,paramMappings:t}}function Jme(e){let t=[],{extractWeights:n,getRemainingWeights:r}=gs(e),{extractDenseBlock3Params:a}=YA(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var Yme=class extends ms{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=Wd(n,[122.782,117.001,104.298]).div(255),a=jy(r,t.dense0,!0);return a=jy(a,t.dense1),a=jy(a,t.dense2),a=fa(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await gn(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return Zme(e)}extractParams(e){return Jme(e)}},Qme=class extends lF{constructor(e=new Yme){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function efe(e,t){return Y(z(e,t.weights),t.biases)}function p1(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=mn(e,s,n,a);return o=Y(o,i),o=efe(o,t.scale),r?tt(o):o}function tfe(e,t){return p1(e,t,[1,1],!0)}function uF(e,t){return p1(e,t,[1,1],!1)}function pF(e,t){return p1(e,t,[2,2],!0,"valid")}function nfe(e,t){function n(o,l,u){let p=e(o),h=p.length/(l*u*u);if(EA(h))throw new Error(`depth has to be an integer: ${h}, weights.length: ${p.length}, numFilters: ${l}, filterSize: ${u}`);return W(()=>De(ja(p,[l,h,u,u]),[2,3,1,0]))}function r(o,l,u,p){let h=n(o,l,u),d=Qe(e(l));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/bias`}),{filters:h,bias:d}}function a(o,l){let u=Qe(e(o)),p=Qe(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:u,biases:p}}function s(o,l,u,p){let h=r(o,l,u,`${p}/conv`),d=a(l,`${p}/scale`);return{conv:h,scale:d}}function i(o,l,u,p,h=!1){let d=s((h?.5:1)*o,l,u,`${p}/conv1`),c=s(o,l,u,`${p}/conv2`);return{conv1:d,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function rfe(e){let{extractWeights:t,getRemainingWeights:n}=gs(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=nfe(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),I=W(()=>De(Ur(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:h,conv64_2:d,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:I},paramMappings:r}}function afe(e,t){let n=Oo(e,t);function r(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),u=r(i);return{conv:{filters:o,bias:l},scale:u}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function sfe(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=afe(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!_A(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:h,conv128_down:d,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return fs(e,t),{params:w,paramMappings:t}}function Rr(e,t){let n=tfe(e,t.conv1);return n=uF(n,t.conv2),n=Y(n,e),n=tt(n),n}function Fh(e,t){let n=pF(e,t.conv1);n=uF(n,t.conv2);let r=fa(e,2,2,"valid"),a=kt(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=kt(i);n=ot([n,o],1);let l=[...n.shape];l[2]=1;let u=kt(l);n=ot([n,u],2)}return r=s?ot([r,a],3):r,n=Y(r,n),n=tt(n),n}var ife=class extends ms{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(150,!0),"float32"),r=Wd(n,[122.782,117.001,104.298]).div(255),a=pF(r,t.conv32_down);a=Ht(a,3,2,"valid"),a=Rr(a,t.conv32_1),a=Rr(a,t.conv32_2),a=Rr(a,t.conv32_3),a=Fh(a,t.conv64_down),a=Rr(a,t.conv64_1),a=Rr(a,t.conv64_2),a=Rr(a,t.conv64_3),a=Fh(a,t.conv128_down),a=Rr(a,t.conv128_1),a=Rr(a,t.conv128_2),a=Fh(a,t.conv256_down),a=Rr(a,t.conv256_1),a=Rr(a,t.conv256_2),a=Fh(a,t.conv256_down_out);let s=a.mean([1,2]);return Re(s,t.fc)})}async forward(e){return this.forwardInput(await gn(e))}async computeFaceDescriptor(e){var t;if((t=e?.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=await gn(e),r=W(()=>Nt(this.forwardInput(n))),a=await Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return sfe(e)}extractParams(e){return rfe(e)}};function ofe(e,t){return{...e,descriptor:t}}function lfe(e,t){return{...e,age:t}}function ufe(e,t,n){return{...e,gender:t,genderProbability:n}}function pfe(e,t){function n(l,u){let p=ja(e(9*l),[3,3,l,1]),h=Qe(e(l)),d=Qe(e(l)),c=Qe(e(l)),m=Qe(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:p,batch_norm_scale:h,batch_norm_offset:d,batch_norm_mean:c,batch_norm_variance:m}}function r(l,u,p,h,d){let c=ja(e(l*u*p*p),[p,p,l,u]),m=Qe(e(u));return t.push({paramPath:`${h}/filters`},{paramPath:`${h}/${d?"batch_norm_offset":"bias"}`}),{filters:c,bias:m}}function a(l,u,p,h){let{filters:d,bias:c}=r(l,u,p,h,!0);return{filters:d,batch_norm_offset:c}}function s(l,u,p){let h=n(l,`${p}/depthwise_conv`),d=a(l,u,1,`${p}/pointwise_conv`);return{depthwise_conv:h,pointwise_conv:d}}function i(){let l=a(3,32,3,"mobilenetv1/conv_0"),u=s(32,64,"mobilenetv1/conv_1"),p=s(64,128,"mobilenetv1/conv_2"),h=s(128,128,"mobilenetv1/conv_3"),d=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),w=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:u,conv_2:p,conv_3:h,conv_4:d,conv_5:c,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:w,conv_13:I}}function o(){let l=a(1024,256,1,"prediction_layer/conv_0"),u=a(256,512,3,"prediction_layer/conv_1"),p=a(512,128,1,"prediction_layer/conv_2"),h=a(128,256,3,"prediction_layer/conv_3"),d=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),m=a(256,64,1,"prediction_layer/conv_6"),f=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),w=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),N=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),C=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:u,conv_2:p,conv_3:h,conv_4:d,conv_5:c,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:w,class_predictor:I},box_predictor_3:{box_encoding_predictor:N,class_predictor:C},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function dfe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=gs(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=pfe(n,t),i=a(),o=s(),l={extra_dim:om(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function hfe(e,t){let n=Oo(e,t);function r(u,p,h){let d=n(`${u}/Conv2d_${p}_pointwise/weights`,4,`${h}/filters`),c=n(`${u}/Conv2d_${p}_pointwise/convolution_bn_offset`,1,`${h}/batch_norm_offset`);return{filters:d,batch_norm_offset:c}}function a(u){let p=`mobilenetv1/conv_${u}`,h=`MobilenetV1/Conv2d_${u}_depthwise`,d=`${p}/depthwise_conv`,c=`${p}/pointwise_conv`,m=n(`${h}/depthwise_weights`,4,`${d}/filters`),f=n(`${h}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),g=n(`${h}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),y=n(`${h}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),b=n(`${h}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",u,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(u,p){let h=n(`${u}/weights`,4,`${p}/filters`),d=n(`${u}/biases`,1,`${p}/bias`);return{filters:h,bias:d}}function o(u){let p=i(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),h=i(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`);return{box_encoding_predictor:p,class_predictor:h}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function cfe(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=hfe(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Bd(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return fs(e,t),{params:s,paramMappings:t}}function Or(e,t,n){return W(()=>{let r=mn(e,t.filters,n,"same");return r=Y(r,t.batch_norm_offset),on(r,0,6)})}var mfe=.0010000000474974513;function ffe(e,t,n){return W(()=>{let r=To(e,t.filters,n,"same");return r=No(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,mfe),on(r,0,6)})}function gfe(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function yfe(e,t){return W(()=>{let n,r=Or(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=gfe(i);r=ffe(r,a.depthwise_conv,o),r=Or(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function bfe(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(p-l)*(h-u);if(d<=0||c<=0)return 0;let m=Math.max(a,l),f=Math.max(s,u),g=Math.min(i,p),y=Math.min(o,h),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(d+c-b)}function xfe(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((p,h)=>({score:p,boxIndex:h})).filter(p=>p.score>a).sort((p,h)=>h.score-p.score),l=p=>p<=r?1:0,u=[];return o.forEach(p=>{if(u.length>=i)return;let h=p.score;for(let d=u.length-1;d>=0;--d){let c=bfe(e,p.boxIndex,u[d]);if(c!==0&&(p.score*=l(c),p.score<=a))break}h===p.score&&u.push(p.boxIndex)}),u}function wfe(e){let t=Nt(De(e,[1,0])),n=[he(t[2],t[0]),he(t[3],t[1])],r=[Y(t[0],me(n[0],2)),Y(t[1],me(n[1],2))];return{sizes:n,centers:r}}function vfe(e,t){let{sizes:n,centers:r}=wfe(e),a=Nt(De(t,[1,0])),s=me(z(ln(me(a[2],5)),n[0]),2),i=Y(z(me(a[0],10),n[0]),r[0]),o=me(z(ln(me(a[3],5)),n[1]),2),l=Y(z(me(a[1],10),n[1]),r[1]);return De(Rt([he(i,s),he(l,o),Y(i,s),Y(l,o)]),[1,0])}function kfe(e,t,n){return W(()=>{let r=e.shape[0],a=vfe(P(Wn(n.extra_dim,[r,1,1]),[-1,4]),P(e,[-1,4]));a=P(a,[r,a.shape[0]/r,4]);let s=cr(Ue(t,[0,0,1],[-1,-1,-1])),i=Ue(s,[0,0,0],[-1,-1,1]);i=P(i,[r,i.shape[1]]);let o=Nt(a),l=Nt(i);return{boxes:o,scores:l}})}function qo(e,t){return W(()=>{let n=e.shape[0],r=P(yp(e,t.box_encoding_predictor),[n,-1,1,4]),a=P(yp(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Ife(e,t,n){return W(()=>{let r=Or(e,n.conv_0,[1,1]),a=Or(r,n.conv_1,[2,2]),s=Or(a,n.conv_2,[1,1]),i=Or(s,n.conv_3,[2,2]),o=Or(i,n.conv_4,[1,1]),l=Or(o,n.conv_5,[2,2]),u=Or(l,n.conv_6,[1,1]),p=Or(u,n.conv_7,[2,2]),h=qo(t,n.box_predictor_0),d=qo(e,n.box_predictor_1),c=qo(a,n.box_predictor_2),m=qo(i,n.box_predictor_3),f=qo(l,n.box_predictor_4),g=qo(p,n.box_predictor_5),y=ot([h.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=ot([h.classPrediction,d.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Km=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Sfe=class extends ms{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(512,!1),"float32"),r=he(me(n,127.5),1),a=yfe(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Ife(a.out,a.conv11,t.prediction_layer);return kfe(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await gn(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Km(t),a=await gn(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),p=xfe(o,u,n,.5,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/h.width,m=d/h.height,f=o.arraySync(),g=p.map(y=>{let[b,x]=[Math.max(0,f[y][0]),Math.min(1,f[y][2])].map(N=>N*m),[w,I]=[Math.max(0,f[y][1]),Math.min(1,f[y][3])].map(N=>N*c);return new fr(u[y],new MA(w,b,I-w,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return cfe(e)}extractParams(e){return dfe(e)}};var Nfe=.4,Tfe=[new st(.738768,.874946),new st(2.42204,2.65704),new st(4.30971,7.04493),new st(10.246,4.59428),new st(12.6868,11.8741)],Cfe=[new st(1.603231,2.094468),new st(6.041143,7.080126),new st(2.882459,3.518061),new st(4.266906,5.178857),new st(9.041765,10.66308)],_fe=[117.001,114.697,97.404],Efe="tiny_yolov2_model",$fe="tiny_yolov2_separable_conv_model",Rh=e=>typeof e=="number";function Afe(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Rh(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Rh(t.x)&&Rh(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Rh)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function d1(e){return W(()=>{let t=z(e,we(.10000000149011612));return Y(tt(he(e,t)),t)})}function Na(e,t){return W(()=>{let n=$r(e,[[0,0],[1,1],[1,1],[0,0]]);return n=mn(n,t.conv.filters,[1,1],"valid"),n=he(n,t.bn.sub),n=z(n,t.bn.truediv),n=Y(n,t.conv.bias),d1(n)})}function Ta(e,t){return W(()=>{let n=$r(e,[[0,0],[1,1],[1,1],[0,0]]);return n=_u(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Y(n,t.bias),d1(n)})}function Ffe(e,t){let n=s1(e,t);function r(i,o){let l=Qe(e(i)),u=Qe(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:u}}function a(i,o,l){let u=n(i,o,3,`${l}/conv`),p=r(o,`${l}/bn`);return{conv:u,bn:p}}let s=i1(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Rfe(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=gs(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:u}=Ffe(a,i),p;if(t.withSeparableConvs){let[h,d,c,m,f,g,y,b,x]=r,w=t.isFirstLayerConv2d?o(h,d,3,"conv0"):u(h,d,"conv0"),I=u(d,c,"conv1"),N=u(c,m,"conv2"),C=u(m,f,"conv3"),E=u(f,g,"conv4"),A=u(g,y,"conv5"),R=b?u(y,b,"conv6"):void 0,F=x?u(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");p={conv0:w,conv1:I,conv2:N,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}else{let[h,d,c,m,f,g,y,b,x]=r,w=l(h,d,"conv0"),I=l(d,c,"conv1"),N=l(c,m,"conv2"),C=l(m,f,"conv3"),E=l(f,g,"conv4"),A=l(g,y,"conv5"),R=l(y,b,"conv6"),F=l(b,x,"conv7"),S=o(x,5*n,1,"conv8");p={conv0:w,conv1:I,conv2:N,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:p,paramMappings:i}}function Dfe(e,t){let n=Oo(e,t);function r(o){let l=n(`${o}/sub`,1),u=n(`${o}/truediv`,1);return{sub:l,truediv:u}}function a(o){let l=n(`${o}/filters`,4),u=n(`${o}/bias`,1);return{filters:l,bias:u}}function s(o){let l=a(`${o}/conv`),u=r(`${o}/bn`);return{conv:l,bn:u}}let i=o1(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Mfe(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=Dfe(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return fs(e,n),{params:i,paramMappings:n}}var h1=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},dF=class hF extends ms{constructor(t){super("TinyYolov2"),Afe(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let r=Na(t,n.conv0);return r=Ht(r,[2,2],[2,2],"same"),r=Na(r,n.conv1),r=Ht(r,[2,2],[2,2],"same"),r=Na(r,n.conv2),r=Ht(r,[2,2],[2,2],"same"),r=Na(r,n.conv3),r=Ht(r,[2,2],[2,2],"same"),r=Na(r,n.conv4),r=Ht(r,[2,2],[2,2],"same"),r=Na(r,n.conv5),r=Ht(r,[2,2],[1,1],"same"),r=Na(r,n.conv6),r=Na(r,n.conv7),yp(r,n.conv8,"valid",!1)}runMobilenet(t,n){let r=this.config.isFirstLayerConv2d?d1(yp(t,n.conv0,"valid",!1)):Ta(t,n.conv0);return r=Ht(r,[2,2],[2,2],"same"),r=Ta(r,n.conv1),r=Ht(r,[2,2],[2,2],"same"),r=Ta(r,n.conv2),r=Ht(r,[2,2],[2,2],"same"),r=Ta(r,n.conv3),r=Ht(r,[2,2],[2,2],"same"),r=Ta(r,n.conv4),r=Ht(r,[2,2],[2,2],"same"),r=Ta(r,n.conv5),r=Ht(r,[2,2],[1,1],"same"),r=n.conv6?Ta(r,n.conv6):r,r=n.conv7?Ta(r,n.conv7):r,yp(r,n.conv8,"valid",!1)}forwardInput(t,n){let{params:r}=this;if(!r)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let a=oe(t.toBatchTensor(n,!1),"float32");return a=this.config.meanRgb?Wd(a,this.config.meanRgb):a,a=a.div(255),this.config.withSeparableConvs?this.runMobilenet(a,r):this.runTinyYolov2(a,r)})}async forward(t,n){return this.forwardInput(await gn(t),n)}async detect(t,n={}){let{inputSize:r,scoreThreshold:a}=new h1(n),s=await gn(t),i=await this.forwardInput(s,r),o=W(()=>Nt(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},u=await this.extractBoxes(o,s.getReshapedInputDimensions(0),a);i.dispose(),o.dispose();let p=u.map(m=>m.box),h=u.map(m=>m.score),d=u.map(m=>m.classScore),c=u.map(m=>this.config.classes[m.label]);return fme(p.map(m=>m.rescale(r)),h,this.config.iouThreshold,!0).map(m=>new FA(h[m],d[m],c[m],p[m],l))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return Mfe(t,this.config)}extractParams(t){let n=this.config.filterSizes||hF.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(r!==7&&r!==8&&r!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return Rfe(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,r){let{width:a,height:s}=n,i=Math.max(a,s),o=i/a,l=i/s,u=t.shape[1],p=this.config.anchors.length,[h,d,c]=W(()=>{let y=t.reshape([u,u,p,this.boxEncodingSize]),b=y.slice([0,0,0,0],[u,u,p,4]),x=y.slice([0,0,0,4],[u,u,p,1]),w=this.withClassScores?ls(y.slice([0,0,0,5],[u,u,p,this.config.classes.length]),3):we(0);return[b,x,w]}),m=[],f=await d.array(),g=await h.array();for(let y=0;y<u;y++)for(let b=0;b<u;b++)for(let x=0;x<p;x++){let w=Hy(f[y][b][x][0]);if(!r||w>r){let I=(b+Hy(g[y][b][x][0]))/u*o,N=(y+Hy(g[y][b][x][1]))/u*l,C=Math.exp(g[y][b][x][2])*this.config.anchors[x].x/u*o,E=Math.exp(g[y][b][x][3])*this.config.anchors[x].y/u*l,A=I-C/2,R=N-E/2,F={row:y,col:b,anchor:x},{classScore:S,label:M}=this.withClassScores?await this.extractPredictedClass(c,F):{classScore:1,label:0};m.push({box:new AA(A,R,A+C,R+E),score:w,classScore:w*S,label:M,...F})}}return h.dispose(),d.dispose(),c.dispose(),m}async extractPredictedClass(t,n){let{row:r,col:a,anchor:s}=n,i=await t.array();return Array(this.config.classes.length).fill(0).map((o,l)=>i[r][a][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)}};dF.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var cF=dF,Ofe=class extends cF{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:Nfe,classes:["face"],...e?{anchors:Cfe,meanRgb:_fe}:{anchors:Tfe,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new fr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?$fe:Efe}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var c1=class extends h1{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},Vd=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function m1(e,t,n,r,a=({alignedRect:s})=>s){let s=e.map(l=>u1(l)?a(l):l.detection),i=r||(t instanceof Le?await qA(t,s):await jA(t,s)),o=await n(i);return i.forEach(l=>l instanceof Le&&l.dispose()),o}var Lfe=.4,zfe=[new st(1.603231,2.094468),new st(6.041143,7.080126),new st(2.882459,3.518061),new st(4.266906,5.178857),new st(9.041765,10.66308)],Pfe=[117.001,114.697,97.404],Bfe=class extends cF{constructor(){let e={withSeparableConvs:!0,iouThreshold:Lfe,classes:["face"],anchors:zfe,meanRgb:Pfe,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new fr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},Hr={ssdMobilenetv1:new Sfe,tinyFaceDetector:new Bfe,tinyYolov2:new Ofe,faceLandmark68Net:new Xme,faceLandmark68TinyNet:new Qme,faceRecognitionNet:new ife,faceExpressionNet:new Rme,ageGenderNet:new Kme};var Wfe=class extends Vd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},f1=class extends Wfe{async run(){let e=await this.parentTask,t=await m1(e,this.input,async n=>Promise.all(n.map(r=>Hr.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return e.map((n,r)=>Mme(n,t[r]))}withAgeAndGender(){return new y1(this,this.input)}};var g1=class extends f1{withAgeAndGender(){return new b1(this,this.input)}withFaceDescriptors(){return new x1(this,this.input)}};var Vfe=class extends Vd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},y1=class extends Vfe{async run(){let e=await this.parentTask,t=await m1(e,this.input,async n=>Promise.all(n.map(r=>Hr.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return lfe(ufe(n,s,i),a)})}withFaceExpressions(){return new f1(this,this.input)}};var b1=class extends y1{withFaceExpressions(){return new g1(this,this.input)}withFaceDescriptors(){return new x1(this,this.input)}};var Ufe=class extends Vd{constructor(e,t){super(),this.parentTask=e,this.input=t}},x1=class extends Ufe{async run(){let e=await this.parentTask;return(await m1(e,this.input,t=>Promise.all(t.map(n=>Hr.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>ofe(e[n],t))}withFaceExpressions(){return new g1(this,this.input)}withAgeAndGender(){return new b1(this,this.input)}};var Gfe=class extends Vd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?Hr.faceLandmark68TinyNet:Hr.faceLandmark68Net}},Hfe=class extends Gfe{async run(){let e=await this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof Le?await qA(this.input,t):await jA(this.input,t),r=await Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof Le&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>aF(a,r[s]))}withFaceExpressions(){return new g1(this,this.input)}withAgeAndGender(){return new b1(this,this.input)}withFaceDescriptors(){return new x1(this,this.input)}};var jfe=class extends Vd{constructor(e,t=new Km){super(),this.input=e,this.options=t}},qfe=class extends jfe{async run(){let{input:e,options:t}=this,n;if(t instanceof c1)n=Hr.tinyFaceDetector.locateFaces(e,t);else if(t instanceof Km)n=Hr.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof h1)n=Hr.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>Yb({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Hfe(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new f1(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new y1(this.runAndExtendWithFaceDetections(),this.input)}};function mF(e,t=new Km){return new qfe(e,t)}function w1(e,t){let{width:n,height:r}=new Os(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>w1(a,{width:n,height:r}));if(u1(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return aF(Yb(e,a),s)}return Lp(e)?Yb(e,e.detection.forSize(n,r)):e instanceof Op||e instanceof fr?e.forSize(n,r):e}async function Xfe(){console.log("Starting.....");let e=await window.navigator.mediaDevices.getUserMedia({video:{width:300,height:300},audio:!1}),t=document.getElementById("source");t.srcObject=e,await t.play(),await Hr.tinyFaceDetector.loadFromUri("https://github.com/dwyl/webrtc-sfu-demo/blob/main/assets/model/");async function n(o){let l={width:o.width,height:o.height},u=qm(o);XA(u,l);async function p(){u.getContext("2d").drawImage(o,0,0,l.width,l.height);let d=await mF(o,new c1),c=w1(d,l);Z0.drawDetections(u,c),o.requestVideoFrameCallback(p)}return o.requestVideoFrameCallback(p),u.captureStream(30)}let r=await n(t),a={iceServers:[{urls:"stun:stun.l.google.com:19302"}]},s=new RTCPeerConnection(a);r.getTracks().forEach(o=>s.addTrack(o,e)),s.onicecandidate=({candidate:o})=>{o!==null&&ctx.pushEvent("ice",{candidate:o.toJSON(),type:"ice"})},s.onnegotiationneeded=async()=>{let o=await s.createOffer();await s.setLocalDescription(o),console.log("--> Offer created and sent"),ctx.pushEvent("offer",{sdp:o})},s.ontrack=({streams:o})=>{console.log("--> Received remote track");let l=document.querySelector("#echo");l.srcObject=o[0]},ctx.handleEvent("ice",async({candidate:o})=>{await s.addIceCandidate(o)}),ctx.handleEvent("answer",async o=>{console.log("--> handled Answer"),await s.setRemoteDescription(o)}),s.onconnectionstatechange=()=>{console.log("~~> Connection state: ",s.connectionState)}}Xfe();})();
//# sourceMappingURL=main.js.map
